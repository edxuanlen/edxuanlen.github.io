{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/BlueLake/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/style-dark.styl","path":"css/style-dark.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","path":"iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","path":"iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","path":"iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","path":"iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/search.json.js","path":"js/search.json.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/toctotop.js","path":"js/toctotop.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/img/bg.jpg","path":"img/bg.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/img/bg-dark.jpg","path":"img/bg-dark.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/share/css/share.styl","path":"share/css/share.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/share/fonts/iconfont.eot","path":"share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/share/fonts/iconfont.svg","path":"share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/share/fonts/iconfont.ttf","path":"share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/share/fonts/iconfont.woff","path":"share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/share/js/qrcode.js","path":"share/js/qrcode.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/share/js/social-share.js","path":"share/js/social-share.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_CNAME","hash":"c99d31459b7cbe210843d9a01a1153d308fa3805","modified":1569135731384},{"_id":"source/apple-touch-icon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1569141101901},{"_id":"source/favicon.ico","hash":"79bb6c43618aa139b643ea6af2f7fd5a0539e35c","modified":1569141302608},{"_id":"themes/BlueLake/LICENSE","hash":"3e191ca3f51efc111863c4941051291a696ef43e","modified":1569136030082},{"_id":"themes/BlueLake/README.en.md","hash":"d63a2af0b9d371e3756bc65e688a8919a3593c25","modified":1569136030082},{"_id":"themes/BlueLake/README.md","hash":"d1bd3a2dd111d674870b1312fc9348a6950ecfce","modified":1569136030082},{"_id":"themes/BlueLake/_config.yml","hash":"fb2a8d57a5c499e1dafb17dca588b3561b119ffb","modified":1569168467456},{"_id":"themes/BlueLake/package.json","hash":"e06eea20c64b2821631a49e8902e645bad2c5102","modified":1569136030082},{"_id":"source/_posts/Catch-That-Cow.md","hash":"11fbcf9d093a8259f3d254c5ddaf21da8542bcfd","modified":1569135731384},{"_id":"source/_posts/Dungeon-Master.md","hash":"c6aa52128ec59c62e79417a33b328030de5368c5","modified":1569135731384},{"_id":"source/_posts/HTML.md","hash":"1adb269dd3036ef676aa841dced6be4951fdec78","modified":1569135731384},{"_id":"source/_posts/JS.md","hash":"c711e6b91573afac4bd70d6dc0a50fce64845b80","modified":1569135731384},{"_id":"source/_posts/PyMySQL初识.md","hash":"dced8c2e9f85f0e4228db3556fd5ca92c3c13644","modified":1569135731384},{"_id":"source/_posts/Python3-PIL图像处理.md","hash":"ef6445c2db390b2e18480269ecca8324ea899f43","modified":1569135731384},{"_id":"source/_posts/Python文件处理.md","hash":"7325687da800e7c406dc698c54e8350a6b890fb8","modified":1569135731384},{"_id":"source/_posts/STL之list.md","hash":"5bd4f21cd58db3f73ccd8fab830b219adbeede6e","modified":1569135731384},{"_id":"source/_posts/STL之map.md","hash":"cfbbe3a176346abb697d3562e10e641a21b587bc","modified":1569135731384},{"_id":"source/_posts/STL之set.md","hash":"0290abe9b5c0ff81f30052c848c1e57dfa69002e","modified":1569135731388},{"_id":"source/_posts/STL之sort和unique.md","hash":"687f5c565de9452a8139f8087cfc260d23fa2b85","modified":1569135731388},{"_id":"source/_posts/STL之stack-queue.md","hash":"186c61c92a0595962ecf45a7c9ffa8a9cd568a77","modified":1569135731388},{"_id":"source/_posts/STL之string.md","hash":"ddeb5b280a6f9f51e9a92d6e27db1e49bcf5020e","modified":1569135731388},{"_id":"source/_posts/STL之vector.md","hash":"d6423408db91584952cf1495f4d761f78851c69a","modified":1569135731388},{"_id":"source/_posts/Ubuntu-18-之旅.md","hash":"70de810e2103ad784cb7e1c78cbf1170568a8f77","modified":1569143858891},{"_id":"source/_posts/python-Django初识.md","hash":"2ffdb63003ac9ae5f267310532f98b5049e5e10f","modified":1569135731388},{"_id":"source/_posts/python爬取hdu题库.md","hash":"1aec75e4bd4ff4a7bec3748c00391a33c9478091","modified":1569135731388},{"_id":"source/_posts/redis配置与使用.md","hash":"7826ee72870cdc62096f154c0466afef92fc1588","modified":1569135731388},{"_id":"source/_posts/string-的使用.md","hash":"ffa6f9ae2ce654257099a53d0a40f2820faaa353","modified":1569135731388},{"_id":"source/_posts/不要62.md","hash":"fcac9ee23495fd49bc79b08e1e30c1f80eef7500","modified":1569135731388},{"_id":"source/_posts/乘积尾零数目.md","hash":"4f97e1f927473fc7ea1c54ed9b72b60035e268b6","modified":1569135731388},{"_id":"source/_posts/全排列.md","hash":"d59c5e44bd9aad5548a2573fd5035abd1cb21cde","modified":1569135731388},{"_id":"source/_posts/合并数字.md","hash":"4c3aab76b76cc982a9ee0f79969012dba31bc241","modified":1569135731388},{"_id":"source/_posts/最长公共子串LCS.md","hash":"db2cab49b5bb467137383710527f0de6a2330088","modified":1569135731388},{"_id":"source/_posts/最长公共子串LCS.md~","hash":"d2d31741eb72d0063368493880041b2af295f6a3","modified":1569135731388},{"_id":"source/_posts/最长递增序列LIS(n^2和nlog2n).md","hash":"1935ab06a28fb64c21777d6f6ac3ca1cef5eeee7","modified":1569135731388},{"_id":"source/_posts/棋盘问题.md","hash":"7d08d29639d7955c7ccc0db9416963c1e9bf0053","modified":1569135731388},{"_id":"source/_posts/第九届蓝桥杯试题、答案以及比赛经历.md","hash":"fddeff7f9154ff09d0b88d9684362f8916701e4d","modified":1569135731388},{"_id":"source/_posts/网站.md","hash":"f503410d135e0c999886c64c40ba933fd97de44f","modified":1569135731388},{"_id":"source/_posts/背包.md","hash":"a5aaf4fab60699a2d6e45c229ae28340f46c2d8f","modified":1569135731388},{"_id":"source/_posts/蓝桥杯试题集-入门训练.md","hash":"c14a3dd78e916c589056ffc2035b2caa2059c111","modified":1569135731388},{"_id":"source/_posts/蓝桥杯试题集-历届试题.md","hash":"fe81e3025dfbdd87dafcbaec80c1efcf8b8a0d6b","modified":1569135731388},{"_id":"source/_posts/蓝桥杯试题集-基础练习.md","hash":"a106d9d53adf1dadb1df9ab7762a1c5abcde2117","modified":1569135731388},{"_id":"source/_posts/蓝桥杯试题集-算法提高.md","hash":"2a419a8867127b07fc48e1cf1c2504639886d7f3","modified":1569135731388},{"_id":"source/_posts/蓝桥杯试题集-算法训练.md","hash":"4f604c3d9f6bf4c7160a7df318006a2e3814cb65","modified":1569135731388},{"_id":"source/_posts/蓝桥杯试题集.md","hash":"a4b7d44c2c70130a28ce3f292bb117016e5d2b54","modified":1569142782022},{"_id":"source/_posts/补蓝桥杯国赛.md","hash":"78648a9a43b3e06d6b5c415798219854f9518c4e","modified":1569135731388},{"_id":"source/_posts/解决写wyh的矩阵出现内存占用超过限制的问题.md","hash":"122f4179b4f5c71881b67e0967f03de7bf34ca40","modified":1569135731388},{"_id":"source/_posts/配置apache-tomcat.md","hash":"b56a3744b93ddddcabf965f0300e19dc7656b312","modified":1569135731388},{"_id":"source/about/index.md","hash":"285535f8635d7f54dd848ebb9c2227a8040878fd","modified":1569135731388},{"_id":"themes/BlueLake/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1569136030074},{"_id":"themes/BlueLake/.git/config","hash":"2cae29a06bbe4294fa78136833031d42847dd7e6","modified":1569136030074},{"_id":"themes/BlueLake/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1569136020474},{"_id":"themes/BlueLake/.git/index","hash":"5b2db76c72328934947d0a3c61c732270cc610be","modified":1569136030086},{"_id":"themes/BlueLake/.git/packed-refs","hash":"17f7f18a9fe469642095714d02d09a93d566b859","modified":1569136030074},{"_id":"themes/BlueLake/languages/de-DE.yml","hash":"9a6f8a63f5cdd7f579bf8310398301a759c2a6d2","modified":1569136030082},{"_id":"themes/BlueLake/languages/en.yml","hash":"a0f828574b5e90b83eeca4c5a80958459113f2b4","modified":1569136030082},{"_id":"themes/BlueLake/languages/es-ES.yml","hash":"bb4b241b45840234922ad4a170d42c9582c0c2ce","modified":1569136030082},{"_id":"themes/BlueLake/languages/fr-FR.yml","hash":"420566a5a200394e45841a2e2223b3fb9625680d","modified":1569136030082},{"_id":"themes/BlueLake/languages/ko.yml","hash":"27bac975b25998012fe7317b2cf3e6c253bc2ab2","modified":1569136030082},{"_id":"themes/BlueLake/languages/tr.yml","hash":"89a834a6b6616ac7289968cace76e2fbf0335787","modified":1569136030082},{"_id":"themes/BlueLake/languages/zh-CN.yml","hash":"7cb3fd09b74c39fbbed2b0e079d453c45b2085bf","modified":1569136030082},{"_id":"themes/BlueLake/languages/zh-TW.yml","hash":"f0ce05b7f99d7e8a37ce899b4875e5b03133cf2c","modified":1569136030082},{"_id":"themes/BlueLake/layout/archive.jade","hash":"0497469c869f0ac28f150295dbddf6920e6582c1","modified":1569136030082},{"_id":"themes/BlueLake/layout/base.jade","hash":"7ffc6e45a3693ce5c80ce8eb37fb394b4b3de453","modified":1569136030082},{"_id":"themes/BlueLake/layout/category.jade","hash":"384e2e2588ecab3f518f03f11f2b052d3827fad8","modified":1569136030082},{"_id":"themes/BlueLake/layout/index.jade","hash":"ec2a52c8e38c0f164efe591540d39602f82925b1","modified":1569136030082},{"_id":"themes/BlueLake/layout/page.jade","hash":"7d2a48f6a902605fd6cfc237e3c2f9c02d76492e","modified":1569136030082},{"_id":"themes/BlueLake/layout/post.jade","hash":"fcca4a1bb09cc5b7f1328f5871ef2b5d36abcb49","modified":1569136030082},{"_id":"themes/BlueLake/layout/tag.jade","hash":"835da21846c730f0e3e344dc7e2e59154030b4f7","modified":1569136030082},{"_id":"source/_posts/Python3-PIL图像处理/1.jpg","hash":"e0f6176cb4aecad74f7b464ea961749a0f052fc1","modified":1569135731384},{"_id":"source/_posts/STL之list/list.png","hash":"061c5439db44d0a5157cdc361977770eeb12f920","modified":1569135731384},{"_id":"source/_posts/STL之map/map.png","hash":"11e4216731469b39a8dbc388e476064d33ef1473","modified":1569135731388},{"_id":"source/_posts/STL之map/map1.png","hash":"4a2b4d79bc50226dcc7c585cc92f9adbe2469a71","modified":1569135731388},{"_id":"source/_posts/STL之set/set.png","hash":"f474a53fd5d20d468c44cb01d20b646b440a40f5","modified":1569135731388},{"_id":"source/_posts/STL之set/set1.png","hash":"842e8de0b971fd1f45cec243904610c976f99c5a","modified":1569135731388},{"_id":"source/_posts/STL之set/set2.png","hash":"598589a99350c2f49df2497c8ea2b48031862846","modified":1569135731388},{"_id":"source/_posts/STL之set/set3.png","hash":"ee07ed0a3a7c53b3e7f6e369ca0a57eb927ed679","modified":1569135731388},{"_id":"source/_posts/STL之sort和unique/sort&unique.png","hash":"6969547e97be5f8bf1bf61cd4233b96ac7057297","modified":1569135731388},{"_id":"source/_posts/STL之stack-queue/queue.png","hash":"73ad2a0230be0fed9ad4c509f164bb3d3a582665","modified":1569135731388},{"_id":"source/_posts/STL之stack-queue/queue1.png","hash":"082bc4312621471bf85671936f7b87a110ac96ea","modified":1569135731388},{"_id":"source/_posts/STL之stack-queue/stack.png","hash":"cd29fb95f26e2718d375eb41dcb338506479c824","modified":1569135731388},{"_id":"source/_posts/STL之string/string.png","hash":"86d77f1a35452dba515f55052054132f094a21eb","modified":1569135731388},{"_id":"source/_posts/STL之vector/vector.png","hash":"f4fe8e18fd88615a526a993f7ee7eda787d38e5a","modified":1569135731388},{"_id":"source/_posts/STL之vector/vector1.png","hash":"91f305cd3d57199f098f05f4b652041e381a3b72","modified":1569135731388},{"_id":"source/_posts/python爬取hdu题库/1.png","hash":"622416382c6734c0c52a3c06c89375f43edff2a4","modified":1569135731388},{"_id":"source/_posts/python爬取hdu题库/2.png","hash":"bd93fd97039884b1aea48e3b4fdc0d55958f6916","modified":1569135731388},{"_id":"source/_posts/“第九届蓝桥杯试题、答案以及比赛经历/1.png","hash":"c1cfdf7046c04a40d59902e31b66fb42709917e6","modified":1569135731388},{"_id":"source/_posts/“第九届蓝桥杯试题、答案以及比赛经历/2.png","hash":"862422b8487a5fe53f217ff5ee752144000600da","modified":1569135731388},{"_id":"source/_posts/不要62/1.png","hash":"7e34b657ff4fdf37c975ee13a0c7a5ba1402161d","modified":1569135731388},{"_id":"source/_posts/不要62/DP.png","hash":"b40ed2312674e4546e270a034a8409108fcab852","modified":1569135731388},{"_id":"source/_posts/全排列/1.png","hash":"f785e10b8f29429b94d6b5b845801befd48c7726","modified":1569135731388},{"_id":"source/_posts/全排列/2.png","hash":"819fd30bb03972745670b2f5777147d686352f31","modified":1569135731388},{"_id":"source/_posts/全排列/3.png","hash":"2033fb477e315017361a8ebb447a1d153d99910c","modified":1569135731388},{"_id":"source/_posts/合并数字/1.png","hash":"90b71cfa122c080cb805df0083adc4baa4098057","modified":1569135731388},{"_id":"source/_posts/最长公共子串LCS/lcs1.png","hash":"d33749e9145d43334a26e58ead57fca6a529528a","modified":1569135731388},{"_id":"source/_posts/最长递增序列LIS(n^2和nlog2n)/LIS.png","hash":"a9cc6d8940ca905d4cb1a2b16a6d4a85cb46a53d","modified":1569135731388},{"_id":"themes/BlueLake/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1569136020478},{"_id":"themes/BlueLake/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1569136020478},{"_id":"themes/BlueLake/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1569136020478},{"_id":"themes/BlueLake/.git/logs/HEAD","hash":"334f6f142612c3a94c087949916cd9336d05aab5","modified":1569136030074},{"_id":"themes/BlueLake/layout/_partial/after_footer.jade","hash":"e8e98c99b8f9e5f260403903b875a2f08bfb2577","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/comment_count.jade","hash":"52e4cacd58d5e0061924189ad75e0c3bf622aa7f","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/comments.jade","hash":"4a89bf43d750e0f53d2c2223057679e87baf411d","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/comments_js.jade","hash":"ebde5da62af045c5ff36882bbae08757c48c0cae","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/footer.jade","hash":"7736811d57583aa792f966ed260fb1e9b5a8e505","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/search.jade","hash":"1c988c7e1f716036e428ee16b8005a7b1bfb33c7","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/share.jade","hash":"095cd4eb2346c07dd30b166e7318d6e78449bd84","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1569136030082},{"_id":"themes/BlueLake/layout/_partial/totop.jade","hash":"3e4141538285aef2bd019832ba62bafd094c6097","modified":1569136030082},{"_id":"themes/BlueLake/layout/_widget/archive.jade","hash":"082ae16dad18ada28913772675861d7230134bea","modified":1569136030082},{"_id":"themes/BlueLake/layout/_widget/category.jade","hash":"ba43bd011d64cd86fa420677c9000d328f4f6114","modified":1569136030082},{"_id":"themes/BlueLake/layout/_widget/links.jade","hash":"ff46afdedc1ab3c075ffed686b98f23aed066124","modified":1569136030082},{"_id":"themes/BlueLake/layout/_widget/recent_comments.jade","hash":"f8ae55d5514fe493651ec04fbe73cb5fc482f7cd","modified":1569136030082},{"_id":"themes/BlueLake/layout/_widget/recent_posts.jade","hash":"a0309137277323f2fd61a3c6691e1bc51026f711","modified":1569136030082},{"_id":"themes/BlueLake/layout/_widget/tag.jade","hash":"3df9a00a21d3bc151026b2d403a99c28fe1ccd13","modified":1569136030082},{"_id":"themes/BlueLake/layout/_widget/weibo.jade","hash":"53e99461ae7f8efb2a1e78ad3090dd93d18bcd5c","modified":1569136030082},{"_id":"themes/BlueLake/source/css/highlight-dark.styl","hash":"e6079d1bfdb68b37b111bccc08e4f7d2be9f5eaa","modified":1569136030082},{"_id":"themes/BlueLake/source/css/highlight.styl","hash":"be9ad73454b7029311caafd8e1faa469a5d4f58d","modified":1569136030082},{"_id":"themes/BlueLake/source/css/style-dark.styl","hash":"68cb3f84977f08a2c92cd95a2017894768ab6c2d","modified":1569136030082},{"_id":"themes/BlueLake/source/css/style.styl","hash":"cab2b8f1797da5ad9b9dcd83ed95d6dd7fc33a7c","modified":1569136030082},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","hash":"e664dd848ca65fe3aca4acfc234ff9c18ffd4c33","modified":1569136030082},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","hash":"2b6a0b21bf63bdf746130117baf432fcb44ad210","modified":1569136030082},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","hash":"5770696cc0d19d9c9479912a5cf54c9dd4ab24c4","modified":1569136030082},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","hash":"df2bd849134cbd02beb385e5061a30b923c99058","modified":1569136030082},{"_id":"themes/BlueLake/source/js/search.json.js","hash":"a0e8dfee9b9845aabd64360d497df7c0767b7235","modified":1569136030086},{"_id":"themes/BlueLake/source/js/toctotop.js","hash":"ad6386bc746ff375715ca9da17af4716ea86e06a","modified":1569136030086},{"_id":"themes/BlueLake/source/js/totop.js","hash":"5b1131830209c2daaf6fe34c5e39ab7c1059bfa4","modified":1569136030086},{"_id":"source/_posts/最长公共子串LCS/lcs.png","hash":"3ae005fe75874e80a07c4e563ca0ea241f160747","modified":1569135731388},{"_id":"themes/BlueLake/source/img/bg.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1569136030086},{"_id":"themes/BlueLake/.git/objects/pack/pack-e04202ccbabe5955ded054772b79b92926500caf.idx","hash":"26d9275a6e1192ea7567ca70e55ce3d6dbeeb439","modified":1569136030062},{"_id":"themes/BlueLake/.git/refs/heads/master","hash":"7bf89b9f4d5033e80a60b21c825849f8cfbe38a6","modified":1569136030074},{"_id":"themes/BlueLake/source/img/bg-dark.jpg","hash":"0d2c406f1a9b3b74d6defda398239b0113737787","modified":1569136030086},{"_id":"themes/BlueLake/source/share/css/share.styl","hash":"dea3b7a6adb17969e57e5c3d71876245016be21a","modified":1569136030086},{"_id":"themes/BlueLake/source/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1569136030086},{"_id":"themes/BlueLake/source/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1569136030086},{"_id":"themes/BlueLake/source/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1569136030086},{"_id":"themes/BlueLake/source/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1569136030086},{"_id":"themes/BlueLake/source/share/js/qrcode.js","hash":"9caa0d9a9ba4409a3f77540a1b15a7617aeb28e8","modified":1569136030086},{"_id":"themes/BlueLake/source/share/js/social-share.js","hash":"9bfe34fe7691833e90815c5c862545bde581cf29","modified":1569136030086},{"_id":"themes/BlueLake/.git/logs/refs/heads/master","hash":"334f6f142612c3a94c087949916cd9336d05aab5","modified":1569136030074},{"_id":"themes/BlueLake/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1569136030074},{"_id":"themes/BlueLake/.git/logs/refs/remotes/origin/HEAD","hash":"334f6f142612c3a94c087949916cd9336d05aab5","modified":1569136030074},{"_id":"themes/BlueLake/.git/objects/pack/pack-e04202ccbabe5955ded054772b79b92926500caf.pack","hash":"ec8190cabb1a2dc38b25642e94a845f9c8d24001","modified":1569136030062},{"_id":"public/baidusitemap.xml","hash":"33eaf146d38a4562216c207081c06bb3e6abdecf","modified":1569165497101},{"_id":"public/content.json","hash":"77d391b56b459e05003d1173e9771589e21a8591","modified":1569165497102},{"_id":"public/sitemap.xml","hash":"24373f60870af0735f84d7dad61b017361abca89","modified":1569165497103},{"_id":"public/about/index.html","hash":"3aa9ebdac8da782a10e1ceac10a636d2eb17d4c8","modified":1569166573787},{"_id":"public/2019/02/20/蓝桥杯试题集/index.html","hash":"ded8c3efc9c4091fbc3b3f4a1f3766f1a16cb994","modified":1569166573787},{"_id":"public/2019/02/20/蓝桥杯试题集-算法训练/index.html","hash":"d1a48bf91bd94fa9f6a3cd63b7ea0a81752322f4","modified":1569166573787},{"_id":"public/2019/02/20/蓝桥杯试题集-算法提高/index.html","hash":"abdbbd4fed4e372840607cb529888fd5b5c33c5e","modified":1569166573787},{"_id":"public/2019/02/20/蓝桥杯试题集-历届试题/index.html","hash":"ca0a9538f05cd708ea09659095144f1e2e344162","modified":1569166573788},{"_id":"public/2018/09/22/配置apache-tomcat/index.html","hash":"8f649da69177c17ef60dbb6ca5a8c1a0e59a664b","modified":1569166573788},{"_id":"public/2018/09/18/python-Django初识/index.html","hash":"b88e42f2f6c3852b4332a3abf4d7bb471a8d7213","modified":1569166573788},{"_id":"public/2018/09/10/Python文件处理/index.html","hash":"40331a224299b396a874c9801eb81c8b8e1244c2","modified":1569166573788},{"_id":"public/2018/09/05/redis配置与使用/index.html","hash":"1160f7bc2b54d18b2839b1d310df992086a7ad59","modified":1569166573789},{"_id":"public/2018/09/03/Python3-PIL图像处理/index.html","hash":"8919b0c8c94b21ac7ddae17c058281c2fa337d96","modified":1569166573788},{"_id":"public/2018/04/27/JS/index.html","hash":"ccb3e59b63ec18ed98419ed17ea56f6d49816e94","modified":1569166573788},{"_id":"public/2018/04/14/string-的使用/index.html","hash":"ecdd19d29921950d90e50176c826a3b324b29707","modified":1569166573788},{"_id":"public/2018/04/06/乘积尾零数目/index.html","hash":"4668c7c3ea1614c8a04c3e8ebe8de98cb011f638","modified":1569166573788},{"_id":"public/2018/03/31/Dungeon-Master/index.html","hash":"9377c7a3d05cb045bf42a94e69b197623bc3a47c","modified":1569166573789},{"_id":"public/2018/03/31/棋盘问题/index.html","hash":"f9c97fade50679752a8b7b847cad79ef4dae2b7a","modified":1569166573790},{"_id":"public/2018/03/30/全排列/index.html","hash":"eda08f5b498b6950006620bb1d0370fc673f91ef","modified":1569166573790},{"_id":"public/2018/03/30/合并数字/index.html","hash":"a5885e5e135cf3abe08eab904a51f45ed7743786","modified":1569166573788},{"_id":"public/2018/03/29/STL之list/index.html","hash":"fbe0dc000996565695c7eef30fc05207ffe8d570","modified":1569166573790},{"_id":"public/2018/03/28/STL之sort和unique/index.html","hash":"4c62a64398c0a273564ce972d95c4e25600ae43c","modified":1569166573788},{"_id":"public/2018/03/20/网站/index.html","hash":"c0b910c76ac383a4e70c95e0e91124929f16b435","modified":1569166573788},{"_id":"public/2018/03/20/背包/index.html","hash":"2f63431a0f57d77322afb8ee9a97183d8922616d","modified":1569166573791},{"_id":"public/archives/index.html","hash":"f2eacb1dfb3663c9bb1bb0d468e853db837c0e77","modified":1569165497144},{"_id":"public/archives/page/2/index.html","hash":"867282fcd107a77cf354e9f7a45b28633889c688","modified":1569165497144},{"_id":"public/archives/page/3/index.html","hash":"61b77abe7093f19b1f5c05ba089dff8f7690f88e","modified":1569166573788},{"_id":"public/archives/page/4/index.html","hash":"43f93f958d622fed6b03dfb06cb942cca25cc075","modified":1569165497144},{"_id":"public/archives/2018/index.html","hash":"3ee0373be959ec7fa5a9e04589ce2a49974821c4","modified":1569165497144},{"_id":"public/archives/2018/page/2/index.html","hash":"7c9f1bedc6d491749902423194456f60eb7d03fa","modified":1569166573788},{"_id":"public/archives/2018/page/3/index.html","hash":"75a3a8675e474ff89ff96eb265f9eab019437800","modified":1569166573788},{"_id":"public/archives/2018/page/4/index.html","hash":"ef18c55cb3da287feac88e49419374fcc6407be0","modified":1569165497144},{"_id":"public/archives/2018/03/index.html","hash":"3cf94b49727d0b07be0610fe00bbb9e08e1acdc1","modified":1569166573789},{"_id":"public/archives/2018/03/page/2/index.html","hash":"8824c0801ed7da19c35bcbbf7240ba6557ac8880","modified":1569165497145},{"_id":"public/archives/2018/04/index.html","hash":"ef5cce4a680e0b8781c2c77b69f09a6bb65b3638","modified":1569165497145},{"_id":"public/archives/2018/09/index.html","hash":"aef83db0c51039fff87111115c622a045f5cd45b","modified":1569165497145},{"_id":"public/archives/2019/index.html","hash":"d4c31b782a3acde4c5b80787001c9886f8af8772","modified":1569165497145},{"_id":"public/archives/2019/02/index.html","hash":"c8725097ee8aa2db64d2b42afcd9e336edc26207","modified":1569165497145},{"_id":"public/categories/C-C/index.html","hash":"f06889a5bb2ddd88805a74592d93589c7c3e11d3","modified":1569165497145},{"_id":"public/categories/C-C/page/2/index.html","hash":"7961be7e52aab55639d56c515463805ba58a4b1f","modified":1569165497145},{"_id":"public/categories/C-C/page/3/index.html","hash":"ffe750eba19b93f574c92bb094e14a10b412cbbb","modified":1569165497145},{"_id":"public/categories/HTML/index.html","hash":"19eec44852b90953838a9d6136addf940b06f6be","modified":1569165497145},{"_id":"public/categories/JS/index.html","hash":"50a9a00859e4e497372ee3b8256538a170b1305f","modified":1569165497145},{"_id":"public/categories/Python3/index.html","hash":"583deb650b4879275f1987956de98dfb7f0fe88f","modified":1569165497145},{"_id":"public/categories/系统/index.html","hash":"93f08bad24b379b684b674555baee85bf0ca4845","modified":1569165497146},{"_id":"public/categories/Python/index.html","hash":"75820e635aa9a791c056be3ed5a2d8d401cd6c66","modified":1569165497146},{"_id":"public/categories/网站/index.html","hash":"8da4dda8a612ed2f63106f9cf7cb60502539c49b","modified":1569165497146},{"_id":"public/index.html","hash":"5d190cc78523a8c1a208c9853bbb4f718be7cf2e","modified":1569165497146},{"_id":"public/page/2/index.html","hash":"a612d0926a69085a7f265cdfbb749fb3937ddde3","modified":1569165497146},{"_id":"public/page/3/index.html","hash":"6b6155bf51394a465f5447db31d65652858ded59","modified":1569165497146},{"_id":"public/page/4/index.html","hash":"ff75068e70ec6ee42e99da39175b090ac8a667a1","modified":1569165497146},{"_id":"public/tags/BFS/index.html","hash":"873c2017eef067feff0b1d0ca4c6723bb6304a26","modified":1569165497146},{"_id":"public/tags/STL/index.html","hash":"fa3ae4a72140f5a3ceba695eef9f71dbf9bbf064","modified":1569165497146},{"_id":"public/tags/HTML/index.html","hash":"848625988e1fcad794ece5eaf3807c1ed4cb2e1c","modified":1569165497146},{"_id":"public/tags/JS/index.html","hash":"8105c3589e8bbb33a907fae0200c506aa8516c65","modified":1569165497147},{"_id":"public/tags/python3小练手/index.html","hash":"0ad87ac083a834cecdb4ff603b0216d2cc502be7","modified":1569165497147},{"_id":"public/tags/栈/index.html","hash":"0ceaf1ea74d21570a606682eafa35ddae8c6deac","modified":1569165497147},{"_id":"public/tags/Ubuntu/index.html","hash":"4fcd3471f8f4ce00db363e04855709eb742ab3d1","modified":1569165497147},{"_id":"public/tags/python3项目/index.html","hash":"6320ea9c42a6a4ce89bccc20d4d3264486761352","modified":1569165497147},{"_id":"public/tags/Python/index.html","hash":"c83154be248b9280480c2cd701a2bce45b58f945","modified":1569165497147},{"_id":"public/tags/动态规划/index.html","hash":"68da5142306fb241a8ba7e7c56c74df8be3666de","modified":1569165497147},{"_id":"public/tags/DFS/index.html","hash":"db419f8cb5421c8f9bf3a6d21bf5196a13618283","modified":1569165497147},{"_id":"public/tags/递归/index.html","hash":"3eee2dc2502944279db4962c763c33898db6cbc1","modified":1569165497148},{"_id":"public/tags/C-C-题目/index.html","hash":"026aee6318cddae094e14f316ed5632cf60d6642","modified":1569165497148},{"_id":"public/tags/网站/index.html","hash":"b8b8fb5fa972e6cd692c3721fd485bf56c9c5e06","modified":1569165497148},{"_id":"public/tags/蓝桥杯/index.html","hash":"0a48c0b72ae63fadbe58f69fe22ad60a672262ff","modified":1569165497148},{"_id":"public/tags/经历/index.html","hash":"75ab6ddf8b1bb198af913cc0ee1ae93946d5b6ff","modified":1569165497148},{"_id":"public/2019/02/20/蓝桥杯试题集-基础练习/index.html","hash":"a4c123988985265b35a66232ff293b8c1856c2ac","modified":1569166573789},{"_id":"public/2019/02/20/蓝桥杯试题集-入门训练/index.html","hash":"9c211bcd39acf276b25b2fdf478d82c34be3a879","modified":1569166573789},{"_id":"public/2018/09/03/PyMySQL初识/index.html","hash":"24f86f68f1c43e56ef2ccc5b9bd490081a16b8b0","modified":1569166573789},{"_id":"public/2018/09/03/补蓝桥杯国赛/index.html","hash":"8a0019d7888b06366054a6c493679f7af81684d9","modified":1569166573789},{"_id":"public/2018/09/03/python爬取hdu题库/index.html","hash":"1ef582934e3614c2d67071764d4dddf83b03e587","modified":1569166573789},{"_id":"public/2018/09/02/Ubuntu-18-之旅/index.html","hash":"64aac375b55b5d45e1445c6ad249cb8b0ef3cccf","modified":1569166573789},{"_id":"public/2018/04/06/解决写wyh的矩阵出现内存占用超过限制的问题/index.html","hash":"f0bd17c2801aa78c000085349b869f388eb74d9c","modified":1569166573789},{"_id":"public/2018/04/05/第九届蓝桥杯试题、答案以及比赛经历/index.html","hash":"28b0a3d420b1f1490768c8055a212d9871a79510","modified":1569166573789},{"_id":"public/2018/03/31/不要62/index.html","hash":"fccc71d8c1db3b837df7f9ef498b8bfb6df64126","modified":1569166573789},{"_id":"public/2018/03/31/Catch-That-Cow/index.html","hash":"6626d7a4d6fa1aebda3bf3e696f0a627ba321c64","modified":1569166573789},{"_id":"public/2018/03/30/STL之stack-queue/index.html","hash":"d0fa0c87c49db4ba02d8a2eb7280b674d079d77c","modified":1569166573790},{"_id":"public/2018/03/29/STL之map/index.html","hash":"6e0cce66c86e6517f67f25c143a85c053955ce2c","modified":1569166573790},{"_id":"public/2018/03/28/STL之set/index.html","hash":"247258225528c8195b05f9801daae6b93c86ab66","modified":1569166573791},{"_id":"public/2018/03/28/STL之string/index.html","hash":"855aeab81688c54debfa1989c8dc5b269da06bc4","modified":1569166573791},{"_id":"public/2018/03/28/STL之vector/index.html","hash":"1bde694c63f1eed5d25a8fdb23d43c9fa3856628","modified":1569166573791},{"_id":"public/2018/03/27/最长公共子串LCS/index.html","hash":"9a049422aaa9a4bfb350fcfe6850fea9a67d3825","modified":1569166573791},{"_id":"public/2018/03/27/最长递增序列LIS(n^2和nlog2n)/index.html","hash":"89cb97ab809b825dd8de3359beaa60ca5ffd6d5a","modified":1569166573791},{"_id":"public/2018/03/23/HTML/index.html","hash":"2a9944131b23870f6d3d792dc18af05aee5649c0","modified":1569166573791},{"_id":"public/favicon.ico","hash":"79bb6c43618aa139b643ea6af2f7fd5a0539e35c","modified":1569143014649},{"_id":"public/iconfont/iconfont.eot","hash":"e664dd848ca65fe3aca4acfc234ff9c18ffd4c33","modified":1569143014649},{"_id":"public/iconfont/iconfont.svg","hash":"2b6a0b21bf63bdf746130117baf432fcb44ad210","modified":1569143014649},{"_id":"public/iconfont/iconfont.ttf","hash":"5770696cc0d19d9c9479912a5cf54c9dd4ab24c4","modified":1569143014650},{"_id":"public/iconfont/iconfont.woff","hash":"df2bd849134cbd02beb385e5061a30b923c99058","modified":1569143014650},{"_id":"public/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1569143014650},{"_id":"public/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1569143014650},{"_id":"public/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1569143014650},{"_id":"public/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1569143014650},{"_id":"public/2018/09/03/Python3-PIL图像处理/1.jpg","hash":"e0f6176cb4aecad74f7b464ea961749a0f052fc1","modified":1569143014650},{"_id":"public/2018/03/29/STL之list/list.png","hash":"061c5439db44d0a5157cdc361977770eeb12f920","modified":1569143014650},{"_id":"public/2018/03/28/STL之sort和unique/sort&unique.png","hash":"6969547e97be5f8bf1bf61cd4233b96ac7057297","modified":1569143014650},{"_id":"public/2018/03/28/STL之string/string.png","hash":"86d77f1a35452dba515f55052054132f094a21eb","modified":1569143014650},{"_id":"public/2018/03/27/最长递增序列LIS(n^2和nlog2n)/LIS.png","hash":"a9cc6d8940ca905d4cb1a2b16a6d4a85cb46a53d","modified":1569143014650},{"_id":"public/2018/03/30/合并数字/1.png","hash":"90b71cfa122c080cb805df0083adc4baa4098057","modified":1569143014650},{"_id":"public/2018/03/29/STL之map/map.png","hash":"11e4216731469b39a8dbc388e476064d33ef1473","modified":1569143014651},{"_id":"public/2018/03/29/STL之map/map1.png","hash":"4a2b4d79bc50226dcc7c585cc92f9adbe2469a71","modified":1569143014651},{"_id":"public/2018/03/28/STL之vector/vector.png","hash":"f4fe8e18fd88615a526a993f7ee7eda787d38e5a","modified":1569143014651},{"_id":"public/2018/03/28/STL之vector/vector1.png","hash":"91f305cd3d57199f098f05f4b652041e381a3b72","modified":1569143014651},{"_id":"public/2018/09/03/python爬取hdu题库/2.png","hash":"bd93fd97039884b1aea48e3b4fdc0d55958f6916","modified":1569143014651},{"_id":"public/2018/09/03/python爬取hdu题库/1.png","hash":"622416382c6734c0c52a3c06c89375f43edff2a4","modified":1569143014651},{"_id":"public/2018/03/31/不要62/DP.png","hash":"b40ed2312674e4546e270a034a8409108fcab852","modified":1569143014651},{"_id":"public/2018/03/31/不要62/1.png","hash":"7e34b657ff4fdf37c975ee13a0c7a5ba1402161d","modified":1569143014651},{"_id":"public/2018/03/27/最长公共子串LCS/lcs1.png","hash":"d33749e9145d43334a26e58ead57fca6a529528a","modified":1569143014651},{"_id":"public/2018/03/30/STL之stack-queue/queue.png","hash":"73ad2a0230be0fed9ad4c509f164bb3d3a582665","modified":1569143014651},{"_id":"public/2018/03/30/STL之stack-queue/queue1.png","hash":"082bc4312621471bf85671936f7b87a110ac96ea","modified":1569143014651},{"_id":"public/2018/03/30/STL之stack-queue/stack.png","hash":"cd29fb95f26e2718d375eb41dcb338506479c824","modified":1569143014651},{"_id":"public/2018/03/30/全排列/1.png","hash":"f785e10b8f29429b94d6b5b845801befd48c7726","modified":1569143014651},{"_id":"public/2018/03/30/全排列/3.png","hash":"2033fb477e315017361a8ebb447a1d153d99910c","modified":1569143014651},{"_id":"public/2018/03/30/全排列/2.png","hash":"819fd30bb03972745670b2f5777147d686352f31","modified":1569143014651},{"_id":"public/2018/03/28/STL之set/set1.png","hash":"842e8de0b971fd1f45cec243904610c976f99c5a","modified":1569143014651},{"_id":"public/2018/03/28/STL之set/set2.png","hash":"598589a99350c2f49df2497c8ea2b48031862846","modified":1569143014651},{"_id":"public/2018/03/28/STL之set/set.png","hash":"f474a53fd5d20d468c44cb01d20b646b440a40f5","modified":1569143014651},{"_id":"public/2018/03/28/STL之set/set3.png","hash":"ee07ed0a3a7c53b3e7f6e369ca0a57eb927ed679","modified":1569143014651},{"_id":"public/apple-touch-icon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1569143014943},{"_id":"public/2018/03/27/最长公共子串LCS/lcs.png","hash":"3ae005fe75874e80a07c4e563ca0ea241f160747","modified":1569143014943},{"_id":"public/css/highlight-dark.css","hash":"e6f5491318fbba0995c17c33ff8f4d8af957c2cb","modified":1569143014948},{"_id":"public/css/highlight.css","hash":"932879716cbce6f9a1b830070ed514082398f1ca","modified":1569143014948},{"_id":"public/js/search.json.js","hash":"a0e8dfee9b9845aabd64360d497df7c0767b7235","modified":1569143014948},{"_id":"public/js/toctotop.js","hash":"ad6386bc746ff375715ca9da17af4716ea86e06a","modified":1569143014948},{"_id":"public/js/totop.js","hash":"5b1131830209c2daaf6fe34c5e39ab7c1059bfa4","modified":1569143014948},{"_id":"public/share/css/share.css","hash":"f2c752f5eec4f88233c5f2d09807c01adee63100","modified":1569143014948},{"_id":"public/img/bg.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1569143014948},{"_id":"public/img/bg-dark.jpg","hash":"0d2c406f1a9b3b74d6defda398239b0113737787","modified":1569143014948},{"_id":"public/share/js/social-share.js","hash":"9bfe34fe7691833e90815c5c862545bde581cf29","modified":1569143015243},{"_id":"public/css/style-dark.css","hash":"8d1fa9bf5fef84c3c27fc653a1afecf6d66e3606","modified":1569143015247},{"_id":"public/css/style.css","hash":"61992233f95773d51d17965aa0c3874602a503f9","modified":1569143015247},{"_id":"public/share/js/qrcode.js","hash":"9caa0d9a9ba4409a3f77540a1b15a7617aeb28e8","modified":1569143015248},{"_id":"source/_posts/ACM_Template.md","hash":"2f67a7a4faff0748df6af348acc868523b8b7aff","modified":1569144551091},{"_id":"source/_posts/Linux_Communication.md","hash":"f13b7bce10ad98c351daff91652e137614d84466","modified":1569143626391},{"_id":"source/_posts/VSCode.md","hash":"e4d058b4f4db37f3ee4d24cc9d386762d05c8cf8","modified":1569143732383},{"_id":"source/_posts/chocolatey.md","hash":"fbf29017bbb1d35b0d433f1d75078e106fd74923","modified":1569143524752},{"_id":"source/_posts/docker.md","hash":"aca51f2ed536167bbe9c191b93bea4c15a7417df","modified":1569143519520},{"_id":"source/_posts/git.md","hash":"fc0857ef869787869373e1cc71ca55e9f0c7ade5","modified":1569143508160},{"_id":"source/_posts/mysql.md","hash":"a0afaac3658c5dd6380b9deb5511db679bc2a7d3","modified":1569143696451},{"_id":"public/2019/09/22/VSCode/index.html","hash":"9b627f9e15e37f052e217d43be88f76e1111b34f","modified":1569143140309},{"_id":"public/2019/09/22/git/index.html","hash":"6e8fa1dd856ab3140c170f3596dff1d657557edb","modified":1569143140309},{"_id":"public/2019/09/22/mysql/index.html","hash":"6fd52de3b8a27b13db6da873c6cb0b178bef4086","modified":1569143140309},{"_id":"public/2019/09/22/chocolatey/index.html","hash":"ef14ad4af2341401725c78fcba3384096b343e37","modified":1569143140309},{"_id":"public/2019/09/22/docker/index.html","hash":"1df2a310b6f473d54cf9c9cfee39bd69f6b7f775","modified":1569166573789},{"_id":"public/archives/page/5/index.html","hash":"e20ce9f9bb4218d9c2c06bf5ff3a61d8c2887cac","modified":1569165497144},{"_id":"public/archives/2019/page/2/index.html","hash":"350fd99cecc27224d27be837a7b354a44808c5de","modified":1569143140310},{"_id":"public/archives/2019/09/index.html","hash":"247e134df8b255e37cf4296750081e441f8d3632","modified":1569165497145},{"_id":"public/page/5/index.html","hash":"7c17a97a40102ba2deea0a133e95f88e460a0e60","modified":1569165497146},{"_id":"public/2019/09/22/Linux_Communication/index.html","hash":"35d660e2afc750a03ddaa6c2ee3198c5b5a1eeed","modified":1569143140310},{"_id":"public/2019/09/22/ACM_Template/index.html","hash":"ef90de043ecff1e98ec6edbce529cdc0966ccdf5","modified":1569143140310},{"_id":"public/2018/03/31/git/index.html","hash":"5d3127152e2cb5ae9a082864acc2450f3167c302","modified":1569166573788},{"_id":"public/2018/03/31/chocolatey/index.html","hash":"50462994ff0c8e591fd9e999dc031b7450b1e0d8","modified":1569166573788},{"_id":"public/2018/03/31/VSCode/index.html","hash":"a22eb8fc5ca8a8bd049ce51d83469abc1008fee2","modified":1569166573788},{"_id":"public/archives/2018/03/page/3/index.html","hash":"1db938b8dfdf04ae2f5a5d477fffab6fd705bfb0","modified":1569165497145},{"_id":"public/categories/应用/index.html","hash":"c6f55d99600b861e765ae9e5d918932a6472df42","modified":1569165497146},{"_id":"public/categories/SQL/index.html","hash":"df4e053a0f7ec6d9148ec9c54531868b615ff0d1","modified":1569165497146},{"_id":"public/tags/Linux/index.html","hash":"6f966c0ba2ba8f775163a064bde3e88a2869adbc","modified":1569165497148},{"_id":"public/tags/应用/index.html","hash":"ffacd2f64320e0f86375e481069c992a19d6b655","modified":1569165497148},{"_id":"public/tags/SQL/index.html","hash":"b3cccf14e4edfd37bdd5c85e958938a04459c513","modified":1569165497148},{"_id":"public/tags/模板/index.html","hash":"13bb62077565ac5d628752d403832b71bada9fb3","modified":1569165497148},{"_id":"public/2018/03/31/mysql/index.html","hash":"ba0a1ac61824a2445bc3a254f2b3f88e1f8692aa","modified":1569166573789},{"_id":"public/2018/03/31/ACM_Template/index.html","hash":"627aa7527990933587771b865ed57506859af362","modified":1569166573789},{"_id":"public/2018/03/31/Linux_Communication/index.html","hash":"7a65812d5f36977bc43fca26fe5b85afa887bcee","modified":1569166573789}],"Category":[{"name":"C/C++","_id":"ck0ur8hb00003a7s10l8tn8fa"},{"name":"HTML","_id":"ck0ur8hba000ca7s135oqjmcp"},{"name":"JS","_id":"ck0ur8hbf000ka7s151jkdhdm"},{"name":"Python3","_id":"ck0ur8hbj000sa7s1gjza9wwf"},{"name":"系统","_id":"ck0ur8hbv001fa7s13zrb0ls0"},{"name":"Python","_id":"ck0ur8hby001pa7s1bmajmiph"},{"name":"网站","_id":"ck0ur8hc8002ia7s1qgtivm9z"},{"name":"应用","_id":"ck0uro2qt0001uus1ciyhvueq"},{"name":"SQL","_id":"ck0uro2rg000cuus1xw7qmmpi"}],"Data":[],"Page":[{"title":"about","date":"2018-03-29T04:44:04.000Z","_content":"\n人群： 广东潮汕人\n学府： 国立中央大学皇家林学院(南京林业大学)\n院系： 信息科学技术学院\n专业： 计算机科学与技术\n简介： 热爱计算机技术，虽然有时很宅，但也很爱运动。总之呢，开朗、骚气十足的程序员未养成。。。。。\n\n\n**so~ now! MAKE MORE TIME!!!**","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-03-29 12:44:04\n---\n\n人群： 广东潮汕人\n学府： 国立中央大学皇家林学院(南京林业大学)\n院系： 信息科学技术学院\n专业： 计算机科学与技术\n简介： 热爱计算机技术，虽然有时很宅，但也很爱运动。总之呢，开朗、骚气十足的程序员未养成。。。。。\n\n\n**so~ now! MAKE MORE TIME!!!**","updated":"2019-09-22T07:02:11.388Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck0ur8hax0001a7s1neikux9b","content":"<p>人群： 广东潮汕人<br>学府： 国立中央大学皇家林学院(南京林业大学)<br>院系： 信息科学技术学院<br>专业： 计算机科学与技术<br>简介： 热爱计算机技术，虽然有时很宅，但也很爱运动。总之呢，开朗、骚气十足的程序员未养成。。。。。</p>\n<p><strong>so~ now! MAKE MORE TIME!!!</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>人群： 广东潮汕人<br>学府： 国立中央大学皇家林学院(南京林业大学)<br>院系： 信息科学技术学院<br>专业： 计算机科学与技术<br>简介： 热爱计算机技术，虽然有时很宅，但也很爱运动。总之呢，开朗、骚气十足的程序员未养成。。。。。</p>\n<p><strong>so~ now! MAKE MORE TIME!!!</strong></p>\n"}],"Post":[{"title":"Catch That Cow","date":"2018-03-31T12:17:43.000Z","description":"3D立体迷宫，判断是否有出路，并算出最短时间。使用了广度搜索优先和队列。","_content":"[原题链接](http://poj.org/problem?id=2251)\n### 题目内容\n\n> **Description**\nYou are trapped in a 3D dungeon and need to find the quickest way out! The dungeon is composed of unit cubes which may or may not be filled with rock. It takes one minute to move one unit north, south, east, west, up or down. You cannot move diagonally and the maze is surrounded by solid rock on all sides. \nIs an escape possible? If yes, how long will it take? \n<br>\n**Input**\nThe input consists of a number of dungeons. Each dungeon description starts with a line containing three integers L, R and C (all limited to 30 in size). \nL is the number of levels making up the dungeon. \nR and C are the number of rows and columns making up the plan of each level. \nThen there will follow L blocks of R lines each containing C characters. Each character describes one cell of the dungeon. A cell full of rock is indicated by a '#' and empty cells are represented by a '.'. Your starting position is indicated by 'S' and the exit by the letter 'E'. There's a single blank line after each level. Input is terminated by three zeroes for L, R and C.\n<br>\n**Output**\nEach maze generates one line of output. If it is possible to reach the exit, print a line of the form \nEscaped in x minute(s).\nwhere x is replaced by the shortest time it takes to escape. \nIf it is not possible to escape, print the line \nTrapped!\n\n> **Sample Input**\n> <br>\n> 3 4 5\n> S....\n> .###.\n> .##..\n> ###.#  \n> <br>\n> #####\n> #####\n> ##.##\n> ##.\\..  \n> <br>\n> #####\n> #####\n> #.###\n> ####E  \n> <br>\n> 1 3 3\n> S##\n> #E#\n> ###\n> <br>\n> 0 0 0\n\n> **Sample Output**\n> <br>\n> Escaped in 11 minute(s).\n> Trapped!\n\n题解:\n```C++\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint L,R,C;\nchar a[31][31][31];\nbool vis[31][31][31];\nint sx,sy,sz,ex,ey,ez;\nstruct node{\n    int x,y,z,step;\n};\nint d[6][3]={{0,0,1},{0,0,-1},{0,1,0},{0,-1,0},{1,0,0},{-1,0,0}};\nint bfs(){\n\tqueue<node>q;\n\tnode now,next;\n\tnow.x=sx;now.y=sy;now.z=sz,now.step=0;\n\tvis[now.x][now.y][now.z]=true;\n\tq.push(now);\n    while(!q.empty()){\n        now=q.front();\n        q.pop();\n        if(now.x==ex&&now.y==ey&&now.z==ez)\n            return now.step;\n        for(int i=0;i<6;i++)\n        {\n            next.x=now.x+d[i][0];\n            next.y=now.y+d[i][1];\n            next.z=now.z+d[i][2];\n            if(a[next.x][next.y][next.z]!='#'&&next.x>=0&&next.x<L&&next.y>=0)\n                if(next.y<R&&next.z>=0&&next.z<C&&!vis[next.x][next.y][next.z]){\n                //分开写是因为太长了  比较难看=。=\n                vis[next.x][next.y][next.z]++;\n                next.step=now.step+1;\n                q.push(next);\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n\twhile(scanf(\"%d %d %d\",&L,&R,&C),L){\n\t\tmemset(a,'\\0',sizeof(a));\n\t\tmemset(vis,false,sizeof(vis)); \n\t\t\n\t\tfor(int l=0;l<L;l++){\n\t\t\tgetchar();\n\t\t\tfor(int r=0;r<R;r++){\n\t\t\t\tfor(int c=0;c<C;c++){\n\t\t\t\t\ta[l][r][c]=getchar();\n\t\t\t\t\t if(a[l][r][c]=='S') {\n                        sx=l;\n                        sy=r;\n                        sz=c;\n                    }\n                    if(a[l][r][c]=='E'){\n                        ex=l;\n                        ey=r;\n                        ez=c;\n                    }\n\t\t\t\t}\n\t\t\t\tgetchar();\n\t\t\t}\n\t\t}\n\t\tint ans=bfs();\n\t\tif(ans)\n\t\t\tprintf(\"Escaped in %d minute(s).\\n\",ans);\n\t\telse\n\t\t\tprintf(\"Trapped!\\n\");\n\t}\n\treturn 0;\n}\n```\n\n已AC....by edxuanlen\n\n","source":"_posts/Catch-That-Cow.md","raw":"---\ntitle: Catch That Cow\ndate: 2018-03-31 20:17:43\ntags: \n    - BFS\n    - STL\ncategories: C/C++\ndescription: 3D立体迷宫，判断是否有出路，并算出最短时间。使用了广度搜索优先和队列。\n---\n[原题链接](http://poj.org/problem?id=2251)\n### 题目内容\n\n> **Description**\nYou are trapped in a 3D dungeon and need to find the quickest way out! The dungeon is composed of unit cubes which may or may not be filled with rock. It takes one minute to move one unit north, south, east, west, up or down. You cannot move diagonally and the maze is surrounded by solid rock on all sides. \nIs an escape possible? If yes, how long will it take? \n<br>\n**Input**\nThe input consists of a number of dungeons. Each dungeon description starts with a line containing three integers L, R and C (all limited to 30 in size). \nL is the number of levels making up the dungeon. \nR and C are the number of rows and columns making up the plan of each level. \nThen there will follow L blocks of R lines each containing C characters. Each character describes one cell of the dungeon. A cell full of rock is indicated by a '#' and empty cells are represented by a '.'. Your starting position is indicated by 'S' and the exit by the letter 'E'. There's a single blank line after each level. Input is terminated by three zeroes for L, R and C.\n<br>\n**Output**\nEach maze generates one line of output. If it is possible to reach the exit, print a line of the form \nEscaped in x minute(s).\nwhere x is replaced by the shortest time it takes to escape. \nIf it is not possible to escape, print the line \nTrapped!\n\n> **Sample Input**\n> <br>\n> 3 4 5\n> S....\n> .###.\n> .##..\n> ###.#  \n> <br>\n> #####\n> #####\n> ##.##\n> ##.\\..  \n> <br>\n> #####\n> #####\n> #.###\n> ####E  \n> <br>\n> 1 3 3\n> S##\n> #E#\n> ###\n> <br>\n> 0 0 0\n\n> **Sample Output**\n> <br>\n> Escaped in 11 minute(s).\n> Trapped!\n\n题解:\n```C++\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint L,R,C;\nchar a[31][31][31];\nbool vis[31][31][31];\nint sx,sy,sz,ex,ey,ez;\nstruct node{\n    int x,y,z,step;\n};\nint d[6][3]={{0,0,1},{0,0,-1},{0,1,0},{0,-1,0},{1,0,0},{-1,0,0}};\nint bfs(){\n\tqueue<node>q;\n\tnode now,next;\n\tnow.x=sx;now.y=sy;now.z=sz,now.step=0;\n\tvis[now.x][now.y][now.z]=true;\n\tq.push(now);\n    while(!q.empty()){\n        now=q.front();\n        q.pop();\n        if(now.x==ex&&now.y==ey&&now.z==ez)\n            return now.step;\n        for(int i=0;i<6;i++)\n        {\n            next.x=now.x+d[i][0];\n            next.y=now.y+d[i][1];\n            next.z=now.z+d[i][2];\n            if(a[next.x][next.y][next.z]!='#'&&next.x>=0&&next.x<L&&next.y>=0)\n                if(next.y<R&&next.z>=0&&next.z<C&&!vis[next.x][next.y][next.z]){\n                //分开写是因为太长了  比较难看=。=\n                vis[next.x][next.y][next.z]++;\n                next.step=now.step+1;\n                q.push(next);\n            }\n        }\n    }\n    return 0;\n}\nint main() {\n\twhile(scanf(\"%d %d %d\",&L,&R,&C),L){\n\t\tmemset(a,'\\0',sizeof(a));\n\t\tmemset(vis,false,sizeof(vis)); \n\t\t\n\t\tfor(int l=0;l<L;l++){\n\t\t\tgetchar();\n\t\t\tfor(int r=0;r<R;r++){\n\t\t\t\tfor(int c=0;c<C;c++){\n\t\t\t\t\ta[l][r][c]=getchar();\n\t\t\t\t\t if(a[l][r][c]=='S') {\n                        sx=l;\n                        sy=r;\n                        sz=c;\n                    }\n                    if(a[l][r][c]=='E'){\n                        ex=l;\n                        ey=r;\n                        ez=c;\n                    }\n\t\t\t\t}\n\t\t\t\tgetchar();\n\t\t\t}\n\t\t}\n\t\tint ans=bfs();\n\t\tif(ans)\n\t\t\tprintf(\"Escaped in %d minute(s).\\n\",ans);\n\t\telse\n\t\t\tprintf(\"Trapped!\\n\");\n\t}\n\treturn 0;\n}\n```\n\n已AC....by edxuanlen\n\n","slug":"Catch-That-Cow","published":1,"updated":"2019-09-22T07:02:11.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8has0000a7s1y2ptf9rd","content":"<p><a href=\"http://poj.org/problem?id=2251\" target=\"_blank\" rel=\"noopener\">原题链接</a></p>\n<h3 id=\"题目内容\"><a href=\"#题目内容\" class=\"headerlink\" title=\"题目内容\"></a>题目内容</h3><blockquote>\n<p><strong>Description</strong><br>You are trapped in a 3D dungeon and need to find the quickest way out! The dungeon is composed of unit cubes which may or may not be filled with rock. It takes one minute to move one unit north, south, east, west, up or down. You cannot move diagonally and the maze is surrounded by solid rock on all sides.<br>Is an escape possible? If yes, how long will it take?<br><br><br><strong>Input</strong><br>The input consists of a number of dungeons. Each dungeon description starts with a line containing three integers L, R and C (all limited to 30 in size).<br>L is the number of levels making up the dungeon.<br>R and C are the number of rows and columns making up the plan of each level.<br>Then there will follow L blocks of R lines each containing C characters. Each character describes one cell of the dungeon. A cell full of rock is indicated by a ‘#’ and empty cells are represented by a ‘.’. Your starting position is indicated by ‘S’ and the exit by the letter ‘E’. There’s a single blank line after each level. Input is terminated by three zeroes for L, R and C.<br><br><br><strong>Output</strong><br>Each maze generates one line of output. If it is possible to reach the exit, print a line of the form<br>Escaped in x minute(s).<br>where x is replaced by the shortest time it takes to escape.<br>If it is not possible to escape, print the line<br>Trapped!</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Input</strong><br><br><br>3 4 5<br>S….<br>.###.<br>.##..</p>\n<p>###.#<br><br></p>\n<p>#####</p>\n<p>#####</p>\n<p>##.##</p>\n<p>##...<br><br></p>\n<p>#####</p>\n<p>#####</p>\n<p>#.###</p>\n<p>####E<br><br><br>1 3 3<br>S##</p>\n<p>#E#</p>\n<p>###<br><br><br>0 0 0</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Output</strong><br><br><br>Escaped in 11 minute(s).<br>Trapped!</p>\n</blockquote>\n<p>题解:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> L,R,C;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">31</span>][<span class=\"number\">31</span>][<span class=\"number\">31</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[<span class=\"number\">31</span>][<span class=\"number\">31</span>][<span class=\"number\">31</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> sx,sy,sz,ex,ey,ez;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> x,y,z,step;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[<span class=\"number\">6</span>][<span class=\"number\">3</span>]=&#123;&#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;node&gt;q;</span><br><span class=\"line\">\tnode now,next;</span><br><span class=\"line\">\tnow.x=sx;now.y=sy;now.z=sz,now.step=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tvis[now.x][now.y][now.z]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">\tq.push(now);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())&#123;</span><br><span class=\"line\">        now=q.front();</span><br><span class=\"line\">        q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(now.x==ex&amp;&amp;now.y==ey&amp;&amp;now.z==ez)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> now.step;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">6</span>;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            next.x=now.x+d[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">            next.y=now.y+d[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">            next.z=now.z+d[i][<span class=\"number\">2</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[next.x][next.y][next.z]!=<span class=\"string\">'#'</span>&amp;&amp;next.x&gt;=<span class=\"number\">0</span>&amp;&amp;next.x&lt;L&amp;&amp;next.y&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(next.y&lt;R&amp;&amp;next.z&gt;=<span class=\"number\">0</span>&amp;&amp;next.z&lt;C&amp;&amp;!vis[next.x][next.y][next.z])&#123;</span><br><span class=\"line\">                <span class=\"comment\">//分开写是因为太长了  比较难看=。=</span></span><br><span class=\"line\">                vis[next.x][next.y][next.z]++;</span><br><span class=\"line\">                next.step=now.step+<span class=\"number\">1</span>;</span><br><span class=\"line\">                q.push(next);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d %d\"</span>,&amp;L,&amp;R,&amp;C),L)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(a,<span class=\"string\">'\\0'</span>,<span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(vis,<span class=\"literal\">false</span>,<span class=\"keyword\">sizeof</span>(vis)); </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>;l&lt;L;l++)&#123;</span><br><span class=\"line\">\t\t\tgetchar();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> r=<span class=\"number\">0</span>;r&lt;R;r++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> c=<span class=\"number\">0</span>;c&lt;C;c++)&#123;</span><br><span class=\"line\">\t\t\t\t\ta[l][r][c]=getchar();</span><br><span class=\"line\">\t\t\t\t\t <span class=\"keyword\">if</span>(a[l][r][c]==<span class=\"string\">'S'</span>) &#123;</span><br><span class=\"line\">                        sx=l;</span><br><span class=\"line\">                        sy=r;</span><br><span class=\"line\">                        sz=c;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[l][r][c]==<span class=\"string\">'E'</span>)&#123;</span><br><span class=\"line\">                        ex=l;</span><br><span class=\"line\">                        ey=r;</span><br><span class=\"line\">                        ez=c;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tgetchar();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans=bfs();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ans)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Escaped in %d minute(s).\\n\"</span>,ans);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Trapped!\\n\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>已AC….by edxuanlen</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://poj.org/problem?id=2251\" target=\"_blank\" rel=\"noopener\">原题链接</a></p>\n<h3 id=\"题目内容\"><a href=\"#题目内容\" class=\"headerlink\" title=\"题目内容\"></a>题目内容</h3><blockquote>\n<p><strong>Description</strong><br>You are trapped in a 3D dungeon and need to find the quickest way out! The dungeon is composed of unit cubes which may or may not be filled with rock. It takes one minute to move one unit north, south, east, west, up or down. You cannot move diagonally and the maze is surrounded by solid rock on all sides.<br>Is an escape possible? If yes, how long will it take?<br><br><br><strong>Input</strong><br>The input consists of a number of dungeons. Each dungeon description starts with a line containing three integers L, R and C (all limited to 30 in size).<br>L is the number of levels making up the dungeon.<br>R and C are the number of rows and columns making up the plan of each level.<br>Then there will follow L blocks of R lines each containing C characters. Each character describes one cell of the dungeon. A cell full of rock is indicated by a ‘#’ and empty cells are represented by a ‘.’. Your starting position is indicated by ‘S’ and the exit by the letter ‘E’. There’s a single blank line after each level. Input is terminated by three zeroes for L, R and C.<br><br><br><strong>Output</strong><br>Each maze generates one line of output. If it is possible to reach the exit, print a line of the form<br>Escaped in x minute(s).<br>where x is replaced by the shortest time it takes to escape.<br>If it is not possible to escape, print the line<br>Trapped!</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Input</strong><br><br><br>3 4 5<br>S….<br>.###.<br>.##..</p>\n<p>###.#<br><br></p>\n<p>#####</p>\n<p>#####</p>\n<p>##.##</p>\n<p>##...<br><br></p>\n<p>#####</p>\n<p>#####</p>\n<p>#.###</p>\n<p>####E<br><br><br>1 3 3<br>S##</p>\n<p>#E#</p>\n<p>###<br><br><br>0 0 0</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Output</strong><br><br><br>Escaped in 11 minute(s).<br>Trapped!</p>\n</blockquote>\n<p>题解:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> L,R,C;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">31</span>][<span class=\"number\">31</span>][<span class=\"number\">31</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[<span class=\"number\">31</span>][<span class=\"number\">31</span>][<span class=\"number\">31</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> sx,sy,sz,ex,ey,ez;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> x,y,z,step;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[<span class=\"number\">6</span>][<span class=\"number\">3</span>]=&#123;&#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">0</span>,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;,&#123;<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">queue</span>&lt;node&gt;q;</span><br><span class=\"line\">\tnode now,next;</span><br><span class=\"line\">\tnow.x=sx;now.y=sy;now.z=sz,now.step=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tvis[now.x][now.y][now.z]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">\tq.push(now);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())&#123;</span><br><span class=\"line\">        now=q.front();</span><br><span class=\"line\">        q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(now.x==ex&amp;&amp;now.y==ey&amp;&amp;now.z==ez)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> now.step;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">6</span>;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            next.x=now.x+d[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">            next.y=now.y+d[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">            next.z=now.z+d[i][<span class=\"number\">2</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[next.x][next.y][next.z]!=<span class=\"string\">'#'</span>&amp;&amp;next.x&gt;=<span class=\"number\">0</span>&amp;&amp;next.x&lt;L&amp;&amp;next.y&gt;=<span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(next.y&lt;R&amp;&amp;next.z&gt;=<span class=\"number\">0</span>&amp;&amp;next.z&lt;C&amp;&amp;!vis[next.x][next.y][next.z])&#123;</span><br><span class=\"line\">                <span class=\"comment\">//分开写是因为太长了  比较难看=。=</span></span><br><span class=\"line\">                vis[next.x][next.y][next.z]++;</span><br><span class=\"line\">                next.step=now.step+<span class=\"number\">1</span>;</span><br><span class=\"line\">                q.push(next);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d %d\"</span>,&amp;L,&amp;R,&amp;C),L)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(a,<span class=\"string\">'\\0'</span>,<span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(vis,<span class=\"literal\">false</span>,<span class=\"keyword\">sizeof</span>(vis)); </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>;l&lt;L;l++)&#123;</span><br><span class=\"line\">\t\t\tgetchar();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> r=<span class=\"number\">0</span>;r&lt;R;r++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> c=<span class=\"number\">0</span>;c&lt;C;c++)&#123;</span><br><span class=\"line\">\t\t\t\t\ta[l][r][c]=getchar();</span><br><span class=\"line\">\t\t\t\t\t <span class=\"keyword\">if</span>(a[l][r][c]==<span class=\"string\">'S'</span>) &#123;</span><br><span class=\"line\">                        sx=l;</span><br><span class=\"line\">                        sy=r;</span><br><span class=\"line\">                        sz=c;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[l][r][c]==<span class=\"string\">'E'</span>)&#123;</span><br><span class=\"line\">                        ex=l;</span><br><span class=\"line\">                        ey=r;</span><br><span class=\"line\">                        ez=c;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tgetchar();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans=bfs();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ans)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Escaped in %d minute(s).\\n\"</span>,ans);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Trapped!\\n\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>已AC….by edxuanlen</p>\n"},{"title":"Dungeon Master","date":"2018-03-31T12:18:01.000Z","description":"人抓牛，三种状态。使用BFS和队列可以解决问题。","_content":"[原题链接](http://poj.org/problem?id=3278)\n### 题目内容\n\n> **Description**\nFarmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point N (0 ≤ N ≤ 100,000) on a number line and the cow is at a point K (0 ≤ K ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and teleporting.\n* Walking: FJ can move from any point X to the points X - 1 or X + 1 in a single minute\n* Teleporting: FJ can move from any point X to the point 2 × X in a single minute.\nIf the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it?\n<br>\n**Input**\nLine 1: Two space-separated integers: N and K\n<br>\n**Output**\nLine 1: The least amount of time, in minutes, it takes for Farmer John to catch the fugitive cow.\n\n> **Sample Input**\n> <br>\n5 17\n\n> **Sample Output**\n> <br>\n4\n\n> **Hint**\nThe fastest way for Farmer John to reach the fugitive cow is to move along the following path: 5-10-9-18-17, which takes 4 minutes.\n\n题解:\n```C++\n#include<iostream>\n#include<stdio.h>\n#include<string.h>\n#include<queue>\nusing namespace std;\nqueue<int> q;\nbool vis[100001];\nint step[100001];\nint n,k;\nint bfs(){\n\tq.push(n);\n\tvis[n]=true;\n\twhile(!q.empty()){\n\t\tn=q.front();\n\t\tq.pop();\n\t\tint nn=n;\n\t\tfor(int i=0;i<3;i++){\n\t\t\tif(i==0) n=nn+1;\n\t\t\telse if(i==1) n=nn-1;\n\t\t\telse n=nn*2;\n\t\t\tif(n>=0&&n<=100000&&!vis[n]){\n\t\t\t\tq.push(n);\n\t\t\t\tstep[n]=step[nn]+1;\n\t\t\t\tvis[n]=true;\n\t\t\t}\n\t\t\tif(n==k)return step[n];\n\t\t}\n\t}\n}\nint main(){\n\twhile(scanf(\"%d%d\",&n,&k)!=EOF){\n\t\tmemset(vis,false,sizeof(vis));\n\t\twhile(!q.empty())q.pop();\n\t\tprintf(\"%d\\n\",bfs());\n\t}\n\treturn 0;\n}\n```\n\n已AC....by edxuanlen\n\n","source":"_posts/Dungeon-Master.md","raw":"---\ntitle: Dungeon Master\ndate: 2018-03-31 20:18:01\ntags: \n    - BFS\n    - STL\ncategories: C/C++\ndescription: 人抓牛，三种状态。使用BFS和队列可以解决问题。\n---\n[原题链接](http://poj.org/problem?id=3278)\n### 题目内容\n\n> **Description**\nFarmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point N (0 ≤ N ≤ 100,000) on a number line and the cow is at a point K (0 ≤ K ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and teleporting.\n* Walking: FJ can move from any point X to the points X - 1 or X + 1 in a single minute\n* Teleporting: FJ can move from any point X to the point 2 × X in a single minute.\nIf the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it?\n<br>\n**Input**\nLine 1: Two space-separated integers: N and K\n<br>\n**Output**\nLine 1: The least amount of time, in minutes, it takes for Farmer John to catch the fugitive cow.\n\n> **Sample Input**\n> <br>\n5 17\n\n> **Sample Output**\n> <br>\n4\n\n> **Hint**\nThe fastest way for Farmer John to reach the fugitive cow is to move along the following path: 5-10-9-18-17, which takes 4 minutes.\n\n题解:\n```C++\n#include<iostream>\n#include<stdio.h>\n#include<string.h>\n#include<queue>\nusing namespace std;\nqueue<int> q;\nbool vis[100001];\nint step[100001];\nint n,k;\nint bfs(){\n\tq.push(n);\n\tvis[n]=true;\n\twhile(!q.empty()){\n\t\tn=q.front();\n\t\tq.pop();\n\t\tint nn=n;\n\t\tfor(int i=0;i<3;i++){\n\t\t\tif(i==0) n=nn+1;\n\t\t\telse if(i==1) n=nn-1;\n\t\t\telse n=nn*2;\n\t\t\tif(n>=0&&n<=100000&&!vis[n]){\n\t\t\t\tq.push(n);\n\t\t\t\tstep[n]=step[nn]+1;\n\t\t\t\tvis[n]=true;\n\t\t\t}\n\t\t\tif(n==k)return step[n];\n\t\t}\n\t}\n}\nint main(){\n\twhile(scanf(\"%d%d\",&n,&k)!=EOF){\n\t\tmemset(vis,false,sizeof(vis));\n\t\twhile(!q.empty())q.pop();\n\t\tprintf(\"%d\\n\",bfs());\n\t}\n\treturn 0;\n}\n```\n\n已AC....by edxuanlen\n\n","slug":"Dungeon-Master","published":1,"updated":"2019-09-22T07:02:11.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hay0002a7s1dj6lyjjy","content":"<p><a href=\"http://poj.org/problem?id=3278\" target=\"_blank\" rel=\"noopener\">原题链接</a></p>\n<h3 id=\"题目内容\"><a href=\"#题目内容\" class=\"headerlink\" title=\"题目内容\"></a>题目内容</h3><blockquote>\n<p><strong>Description</strong><br>Farmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point N (0 ≤ N ≤ 100,000) on a number line and the cow is at a point K (0 ≤ K ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and teleporting.</p>\n<ul>\n<li>Walking: FJ can move from any point X to the points X - 1 or X + 1 in a single minute</li>\n<li>Teleporting: FJ can move from any point X to the point 2 × X in a single minute.<br>If the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it?<br><br><br><strong>Input</strong><br>Line 1: Two space-separated integers: N and K<br><br><br><strong>Output</strong><br>Line 1: The least amount of time, in minutes, it takes for Farmer John to catch the fugitive cow.</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><strong>Sample Input</strong><br><br><br>5 17</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Output</strong><br><br><br>4</p>\n</blockquote>\n<blockquote>\n<p><strong>Hint</strong><br>The fastest way for Farmer John to reach the fugitive cow is to move along the following path: 5-10-9-18-17, which takes 4 minutes.</p>\n</blockquote>\n<p>题解:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[<span class=\"number\">100001</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> step[<span class=\"number\">100001</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tq.push(n);</span><br><span class=\"line\">\tvis[n]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.empty())&#123;</span><br><span class=\"line\">\t\tn=q.front();</span><br><span class=\"line\">\t\tq.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> nn=n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>) n=nn+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==<span class=\"number\">1</span>) n=nn<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> n=nn*<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(n&gt;=<span class=\"number\">0</span>&amp;&amp;n&lt;=<span class=\"number\">100000</span>&amp;&amp;!vis[n])&#123;</span><br><span class=\"line\">\t\t\t\tq.push(n);</span><br><span class=\"line\">\t\t\t\tstep[n]=step[nn]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tvis[n]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(n==k)<span class=\"keyword\">return</span> step[n];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;k)!=EOF)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(vis,<span class=\"literal\">false</span>,<span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(!q.empty())q.pop();</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,bfs());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>已AC….by edxuanlen</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://poj.org/problem?id=3278\" target=\"_blank\" rel=\"noopener\">原题链接</a></p>\n<h3 id=\"题目内容\"><a href=\"#题目内容\" class=\"headerlink\" title=\"题目内容\"></a>题目内容</h3><blockquote>\n<p><strong>Description</strong><br>Farmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point N (0 ≤ N ≤ 100,000) on a number line and the cow is at a point K (0 ≤ K ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and teleporting.</p>\n<ul>\n<li>Walking: FJ can move from any point X to the points X - 1 or X + 1 in a single minute</li>\n<li>Teleporting: FJ can move from any point X to the point 2 × X in a single minute.<br>If the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it?<br><br><br><strong>Input</strong><br>Line 1: Two space-separated integers: N and K<br><br><br><strong>Output</strong><br>Line 1: The least amount of time, in minutes, it takes for Farmer John to catch the fugitive cow.</li>\n</ul>\n</blockquote>\n<blockquote>\n<p><strong>Sample Input</strong><br><br><br>5 17</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Output</strong><br><br><br>4</p>\n</blockquote>\n<blockquote>\n<p><strong>Hint</strong><br>The fastest way for Farmer John to reach the fugitive cow is to move along the following path: 5-10-9-18-17, which takes 4 minutes.</p>\n</blockquote>\n<p>题解:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[<span class=\"number\">100001</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> step[<span class=\"number\">100001</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tq.push(n);</span><br><span class=\"line\">\tvis[n]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.empty())&#123;</span><br><span class=\"line\">\t\tn=q.front();</span><br><span class=\"line\">\t\tq.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> nn=n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>) n=nn+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==<span class=\"number\">1</span>) n=nn<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> n=nn*<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(n&gt;=<span class=\"number\">0</span>&amp;&amp;n&lt;=<span class=\"number\">100000</span>&amp;&amp;!vis[n])&#123;</span><br><span class=\"line\">\t\t\t\tq.push(n);</span><br><span class=\"line\">\t\t\t\tstep[n]=step[nn]+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tvis[n]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(n==k)<span class=\"keyword\">return</span> step[n];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;k)!=EOF)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(vis,<span class=\"literal\">false</span>,<span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(!q.empty())q.pop();</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,bfs());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>已AC….by edxuanlen</p>\n"},{"title":"HTML","date":"2018-03-23T06:04:56.000Z","description":"HTML的初步学习，包括HTML段落、列表、超链接、表格、图像和多媒体......","_content":"\n# HTML 段落\n\n```md\n1. 分六个等级的字体(h1-h6)\n2. 换行<br>(line break)\n3. 水平线<hr>(horizontal rule)\n\n4. 字体特性设定<font></font>:\n\t字体大小size;\n\t字体颜色color;\n\t字体名称face 如<font face=标楷体> 标楷体</font>\n\t\n5. 文本格式化：\n\t<b><strong>定义粗体字体\n\t<em> 定义着重文字\n\t<i><em>定义斜体字\n\t<small>、<big>定义小、大号字\n\t<sub> <sup>上下标\n\t<ins><del>定义插入字、删除字\n\t\n\t<abbr><acronym>定义缩写、定义地址\n\t<bdo>定义文字方向 如<p><bdo dir=\"rtl\"\t\n\t<blockquote>定义长的引用\n\t<q>短的引用定义\n\t<address>定义地址\n\t<cite>定义引用、引证\n```\n\n# HTML 列表\n\n```md\n1. 无序列表ul：\n\t<ul>\n\t\t<li>Coffee</li>\n\t\t<li>Mile</li>\n\t</ul>\n\n2. 有序列表ol：\n\t<ol type=\"a\"/\"A\"/\"Ⅰ\"/\"1\">\n\t\t<li>Coffee</li>\n\t\t<li>Mile</li>\n\t</ol>\n\t\n3. 定义列表dl:\n\t<dt>标题\n\t<dd>内容\n列表可嵌套\n\n```\n\n# HTML 超链接<a>\n\n```md\n1. href=\"\": 链接地址\n2. 标签间可以为文字描绘或图片\n3. target: 打开位置  ex:_top、_blank、_self、_parent\n4. 定义位置<a id=\"\"></a>\n5. iflame 独立模块\n```\n\t\n# HTML 图像\n\n```md\n1. <img>定义图像(包含属性，并且灭有闭合标签)\n2. src源属性: <img src=\"\">\n3. alt替代文本属性: 如:<img src=\"\" alt=\"属性文本\">\n4. height、width、border属性\n```\n\t\n# HTMl 多媒体\n\n```md\n1. 音乐播放器： <audio src=\"\"  controls=\"controls\" /*循环：loop*/>不显示提示</audio>\n2. 视频播放器:  <video source> 多个格式播放\n```\n\n# HTML 表格(table)\n\n```md\n1. rowspan\n```\n# 无语义元素\n1. div模块\n2. span\n**span更改文段中某一小段文字的属性。**\n\n# 语义元素\n1. header\n2. section\n3. article\n4. nav\n5. aside\n6. footer\n\n# 微格式\n<time>\n<pubdate>\n<time datetime=\"YYYY-MM-DDThh-mm-ssTZD\">T规定时间分隔符 TZD时区标识符\n\n<input>元素类型\n\ndate month\tweek time datetime_local \n\t\nemail search tel url\n\n其他表单元素：\nselect option optgroup  textarea\n\t\n\t\n\t\n\t\n\t\n\t\n\t","source":"_posts/HTML.md","raw":"---\ntitle: HTML\ndate: 2018-03-23 14:04:56\ntags: HTML\ncategories: HTML\ndescription: HTML的初步学习，包括HTML段落、列表、超链接、表格、图像和多媒体......\n---\n\n# HTML 段落\n\n```md\n1. 分六个等级的字体(h1-h6)\n2. 换行<br>(line break)\n3. 水平线<hr>(horizontal rule)\n\n4. 字体特性设定<font></font>:\n\t字体大小size;\n\t字体颜色color;\n\t字体名称face 如<font face=标楷体> 标楷体</font>\n\t\n5. 文本格式化：\n\t<b><strong>定义粗体字体\n\t<em> 定义着重文字\n\t<i><em>定义斜体字\n\t<small>、<big>定义小、大号字\n\t<sub> <sup>上下标\n\t<ins><del>定义插入字、删除字\n\t\n\t<abbr><acronym>定义缩写、定义地址\n\t<bdo>定义文字方向 如<p><bdo dir=\"rtl\"\t\n\t<blockquote>定义长的引用\n\t<q>短的引用定义\n\t<address>定义地址\n\t<cite>定义引用、引证\n```\n\n# HTML 列表\n\n```md\n1. 无序列表ul：\n\t<ul>\n\t\t<li>Coffee</li>\n\t\t<li>Mile</li>\n\t</ul>\n\n2. 有序列表ol：\n\t<ol type=\"a\"/\"A\"/\"Ⅰ\"/\"1\">\n\t\t<li>Coffee</li>\n\t\t<li>Mile</li>\n\t</ol>\n\t\n3. 定义列表dl:\n\t<dt>标题\n\t<dd>内容\n列表可嵌套\n\n```\n\n# HTML 超链接<a>\n\n```md\n1. href=\"\": 链接地址\n2. 标签间可以为文字描绘或图片\n3. target: 打开位置  ex:_top、_blank、_self、_parent\n4. 定义位置<a id=\"\"></a>\n5. iflame 独立模块\n```\n\t\n# HTML 图像\n\n```md\n1. <img>定义图像(包含属性，并且灭有闭合标签)\n2. src源属性: <img src=\"\">\n3. alt替代文本属性: 如:<img src=\"\" alt=\"属性文本\">\n4. height、width、border属性\n```\n\t\n# HTMl 多媒体\n\n```md\n1. 音乐播放器： <audio src=\"\"  controls=\"controls\" /*循环：loop*/>不显示提示</audio>\n2. 视频播放器:  <video source> 多个格式播放\n```\n\n# HTML 表格(table)\n\n```md\n1. rowspan\n```\n# 无语义元素\n1. div模块\n2. span\n**span更改文段中某一小段文字的属性。**\n\n# 语义元素\n1. header\n2. section\n3. article\n4. nav\n5. aside\n6. footer\n\n# 微格式\n<time>\n<pubdate>\n<time datetime=\"YYYY-MM-DDThh-mm-ssTZD\">T规定时间分隔符 TZD时区标识符\n\n<input>元素类型\n\ndate month\tweek time datetime_local \n\t\nemail search tel url\n\n其他表单元素：\nselect option optgroup  textarea\n\t\n\t\n\t\n\t\n\t\n\t\n\t","slug":"HTML","published":1,"updated":"2019-09-22T07:02:11.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hb20005a7s12domewvk","content":"<h1 id=\"HTML-段落\"><a href=\"#HTML-段落\" class=\"headerlink\" title=\"HTML 段落\"></a>HTML 段落</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>分六个等级的字体(h1-h6)</span><br><span class=\"line\"><span class=\"bullet\">2. </span>换行<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span>(line break)</span><br><span class=\"line\"><span class=\"bullet\">3. </span>水平线<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span>(horizontal rule)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">4. </span>字体特性设定<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">font</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span>:</span><br><span class=\"line\"><span class=\"code\">\t字体大小size;</span></span><br><span class=\"line\"><span class=\"code\">\t字体颜色color;</span></span><br><span class=\"line\"><span class=\"code\">\t字体名称face 如&lt;font face=标楷体&gt; 标楷体&lt;/font&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t</span></span><br><span class=\"line\"><span class=\"bullet\">5. </span>文本格式化：</span><br><span class=\"line\"><span class=\"code\">\t&lt;b&gt;&lt;strong&gt;定义粗体字体</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;em&gt; 定义着重文字</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;i&gt;&lt;em&gt;定义斜体字</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;small&gt;、&lt;big&gt;定义小、大号字</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;sub&gt; &lt;sup&gt;上下标</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;ins&gt;&lt;del&gt;定义插入字、删除字</span></span><br><span class=\"line\"><span class=\"code\">\t</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;abbr&gt;&lt;acronym&gt;定义缩写、定义地址</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;bdo&gt;定义文字方向 如&lt;p&gt;&lt;bdo dir=\"rtl\"\t</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;blockquote&gt;定义长的引用</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;q&gt;短的引用定义</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;address&gt;定义地址</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;cite&gt;定义引用、引证</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"HTML-列表\"><a href=\"#HTML-列表\" class=\"headerlink\" title=\"HTML 列表\"></a>HTML 列表</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>无序列表ul：</span><br><span class=\"line\"><span class=\"code\">\t&lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&lt;li&gt;Coffee&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&lt;li&gt;Mile&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;/ul&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">2. </span>有序列表ol：</span><br><span class=\"line\"><span class=\"code\">\t&lt;ol type=\"a\"/\"A\"/\"Ⅰ\"/\"1\"&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&lt;li&gt;Coffee&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&lt;li&gt;Mile&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;/ol&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t</span></span><br><span class=\"line\"><span class=\"bullet\">3. </span>定义列表dl:</span><br><span class=\"line\"><span class=\"code\">\t&lt;dt&gt;标题</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;dd&gt;内容</span></span><br><span class=\"line\">列表可嵌套</span><br></pre></td></tr></table></figure>\n<h1 id=\"HTML-超链接\"><a href=\"#HTML-超链接\" class=\"headerlink\" title=\"HTML 超链接\"></a>HTML 超链接<a></a></h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>href=\"\": 链接地址</span><br><span class=\"line\"><span class=\"bullet\">2. </span>标签间可以为文字描绘或图片</span><br><span class=\"line\"><span class=\"bullet\">3. </span>target: 打开位置  ex:<span class=\"emphasis\">_top、_</span>blank、<span class=\"emphasis\">_self、_</span>parent</span><br><span class=\"line\"><span class=\"bullet\">4. </span>定义位置<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"\"</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"bullet\">5. </span>iflame 独立模块</span><br></pre></td></tr></table></figure>\n<h1 id=\"HTML-图像\"><a href=\"#HTML-图像\" class=\"headerlink\" title=\"HTML 图像\"></a>HTML 图像</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span>&gt;</span></span>定义图像(包含属性，并且灭有闭合标签)</span><br><span class=\"line\"><span class=\"bullet\">2. </span>src源属性: <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"bullet\">3. </span>alt替代文本属性: 如:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"属性文本\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"bullet\">4. </span>height、width、border属性</span><br></pre></td></tr></table></figure>\n<h1 id=\"HTMl-多媒体\"><a href=\"#HTMl-多媒体\" class=\"headerlink\" title=\"HTMl 多媒体\"></a>HTMl 多媒体</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>音乐播放器： <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span>  <span class=\"attr\">controls</span>=<span class=\"string\">\"controls\"</span> /*循环：<span class=\"attr\">loop</span>*/&gt;</span></span>不显示提示<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"bullet\">2. </span>视频播放器:  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">source</span>&gt;</span></span> 多个格式播放</span><br></pre></td></tr></table></figure>\n<h1 id=\"HTML-表格-table\"><a href=\"#HTML-表格-table\" class=\"headerlink\" title=\"HTML 表格(table)\"></a>HTML 表格(table)</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>rowspan</span><br></pre></td></tr></table></figure>\n<h1 id=\"无语义元素\"><a href=\"#无语义元素\" class=\"headerlink\" title=\"无语义元素\"></a>无语义元素</h1><ol>\n<li>div模块</li>\n<li>span<br><strong>span更改文段中某一小段文字的属性。</strong></li>\n</ol>\n<h1 id=\"语义元素\"><a href=\"#语义元素\" class=\"headerlink\" title=\"语义元素\"></a>语义元素</h1><ol>\n<li>header</li>\n<li>section</li>\n<li>article</li>\n<li>nav</li>\n<li>aside</li>\n<li>footer</li>\n</ol>\n<h1 id=\"微格式\"><a href=\"#微格式\" class=\"headerlink\" title=\"微格式\"></a>微格式</h1><p><time></time></p>\n<p><pubdate><br><time datetime=\"YYYY-MM-DDThh-mm-ssTZD\">T规定时间分隔符 TZD时区标识符</time></pubdate></p>\n<p><input>元素类型</p>\n<p>date month    week time datetime_local </p>\n<p>email search tel url</p>\n<p>其他表单元素：<br>select option optgroup  textarea</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"HTML-段落\"><a href=\"#HTML-段落\" class=\"headerlink\" title=\"HTML 段落\"></a>HTML 段落</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>分六个等级的字体(h1-h6)</span><br><span class=\"line\"><span class=\"bullet\">2. </span>换行<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span>(line break)</span><br><span class=\"line\"><span class=\"bullet\">3. </span>水平线<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span>(horizontal rule)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">4. </span>字体特性设定<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">font</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span></span>:</span><br><span class=\"line\"><span class=\"code\">\t字体大小size;</span></span><br><span class=\"line\"><span class=\"code\">\t字体颜色color;</span></span><br><span class=\"line\"><span class=\"code\">\t字体名称face 如&lt;font face=标楷体&gt; 标楷体&lt;/font&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t</span></span><br><span class=\"line\"><span class=\"bullet\">5. </span>文本格式化：</span><br><span class=\"line\"><span class=\"code\">\t&lt;b&gt;&lt;strong&gt;定义粗体字体</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;em&gt; 定义着重文字</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;i&gt;&lt;em&gt;定义斜体字</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;small&gt;、&lt;big&gt;定义小、大号字</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;sub&gt; &lt;sup&gt;上下标</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;ins&gt;&lt;del&gt;定义插入字、删除字</span></span><br><span class=\"line\"><span class=\"code\">\t</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;abbr&gt;&lt;acronym&gt;定义缩写、定义地址</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;bdo&gt;定义文字方向 如&lt;p&gt;&lt;bdo dir=\"rtl\"\t</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;blockquote&gt;定义长的引用</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;q&gt;短的引用定义</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;address&gt;定义地址</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;cite&gt;定义引用、引证</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"HTML-列表\"><a href=\"#HTML-列表\" class=\"headerlink\" title=\"HTML 列表\"></a>HTML 列表</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>无序列表ul：</span><br><span class=\"line\"><span class=\"code\">\t&lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&lt;li&gt;Coffee&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&lt;li&gt;Mile&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;/ul&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">2. </span>有序列表ol：</span><br><span class=\"line\"><span class=\"code\">\t&lt;ol type=\"a\"/\"A\"/\"Ⅰ\"/\"1\"&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&lt;li&gt;Coffee&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&lt;li&gt;Mile&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;/ol&gt;</span></span><br><span class=\"line\"><span class=\"code\">\t</span></span><br><span class=\"line\"><span class=\"bullet\">3. </span>定义列表dl:</span><br><span class=\"line\"><span class=\"code\">\t&lt;dt&gt;标题</span></span><br><span class=\"line\"><span class=\"code\">\t&lt;dd&gt;内容</span></span><br><span class=\"line\">列表可嵌套</span><br></pre></td></tr></table></figure>\n<h1 id=\"HTML-超链接\"><a href=\"#HTML-超链接\" class=\"headerlink\" title=\"HTML 超链接\"></a>HTML 超链接<a></a></h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>href=\"\": 链接地址</span><br><span class=\"line\"><span class=\"bullet\">2. </span>标签间可以为文字描绘或图片</span><br><span class=\"line\"><span class=\"bullet\">3. </span>target: 打开位置  ex:<span class=\"emphasis\">_top、_</span>blank、<span class=\"emphasis\">_self、_</span>parent</span><br><span class=\"line\"><span class=\"bullet\">4. </span>定义位置<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"\"</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"bullet\">5. </span>iflame 独立模块</span><br></pre></td></tr></table></figure>\n<h1 id=\"HTML-图像\"><a href=\"#HTML-图像\" class=\"headerlink\" title=\"HTML 图像\"></a>HTML 图像</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span>&gt;</span></span>定义图像(包含属性，并且灭有闭合标签)</span><br><span class=\"line\"><span class=\"bullet\">2. </span>src源属性: <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"bullet\">3. </span>alt替代文本属性: 如:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"属性文本\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"bullet\">4. </span>height、width、border属性</span><br></pre></td></tr></table></figure>\n<h1 id=\"HTMl-多媒体\"><a href=\"#HTMl-多媒体\" class=\"headerlink\" title=\"HTMl 多媒体\"></a>HTMl 多媒体</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>音乐播放器： <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span>  <span class=\"attr\">controls</span>=<span class=\"string\">\"controls\"</span> /*循环：<span class=\"attr\">loop</span>*/&gt;</span></span>不显示提示<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"bullet\">2. </span>视频播放器:  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">source</span>&gt;</span></span> 多个格式播放</span><br></pre></td></tr></table></figure>\n<h1 id=\"HTML-表格-table\"><a href=\"#HTML-表格-table\" class=\"headerlink\" title=\"HTML 表格(table)\"></a>HTML 表格(table)</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1. </span>rowspan</span><br></pre></td></tr></table></figure>\n<h1 id=\"无语义元素\"><a href=\"#无语义元素\" class=\"headerlink\" title=\"无语义元素\"></a>无语义元素</h1><ol>\n<li>div模块</li>\n<li>span<br><strong>span更改文段中某一小段文字的属性。</strong></li>\n</ol>\n<h1 id=\"语义元素\"><a href=\"#语义元素\" class=\"headerlink\" title=\"语义元素\"></a>语义元素</h1><ol>\n<li>header</li>\n<li>section</li>\n<li>article</li>\n<li>nav</li>\n<li>aside</li>\n<li>footer</li>\n</ol>\n<h1 id=\"微格式\"><a href=\"#微格式\" class=\"headerlink\" title=\"微格式\"></a>微格式</h1><p><time></time></p>\n<p><pubdate><br><time datetime=\"YYYY-MM-DDThh-mm-ssTZD\">T规定时间分隔符 TZD时区标识符</time></pubdate></p>\n<p><input>元素类型</p>\n<p>date month    week time datetime_local </p>\n<p>email search tel url</p>\n<p>其他表单元素：<br>select option optgroup  textarea</p>\n"},{"title":"JS","date":"2018-04-27T06:29:52.000Z","description":"HTML中的Javascript。","_content":"\n## 内部的script\n```Javascript\n<script type=\"text/javascript\"></script>\n```\n## 外部的script\nscript标签内用arc\n## 作用","source":"_posts/JS.md","raw":"---\ntitle: JS\ndate: 2018-04-27 14:29:52\ntags: JS\ncategories: JS\ndescription: HTML中的Javascript。\n---\n\n## 内部的script\n```Javascript\n<script type=\"text/javascript\"></script>\n```\n## 外部的script\nscript标签内用arc\n## 作用","slug":"JS","published":1,"updated":"2019-09-22T07:02:11.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hb30006a7s1chcuiq2i","content":"<h2 id=\"内部的script\"><a href=\"#内部的script\" class=\"headerlink\" title=\"内部的script\"></a>内部的script</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"外部的script\"><a href=\"#外部的script\" class=\"headerlink\" title=\"外部的script\"></a>外部的script</h2><p>script标签内用arc</p>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"内部的script\"><a href=\"#内部的script\" class=\"headerlink\" title=\"内部的script\"></a>内部的script</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"外部的script\"><a href=\"#外部的script\" class=\"headerlink\" title=\"外部的script\"></a>外部的script</h2><p>script标签内用arc</p>\n<h2 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h2>"},{"title":"PyMySQL初识","date":"2018-09-03T14:53:15.000Z","description":"Python与MySQL的连接。","_content":"\n先用pip 下载PyMySQL的库\n然后就是mysql 的配置\n然后是sql语句的使用\n了解MySQL的游标含义\n使用pymysql对MySQL进行操作\n\n坑： ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)\n不能直接输入mysql连接\n官网有很全的安装指南\nhttps://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install\n\n安装后登录的时候输入\nmysql -h<locolhost> -uroot -p<密码>\n记得 -h和-p后面都不能加空格\n如 mysql -h127.0.0.1 -uroot -p88888888\n导出问题（https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）\n\nshow variables like '%secure%';\n找出secure_file_priv的目录，输出到该目录下即可\n\n## 题目：做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。\n## 代码：\n```python3\nimport random\nimport pymysql\n\n## 创建新的数据库\ncon = pymysql.connect(host='127.0.0.1', user='root', passwd='88609723')\ncursor = con.cursor() # 获取游标\nsql = 'DROP DATABASE Code'\ncursor.execute(sql)\nsql = 'CREATE DATABASE Code'\ncursor.execute(sql)\nsql = 'USE Code'\ncursor.execute(sql)\nsql = 'CREATE TABLE Code(Code_id int NOT NULL,Code VARCHAR(100) NOT NULL)'\ncursor.execute(sql)\n\n# 输入文件\n# file = open('code.txt','w')\n# for j in range(200):\n#     Code = ''\n#     Code = Code + str(j + 1) + ': '\n#     for i in range(16):\n#         f = random.randint(0,2) # randint 跟range范围不同\n#         if f == 0:\n#             Code = Code + chr(random.randint(48,57))\n#         if f == 1:\n#             Code = Code + chr(random.randint(65,90))\n#         if f == 2:\n#             Code = Code + chr(random.randint(97,122))\n#         if (i + 1) % 4 == 0 and i != 15:\n#             Code = Code + '-'\n#     Code = Code + '\\n'\n#     file.write(Code)\n\nfor j in range(200):\n    Code = ''\n    for i in range(16):\n        f = random.randint(0,2)\n        if f == 0:\n            Code = Code + chr(random.randint(48,57))\n        if f == 1:\n            Code = Code + chr(random.randint(65,90))\n        if f == 2:\n            Code = Code + chr(random.randint(97,122))\n        if (i + 1) % 4 == 0 and i != 15:\n            Code = Code + '-'\n    sql = 'INSERT INTO Code(Code_id,Code) VALUES ( \"%d\",\"%s\")' %((j+1),Code)\n    cursor.execute(sql)\n\n\nsql = ' SELECT * FROM Code INTO OUTFILE \"/var/lib/mysql-files/Code.txt\" '\ncursor.execute(sql)\n\n# 关闭连接，释放资源\ncursor.close()\ncon.commit()\ncon.close()\n```\n","source":"_posts/PyMySQL初识.md","raw":"---\ntitle: PyMySQL初识\ndate: 2018-09-03 22:53:15\ntags:\n    - python3小练手\ncategories:\n    - Python3\ndescription:\n    Python与MySQL的连接。\n\n---\n\n先用pip 下载PyMySQL的库\n然后就是mysql 的配置\n然后是sql语句的使用\n了解MySQL的游标含义\n使用pymysql对MySQL进行操作\n\n坑： ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)\n不能直接输入mysql连接\n官网有很全的安装指南\nhttps://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install\n\n安装后登录的时候输入\nmysql -h<locolhost> -uroot -p<密码>\n记得 -h和-p后面都不能加空格\n如 mysql -h127.0.0.1 -uroot -p88888888\n导出问题（https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）\n\nshow variables like '%secure%';\n找出secure_file_priv的目录，输出到该目录下即可\n\n## 题目：做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。\n## 代码：\n```python3\nimport random\nimport pymysql\n\n## 创建新的数据库\ncon = pymysql.connect(host='127.0.0.1', user='root', passwd='88609723')\ncursor = con.cursor() # 获取游标\nsql = 'DROP DATABASE Code'\ncursor.execute(sql)\nsql = 'CREATE DATABASE Code'\ncursor.execute(sql)\nsql = 'USE Code'\ncursor.execute(sql)\nsql = 'CREATE TABLE Code(Code_id int NOT NULL,Code VARCHAR(100) NOT NULL)'\ncursor.execute(sql)\n\n# 输入文件\n# file = open('code.txt','w')\n# for j in range(200):\n#     Code = ''\n#     Code = Code + str(j + 1) + ': '\n#     for i in range(16):\n#         f = random.randint(0,2) # randint 跟range范围不同\n#         if f == 0:\n#             Code = Code + chr(random.randint(48,57))\n#         if f == 1:\n#             Code = Code + chr(random.randint(65,90))\n#         if f == 2:\n#             Code = Code + chr(random.randint(97,122))\n#         if (i + 1) % 4 == 0 and i != 15:\n#             Code = Code + '-'\n#     Code = Code + '\\n'\n#     file.write(Code)\n\nfor j in range(200):\n    Code = ''\n    for i in range(16):\n        f = random.randint(0,2)\n        if f == 0:\n            Code = Code + chr(random.randint(48,57))\n        if f == 1:\n            Code = Code + chr(random.randint(65,90))\n        if f == 2:\n            Code = Code + chr(random.randint(97,122))\n        if (i + 1) % 4 == 0 and i != 15:\n            Code = Code + '-'\n    sql = 'INSERT INTO Code(Code_id,Code) VALUES ( \"%d\",\"%s\")' %((j+1),Code)\n    cursor.execute(sql)\n\n\nsql = ' SELECT * FROM Code INTO OUTFILE \"/var/lib/mysql-files/Code.txt\" '\ncursor.execute(sql)\n\n# 关闭连接，释放资源\ncursor.close()\ncon.commit()\ncon.close()\n```\n","slug":"PyMySQL初识","published":1,"updated":"2019-09-22T07:02:11.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hb40007a7s1hp4550ne","content":"<p>先用pip 下载PyMySQL的库<br>然后就是mysql 的配置<br>然后是sql语句的使用<br>了解MySQL的游标含义<br>使用pymysql对MySQL进行操作</p>\n<p>坑： ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/run/mysqld/mysqld.sock’ (2)<br>不能直接输入mysql连接<br>官网有很全的安装指南<br><a href=\"https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install</a></p>\n<p>安装后登录的时候输入<br>mysql -h<locolhost> -uroot -p&lt;密码&gt;<br>记得 -h和-p后面都不能加空格<br>如 mysql -h127.0.0.1 -uroot -p88888888<br>导出问题（<a href=\"https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）</a></locolhost></p>\n<p>show variables like ‘%secure%’;<br>找出secure_file_priv的目录，输出到该目录下即可</p>\n<h2 id=\"题目：做为-Apple-Store-App-独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用-Python-如何生成-200-个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。\"><a href=\"#题目：做为-Apple-Store-App-独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用-Python-如何生成-200-个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。\" class=\"headerlink\" title=\"题目：做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。\"></a>题目：做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。</h2><h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import random</span><br><span class=\"line\">import pymysql</span><br><span class=\"line\"></span><br><span class=\"line\">## 创建新的数据库</span><br><span class=\"line\">con = pymysql.connect(host=&apos;127.0.0.1&apos;, user=&apos;root&apos;, passwd=&apos;88609723&apos;)</span><br><span class=\"line\">cursor = con.cursor() # 获取游标</span><br><span class=\"line\">sql = &apos;DROP DATABASE Code&apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\">sql = &apos;CREATE DATABASE Code&apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\">sql = &apos;USE Code&apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\">sql = &apos;CREATE TABLE Code(Code_id int NOT NULL,Code VARCHAR(100) NOT NULL)&apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"># 输入文件</span><br><span class=\"line\"># file = open(&apos;code.txt&apos;,&apos;w&apos;)</span><br><span class=\"line\"># for j in range(200):</span><br><span class=\"line\">#     Code = &apos;&apos;</span><br><span class=\"line\">#     Code = Code + str(j + 1) + &apos;: &apos;</span><br><span class=\"line\">#     for i in range(16):</span><br><span class=\"line\">#         f = random.randint(0,2) # randint 跟range范围不同</span><br><span class=\"line\">#         if f == 0:</span><br><span class=\"line\">#             Code = Code + chr(random.randint(48,57))</span><br><span class=\"line\">#         if f == 1:</span><br><span class=\"line\">#             Code = Code + chr(random.randint(65,90))</span><br><span class=\"line\">#         if f == 2:</span><br><span class=\"line\">#             Code = Code + chr(random.randint(97,122))</span><br><span class=\"line\">#         if (i + 1) % 4 == 0 and i != 15:</span><br><span class=\"line\">#             Code = Code + &apos;-&apos;</span><br><span class=\"line\">#     Code = Code + &apos;\\n&apos;</span><br><span class=\"line\">#     file.write(Code)</span><br><span class=\"line\"></span><br><span class=\"line\">for j in range(200):</span><br><span class=\"line\">    Code = &apos;&apos;</span><br><span class=\"line\">    for i in range(16):</span><br><span class=\"line\">        f = random.randint(0,2)</span><br><span class=\"line\">        if f == 0:</span><br><span class=\"line\">            Code = Code + chr(random.randint(48,57))</span><br><span class=\"line\">        if f == 1:</span><br><span class=\"line\">            Code = Code + chr(random.randint(65,90))</span><br><span class=\"line\">        if f == 2:</span><br><span class=\"line\">            Code = Code + chr(random.randint(97,122))</span><br><span class=\"line\">        if (i + 1) % 4 == 0 and i != 15:</span><br><span class=\"line\">            Code = Code + &apos;-&apos;</span><br><span class=\"line\">    sql = &apos;INSERT INTO Code(Code_id,Code) VALUES ( &quot;%d&quot;,&quot;%s&quot;)&apos; %((j+1),Code)</span><br><span class=\"line\">    cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sql = &apos; SELECT * FROM Code INTO OUTFILE &quot;/var/lib/mysql-files/Code.txt&quot; &apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"># 关闭连接，释放资源</span><br><span class=\"line\">cursor.close()</span><br><span class=\"line\">con.commit()</span><br><span class=\"line\">con.close()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>先用pip 下载PyMySQL的库<br>然后就是mysql 的配置<br>然后是sql语句的使用<br>了解MySQL的游标含义<br>使用pymysql对MySQL进行操作</p>\n<p>坑： ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/run/mysqld/mysqld.sock’ (2)<br>不能直接输入mysql连接<br>官网有很全的安装指南<br><a href=\"https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install</a></p>\n<p>安装后登录的时候输入<br>mysql -h<locolhost> -uroot -p&lt;密码&gt;<br>记得 -h和-p后面都不能加空格<br>如 mysql -h127.0.0.1 -uroot -p88888888<br>导出问题（<a href=\"https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）</a></locolhost></p>\n<p>show variables like ‘%secure%’;<br>找出secure_file_priv的目录，输出到该目录下即可</p>\n<h2 id=\"题目：做为-Apple-Store-App-独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用-Python-如何生成-200-个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。\"><a href=\"#题目：做为-Apple-Store-App-独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用-Python-如何生成-200-个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。\" class=\"headerlink\" title=\"题目：做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。\"></a>题目：做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？并将其保存到MySQL关系型数据库中。</h2><h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import random</span><br><span class=\"line\">import pymysql</span><br><span class=\"line\"></span><br><span class=\"line\">## 创建新的数据库</span><br><span class=\"line\">con = pymysql.connect(host=&apos;127.0.0.1&apos;, user=&apos;root&apos;, passwd=&apos;88609723&apos;)</span><br><span class=\"line\">cursor = con.cursor() # 获取游标</span><br><span class=\"line\">sql = &apos;DROP DATABASE Code&apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\">sql = &apos;CREATE DATABASE Code&apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\">sql = &apos;USE Code&apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\">sql = &apos;CREATE TABLE Code(Code_id int NOT NULL,Code VARCHAR(100) NOT NULL)&apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"># 输入文件</span><br><span class=\"line\"># file = open(&apos;code.txt&apos;,&apos;w&apos;)</span><br><span class=\"line\"># for j in range(200):</span><br><span class=\"line\">#     Code = &apos;&apos;</span><br><span class=\"line\">#     Code = Code + str(j + 1) + &apos;: &apos;</span><br><span class=\"line\">#     for i in range(16):</span><br><span class=\"line\">#         f = random.randint(0,2) # randint 跟range范围不同</span><br><span class=\"line\">#         if f == 0:</span><br><span class=\"line\">#             Code = Code + chr(random.randint(48,57))</span><br><span class=\"line\">#         if f == 1:</span><br><span class=\"line\">#             Code = Code + chr(random.randint(65,90))</span><br><span class=\"line\">#         if f == 2:</span><br><span class=\"line\">#             Code = Code + chr(random.randint(97,122))</span><br><span class=\"line\">#         if (i + 1) % 4 == 0 and i != 15:</span><br><span class=\"line\">#             Code = Code + &apos;-&apos;</span><br><span class=\"line\">#     Code = Code + &apos;\\n&apos;</span><br><span class=\"line\">#     file.write(Code)</span><br><span class=\"line\"></span><br><span class=\"line\">for j in range(200):</span><br><span class=\"line\">    Code = &apos;&apos;</span><br><span class=\"line\">    for i in range(16):</span><br><span class=\"line\">        f = random.randint(0,2)</span><br><span class=\"line\">        if f == 0:</span><br><span class=\"line\">            Code = Code + chr(random.randint(48,57))</span><br><span class=\"line\">        if f == 1:</span><br><span class=\"line\">            Code = Code + chr(random.randint(65,90))</span><br><span class=\"line\">        if f == 2:</span><br><span class=\"line\">            Code = Code + chr(random.randint(97,122))</span><br><span class=\"line\">        if (i + 1) % 4 == 0 and i != 15:</span><br><span class=\"line\">            Code = Code + &apos;-&apos;</span><br><span class=\"line\">    sql = &apos;INSERT INTO Code(Code_id,Code) VALUES ( &quot;%d&quot;,&quot;%s&quot;)&apos; %((j+1),Code)</span><br><span class=\"line\">    cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sql = &apos; SELECT * FROM Code INTO OUTFILE &quot;/var/lib/mysql-files/Code.txt&quot; &apos;</span><br><span class=\"line\">cursor.execute(sql)</span><br><span class=\"line\"></span><br><span class=\"line\"># 关闭连接，释放资源</span><br><span class=\"line\">cursor.close()</span><br><span class=\"line\">con.commit()</span><br><span class=\"line\">con.close()</span><br></pre></td></tr></table></figure>\n"},{"title":"Python3 图像的基本处理","date":"2018-09-03T02:44:02.000Z","description":"对图像的基本处理","_content":"\n\n# python3 图像的基本处理\n## 图像的大小\n```python3\njpg = Image.open(\"**.jpg\")\nx , y = jpg.size\n```\n此时， xy分别为图像的高和宽\n\n官方文档如下：\nhttps://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html\n\n```python3\nfrom PIL import Image, ImageDraw , ImageFont\n\njpg = Image.open(\"old.jpg\")\ndraw = ImageDraw.Draw(jpg)\nx , y = jpg.size\nprint (x,y)\nfont = ImageFont.truetype('Ubuntu-RI.ttf', 40)\ndraw.text((250 , 20), \"中文？\", \"red\" , font = font )\n# jpg.save(\"old.jpg\")\njpg.show()\n```\n\n## 题目：\n将你的 QQ 头像（或者微博头像）右上角加上红色的数字，类似于微信未读信息数量那种提示效果。 类似于图中效果\n\n## 代码：\n```python\nfrom PIL import Image, ImageDraw , ImageFont\njpg = Image.open(\"new.jpg\")\n#\ndraw = ImageDraw.Draw(jpg)\nx , y = jpg.size\nprint (x,y)\n# draw.test( (10, y - 40) , \"4\" , \"red\" , font = 'LiberationSans-Regular.ttf')\n\nfont = ImageFont.truetype('Ubuntu-RI.ttf', 40)\ndraw.text((250 , 20), \"中文？\", \"red\" , font =  font )\njpg.save(\"new.jpg\")\n\njpg.show()\n```\n\n## 效果\n{% asset_img 1.jpg %}\n","source":"_posts/Python3-PIL图像处理.md","raw":"---\ntitle: Python3 图像的基本处理\ndate: 2018-09-03 10:44:02\ntags:\n    - python3小练手\ncategories:\n    - Python3\ndescription:\n    对图像的基本处理\n---\n\n\n# python3 图像的基本处理\n## 图像的大小\n```python3\njpg = Image.open(\"**.jpg\")\nx , y = jpg.size\n```\n此时， xy分别为图像的高和宽\n\n官方文档如下：\nhttps://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html\n\n```python3\nfrom PIL import Image, ImageDraw , ImageFont\n\njpg = Image.open(\"old.jpg\")\ndraw = ImageDraw.Draw(jpg)\nx , y = jpg.size\nprint (x,y)\nfont = ImageFont.truetype('Ubuntu-RI.ttf', 40)\ndraw.text((250 , 20), \"中文？\", \"red\" , font = font )\n# jpg.save(\"old.jpg\")\njpg.show()\n```\n\n## 题目：\n将你的 QQ 头像（或者微博头像）右上角加上红色的数字，类似于微信未读信息数量那种提示效果。 类似于图中效果\n\n## 代码：\n```python\nfrom PIL import Image, ImageDraw , ImageFont\njpg = Image.open(\"new.jpg\")\n#\ndraw = ImageDraw.Draw(jpg)\nx , y = jpg.size\nprint (x,y)\n# draw.test( (10, y - 40) , \"4\" , \"red\" , font = 'LiberationSans-Regular.ttf')\n\nfont = ImageFont.truetype('Ubuntu-RI.ttf', 40)\ndraw.text((250 , 20), \"中文？\", \"red\" , font =  font )\njpg.save(\"new.jpg\")\n\njpg.show()\n```\n\n## 效果\n{% asset_img 1.jpg %}\n","slug":"Python3-PIL图像处理","published":1,"updated":"2019-09-22T07:02:11.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hb7000aa7s18r0mbg64","content":"<h1 id=\"python3-图像的基本处理\"><a href=\"#python3-图像的基本处理\" class=\"headerlink\" title=\"python3 图像的基本处理\"></a>python3 图像的基本处理</h1><h2 id=\"图像的大小\"><a href=\"#图像的大小\" class=\"headerlink\" title=\"图像的大小\"></a>图像的大小</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jpg = Image.open(&quot;**.jpg&quot;)</span><br><span class=\"line\">x , y = jpg.size</span><br></pre></td></tr></table></figure>\n<p>此时， xy分别为图像的高和宽</p>\n<p>官方文档如下：<br><a href=\"https://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html\" target=\"_blank\" rel=\"noopener\">https://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from PIL import Image, ImageDraw , ImageFont</span><br><span class=\"line\"></span><br><span class=\"line\">jpg = Image.open(&quot;old.jpg&quot;)</span><br><span class=\"line\">draw = ImageDraw.Draw(jpg)</span><br><span class=\"line\">x , y = jpg.size</span><br><span class=\"line\">print (x,y)</span><br><span class=\"line\">font = ImageFont.truetype(&apos;Ubuntu-RI.ttf&apos;, 40)</span><br><span class=\"line\">draw.text((250 , 20), &quot;中文？&quot;, &quot;red&quot; , font = font )</span><br><span class=\"line\"># jpg.save(&quot;old.jpg&quot;)</span><br><span class=\"line\">jpg.show()</span><br></pre></td></tr></table></figure>\n<h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><p>将你的 QQ 头像（或者微博头像）右上角加上红色的数字，类似于微信未读信息数量那种提示效果。 类似于图中效果</p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageDraw , ImageFont</span><br><span class=\"line\">jpg = Image.open(<span class=\"string\">\"new.jpg\"</span>)</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">draw = ImageDraw.Draw(jpg)</span><br><span class=\"line\">x , y = jpg.size</span><br><span class=\"line\"><span class=\"keyword\">print</span> (x,y)</span><br><span class=\"line\"><span class=\"comment\"># draw.test( (10, y - 40) , \"4\" , \"red\" , font = 'LiberationSans-Regular.ttf')</span></span><br><span class=\"line\"></span><br><span class=\"line\">font = ImageFont.truetype(<span class=\"string\">'Ubuntu-RI.ttf'</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">draw.text((<span class=\"number\">250</span> , <span class=\"number\">20</span>), <span class=\"string\">\"中文？\"</span>, <span class=\"string\">\"red\"</span> , font =  font )</span><br><span class=\"line\">jpg.save(<span class=\"string\">\"new.jpg\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">jpg.show()</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><img src=\"/2018/09/03/Python3-PIL图像处理/1.jpg\">\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"python3-图像的基本处理\"><a href=\"#python3-图像的基本处理\" class=\"headerlink\" title=\"python3 图像的基本处理\"></a>python3 图像的基本处理</h1><h2 id=\"图像的大小\"><a href=\"#图像的大小\" class=\"headerlink\" title=\"图像的大小\"></a>图像的大小</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jpg = Image.open(&quot;**.jpg&quot;)</span><br><span class=\"line\">x , y = jpg.size</span><br></pre></td></tr></table></figure>\n<p>此时， xy分别为图像的高和宽</p>\n<p>官方文档如下：<br><a href=\"https://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html\" target=\"_blank\" rel=\"noopener\">https://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from PIL import Image, ImageDraw , ImageFont</span><br><span class=\"line\"></span><br><span class=\"line\">jpg = Image.open(&quot;old.jpg&quot;)</span><br><span class=\"line\">draw = ImageDraw.Draw(jpg)</span><br><span class=\"line\">x , y = jpg.size</span><br><span class=\"line\">print (x,y)</span><br><span class=\"line\">font = ImageFont.truetype(&apos;Ubuntu-RI.ttf&apos;, 40)</span><br><span class=\"line\">draw.text((250 , 20), &quot;中文？&quot;, &quot;red&quot; , font = font )</span><br><span class=\"line\"># jpg.save(&quot;old.jpg&quot;)</span><br><span class=\"line\">jpg.show()</span><br></pre></td></tr></table></figure>\n<h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><p>将你的 QQ 头像（或者微博头像）右上角加上红色的数字，类似于微信未读信息数量那种提示效果。 类似于图中效果</p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image, ImageDraw , ImageFont</span><br><span class=\"line\">jpg = Image.open(<span class=\"string\">\"new.jpg\"</span>)</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">draw = ImageDraw.Draw(jpg)</span><br><span class=\"line\">x , y = jpg.size</span><br><span class=\"line\"><span class=\"keyword\">print</span> (x,y)</span><br><span class=\"line\"><span class=\"comment\"># draw.test( (10, y - 40) , \"4\" , \"red\" , font = 'LiberationSans-Regular.ttf')</span></span><br><span class=\"line\"></span><br><span class=\"line\">font = ImageFont.truetype(<span class=\"string\">'Ubuntu-RI.ttf'</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">draw.text((<span class=\"number\">250</span> , <span class=\"number\">20</span>), <span class=\"string\">\"中文？\"</span>, <span class=\"string\">\"red\"</span> , font =  font )</span><br><span class=\"line\">jpg.save(<span class=\"string\">\"new.jpg\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">jpg.show()</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><img src=\"/2018/09/03/Python3-PIL图像处理/1.jpg\">\n"},{"title":"Python文件处理","date":"2018-09-10T00:23:03.000Z","description":"用python对文件的基本处理，字典的使用","_content":"\n# 题目\n 任一个英文的纯文本文件，统计其中的单词出现的个数。\n\n```python3\nimport re\nf = open('words.txt')\n\nwords_dict = {}\nList = []\nfor line in f :\n    # for i in line:\n        E = re.findall(r'[^a-zA-Z]+', line)\n        for j in E:\n            line = line.replace( j , ' ')\n        List = line.split()\n        for j in List:\n            if j not in words_dict:\n                words_dict[j] = 1\n            else:\n                words_dict[j] = words_dict[j] + 1\n\nprint(words_dict)\nwords_dict = sorted ( words_dict.items() ,key=lambda item: item[1] )\n\nprint(words_dict)\n# for i in words_dict:\n#     print (i  , words_dict[i] )\n```\n","source":"_posts/Python文件处理.md","raw":"---\ntitle: Python文件处理\ndate: 2018-09-10 08:23:03\ntags:\n    - python3小练手\ncategories:\n    - Python3\ndescription:\n    用python对文件的基本处理，字典的使用\n---\n\n# 题目\n 任一个英文的纯文本文件，统计其中的单词出现的个数。\n\n```python3\nimport re\nf = open('words.txt')\n\nwords_dict = {}\nList = []\nfor line in f :\n    # for i in line:\n        E = re.findall(r'[^a-zA-Z]+', line)\n        for j in E:\n            line = line.replace( j , ' ')\n        List = line.split()\n        for j in List:\n            if j not in words_dict:\n                words_dict[j] = 1\n            else:\n                words_dict[j] = words_dict[j] + 1\n\nprint(words_dict)\nwords_dict = sorted ( words_dict.items() ,key=lambda item: item[1] )\n\nprint(words_dict)\n# for i in words_dict:\n#     print (i  , words_dict[i] )\n```\n","slug":"Python文件处理","published":1,"updated":"2019-09-22T07:02:11.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hb9000ba7s1aevmxk9r","content":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p> 任一个英文的纯文本文件，统计其中的单词出现的个数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import re</span><br><span class=\"line\">f = open(&apos;words.txt&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">words_dict = &#123;&#125;</span><br><span class=\"line\">List = []</span><br><span class=\"line\">for line in f :</span><br><span class=\"line\">    # for i in line:</span><br><span class=\"line\">        E = re.findall(r&apos;[^a-zA-Z]+&apos;, line)</span><br><span class=\"line\">        for j in E:</span><br><span class=\"line\">            line = line.replace( j , &apos; &apos;)</span><br><span class=\"line\">        List = line.split()</span><br><span class=\"line\">        for j in List:</span><br><span class=\"line\">            if j not in words_dict:</span><br><span class=\"line\">                words_dict[j] = 1</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                words_dict[j] = words_dict[j] + 1</span><br><span class=\"line\"></span><br><span class=\"line\">print(words_dict)</span><br><span class=\"line\">words_dict = sorted ( words_dict.items() ,key=lambda item: item[1] )</span><br><span class=\"line\"></span><br><span class=\"line\">print(words_dict)</span><br><span class=\"line\"># for i in words_dict:</span><br><span class=\"line\">#     print (i  , words_dict[i] )</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p> 任一个英文的纯文本文件，统计其中的单词出现的个数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import re</span><br><span class=\"line\">f = open(&apos;words.txt&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">words_dict = &#123;&#125;</span><br><span class=\"line\">List = []</span><br><span class=\"line\">for line in f :</span><br><span class=\"line\">    # for i in line:</span><br><span class=\"line\">        E = re.findall(r&apos;[^a-zA-Z]+&apos;, line)</span><br><span class=\"line\">        for j in E:</span><br><span class=\"line\">            line = line.replace( j , &apos; &apos;)</span><br><span class=\"line\">        List = line.split()</span><br><span class=\"line\">        for j in List:</span><br><span class=\"line\">            if j not in words_dict:</span><br><span class=\"line\">                words_dict[j] = 1</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                words_dict[j] = words_dict[j] + 1</span><br><span class=\"line\"></span><br><span class=\"line\">print(words_dict)</span><br><span class=\"line\">words_dict = sorted ( words_dict.items() ,key=lambda item: item[1] )</span><br><span class=\"line\"></span><br><span class=\"line\">print(words_dict)</span><br><span class=\"line\"># for i in words_dict:</span><br><span class=\"line\">#     print (i  , words_dict[i] )</span><br></pre></td></tr></table></figure>\n"},{"title":"STL之list","date":"2018-03-29T10:37:29.000Z","description":"list与数据结构中的双向链表有点相似。","_content":"\n### list\nlist的插入，遍历，删除，查找，排序都与vector容器相似。下面直接在实例中展示。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    list<int>l,l1;\n    for(int i=0;i<3;i++)\n    \tl1.push_back(i*i);\n    l.push_back(3);\n    l.push_front(1);\n    l.insert(++l.begin(),2);  //list 的迭代器只能++--不能+n-n \n    l.insert(l.end(),l1.begin(),l1.end());\n    // 正向遍历 \n\tfor(list<int>::iterator i=l.begin();i!=l.end();i++)\n    \tcout<<*i<<\" \";  \n    cout<<endl;\n    //  反向遍历 \n    for(list<int>::reverse_iterator i=l.rbegin();i!=l.rend();i++)\n    \tcout<<*i<<\" \";\n    cout<<endl;\n    // 排序&去重 \n\tl.sort();\n\tl.unique();\n\tfor(list<int>::iterator i=l.begin();i!=l.end();i++)\n    \tcout<<*i<<\" \";\n    cout<<endl;\n    //查找元素以及删除迭代器位置的元素 \n    l.erase(find(l.begin(),l.end(),4));\n    for(list<int>::iterator i=l.begin();i!=l.end();i++)\n    \tcout<<*i<<\" \";\n    cout<<endl;\n    srand(time(0));\n    // pop首、尾的弹出 \n    for(int i=0;i<4;i++){\n    \tif(i%2)\n\t\t\tl.pop_back();\n\t\telse l.pop_front();\n\t\tfor(list<int>::iterator i=l.begin();i!=l.end();i++)\n    \t\tcout<<*i<<\" \";\n\t\tcout<<endl;\n\t}\n    return 0;\t\n}\n```\n运行结果：\n{% asset_img list.png %}\n\n**主要注意点是list的迭代器只能用++ -- 到达想要的位置**\n","source":"_posts/STL之list.md","raw":"---\ntitle: STL之list\ndate: 2018-03-29 18:37:29\ntags: STL\ncategories: C/C++\ndescription: list与数据结构中的双向链表有点相似。\n---\n\n### list\nlist的插入，遍历，删除，查找，排序都与vector容器相似。下面直接在实例中展示。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    list<int>l,l1;\n    for(int i=0;i<3;i++)\n    \tl1.push_back(i*i);\n    l.push_back(3);\n    l.push_front(1);\n    l.insert(++l.begin(),2);  //list 的迭代器只能++--不能+n-n \n    l.insert(l.end(),l1.begin(),l1.end());\n    // 正向遍历 \n\tfor(list<int>::iterator i=l.begin();i!=l.end();i++)\n    \tcout<<*i<<\" \";  \n    cout<<endl;\n    //  反向遍历 \n    for(list<int>::reverse_iterator i=l.rbegin();i!=l.rend();i++)\n    \tcout<<*i<<\" \";\n    cout<<endl;\n    // 排序&去重 \n\tl.sort();\n\tl.unique();\n\tfor(list<int>::iterator i=l.begin();i!=l.end();i++)\n    \tcout<<*i<<\" \";\n    cout<<endl;\n    //查找元素以及删除迭代器位置的元素 \n    l.erase(find(l.begin(),l.end(),4));\n    for(list<int>::iterator i=l.begin();i!=l.end();i++)\n    \tcout<<*i<<\" \";\n    cout<<endl;\n    srand(time(0));\n    // pop首、尾的弹出 \n    for(int i=0;i<4;i++){\n    \tif(i%2)\n\t\t\tl.pop_back();\n\t\telse l.pop_front();\n\t\tfor(list<int>::iterator i=l.begin();i!=l.end();i++)\n    \t\tcout<<*i<<\" \";\n\t\tcout<<endl;\n\t}\n    return 0;\t\n}\n```\n运行结果：\n{% asset_img list.png %}\n\n**主要注意点是list的迭代器只能用++ -- 到达想要的位置**\n","slug":"STL之list","published":1,"updated":"2019-09-22T07:02:11.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbb000fa7s1glg3z7hl","content":"<h3 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h3><p>list的插入，遍历，删除，查找，排序都与vector容器相似。下面直接在实例中展示。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;l,l1;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)</span><br><span class=\"line\">    \tl1.push_back(i*i);</span><br><span class=\"line\">    l.push_back(<span class=\"number\">3</span>);</span><br><span class=\"line\">    l.push_front(<span class=\"number\">1</span>);</span><br><span class=\"line\">    l.insert(++l.begin(),<span class=\"number\">2</span>);  <span class=\"comment\">//list 的迭代器只能++--不能+n-n </span></span><br><span class=\"line\">    l.insert(l.end(),l1.begin(),l1.end());</span><br><span class=\"line\">    <span class=\"comment\">// 正向遍历 </span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=l.begin();i!=l.end();i++)</span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"comment\">//  反向遍历 </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::reverse_iterator i=l.rbegin();i!=l.rend();i++)</span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 排序&amp;去重 </span></span><br><span class=\"line\">\tl.sort();</span><br><span class=\"line\">\tl.unique();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=l.begin();i!=l.end();i++)</span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"comment\">//查找元素以及删除迭代器位置的元素 </span></span><br><span class=\"line\">    l.erase(find(l.begin(),l.end(),<span class=\"number\">4</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=l.begin();i!=l.end();i++)</span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    srand(time(<span class=\"number\">0</span>));</span><br><span class=\"line\">    <span class=\"comment\">// pop首、尾的弹出 </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\tl.pop_back();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> l.pop_front();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=l.begin();i!=l.end();i++)</span><br><span class=\"line\">    \t\t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果：<br><img src=\"/2018/03/29/STL之list/list.png\"></p>\n<p><strong>主要注意点是list的迭代器只能用++ – 到达想要的位置</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h3><p>list的插入，遍历，删除，查找，排序都与vector容器相似。下面直接在实例中展示。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;l,l1;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)</span><br><span class=\"line\">    \tl1.push_back(i*i);</span><br><span class=\"line\">    l.push_back(<span class=\"number\">3</span>);</span><br><span class=\"line\">    l.push_front(<span class=\"number\">1</span>);</span><br><span class=\"line\">    l.insert(++l.begin(),<span class=\"number\">2</span>);  <span class=\"comment\">//list 的迭代器只能++--不能+n-n </span></span><br><span class=\"line\">    l.insert(l.end(),l1.begin(),l1.end());</span><br><span class=\"line\">    <span class=\"comment\">// 正向遍历 </span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=l.begin();i!=l.end();i++)</span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"comment\">//  反向遍历 </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::reverse_iterator i=l.rbegin();i!=l.rend();i++)</span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 排序&amp;去重 </span></span><br><span class=\"line\">\tl.sort();</span><br><span class=\"line\">\tl.unique();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=l.begin();i!=l.end();i++)</span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"comment\">//查找元素以及删除迭代器位置的元素 </span></span><br><span class=\"line\">    l.erase(find(l.begin(),l.end(),<span class=\"number\">4</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=l.begin();i!=l.end();i++)</span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    srand(time(<span class=\"number\">0</span>));</span><br><span class=\"line\">    <span class=\"comment\">// pop首、尾的弹出 </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\tl.pop_back();</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> l.pop_front();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"built_in\">list</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=l.begin();i!=l.end();i++)</span><br><span class=\"line\">    \t\t<span class=\"built_in\">cout</span>&lt;&lt;*i&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果：<br><img src=\"/2018/03/29/STL之list/list.png\"></p>\n<p><strong>主要注意点是list的迭代器只能用++ – 到达想要的位置</strong></p>\n"},{"title":"STL之map","date":"2018-03-29T04:01:49.000Z","description":"map也是使用红黑树，是一个键值对(key:value映射)，遍历时依然默认按照key程序的方式遍历(与set相同)。","_content":"\n### map映照容器\n\n{% asset_img map1.png %}\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tmap<string,double>m;\n\tm[\"li\"]=123.4;\n\tm[\"wang\"]=23.1;\n\tm[\"zhang\"]=-21.9;\n\tm[\"abc\"]=12.1;\n\tfor(map<string,double>::iterator i=m.begin();i!=m.end();i++)\n\t\tcout<<(*i).first<<\":\"<<(*i).second<<endl;\n\treturn 0; \n}\n```\n运行结果：\n{% asset_img map.png %}\n\n\n### map实现数字分离\n#### string->number\n下面给出例子，可以实现超级大数的每位相加！！！\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    map<char,int> m;\n    for(int i = 0; i < 10; ++i)\n        m['0' + i] = i;\n    string s;\n    s = \"9876543210123456789876543210123456789\";\n    int sum = 0;\n    for( int i = 0; i < s.size(); ++i)\n        sum += m[s[i]];\n    cout << sum << endl;\n    return 0;\n}\n```\n运行结果：\n> 171\n\n#### number->string\n与上面的转换原理相同。\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    map<long long int,char> m;\n    long long i;\n    for(i = 0; i < 10; ++i){\n        m[i] = '0' + i;\n    }\n    long long  n[10] ={1,2,3,4,5,6,7,8,9,0};\n    for(int i=0;i<10;i++)\n   \t\tcout <<m[n[i]] ;\n    return 0;\n}\n```\n运行结果：\n> 1234567890\n\n### multimap\nmultimap与map的关系和multiset与set的关系相同，允许重复的元素，所以元素的插入删除和查找都与map不同。\n>  multimap<string,double> m;\n>  m.insert(pair<string,double>(\"Abc\",123.2));\n上述插入方法同样适用于map。\n\n### find & erase\n\n在上面的代码加上\n``C++ printf(\"%d\",m.find('5')->second);``\n可以得到‘5’对应的数字 5。\n\n```C++ m.erase(\"1\");```\n会使这一个map删除。\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/STL之map.md","raw":"---\ntitle: STL之map\ndate: 2018-03-29 12:01:49\ntags: STL\ncategories: C/C++\ndescription: map也是使用红黑树，是一个键值对(key:value映射)，遍历时依然默认按照key程序的方式遍历(与set相同)。\n---\n\n### map映照容器\n\n{% asset_img map1.png %}\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tmap<string,double>m;\n\tm[\"li\"]=123.4;\n\tm[\"wang\"]=23.1;\n\tm[\"zhang\"]=-21.9;\n\tm[\"abc\"]=12.1;\n\tfor(map<string,double>::iterator i=m.begin();i!=m.end();i++)\n\t\tcout<<(*i).first<<\":\"<<(*i).second<<endl;\n\treturn 0; \n}\n```\n运行结果：\n{% asset_img map.png %}\n\n\n### map实现数字分离\n#### string->number\n下面给出例子，可以实现超级大数的每位相加！！！\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    map<char,int> m;\n    for(int i = 0; i < 10; ++i)\n        m['0' + i] = i;\n    string s;\n    s = \"9876543210123456789876543210123456789\";\n    int sum = 0;\n    for( int i = 0; i < s.size(); ++i)\n        sum += m[s[i]];\n    cout << sum << endl;\n    return 0;\n}\n```\n运行结果：\n> 171\n\n#### number->string\n与上面的转换原理相同。\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    map<long long int,char> m;\n    long long i;\n    for(i = 0; i < 10; ++i){\n        m[i] = '0' + i;\n    }\n    long long  n[10] ={1,2,3,4,5,6,7,8,9,0};\n    for(int i=0;i<10;i++)\n   \t\tcout <<m[n[i]] ;\n    return 0;\n}\n```\n运行结果：\n> 1234567890\n\n### multimap\nmultimap与map的关系和multiset与set的关系相同，允许重复的元素，所以元素的插入删除和查找都与map不同。\n>  multimap<string,double> m;\n>  m.insert(pair<string,double>(\"Abc\",123.2));\n上述插入方法同样适用于map。\n\n### find & erase\n\n在上面的代码加上\n``C++ printf(\"%d\",m.find('5')->second);``\n可以得到‘5’对应的数字 5。\n\n```C++ m.erase(\"1\");```\n会使这一个map删除。\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"STL之map","published":1,"updated":"2019-09-22T07:02:11.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbd000ha7s1zgf74okf","content":"<h3 id=\"map映照容器\"><a href=\"#map映照容器\" class=\"headerlink\" title=\"map映照容器\"></a>map映照容器</h3><img src=\"/2018/03/29/STL之map/map1.png\">\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">double</span>&gt;m;</span><br><span class=\"line\">\tm[<span class=\"string\">\"li\"</span>]=<span class=\"number\">123.4</span>;</span><br><span class=\"line\">\tm[<span class=\"string\">\"wang\"</span>]=<span class=\"number\">23.1</span>;</span><br><span class=\"line\">\tm[<span class=\"string\">\"zhang\"</span>]=<span class=\"number\">-21.9</span>;</span><br><span class=\"line\">\tm[<span class=\"string\">\"abc\"</span>]=<span class=\"number\">12.1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">double</span>&gt;::iterator i=m.begin();i!=m.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;(*i).first&lt;&lt;<span class=\"string\">\":\"</span>&lt;&lt;(*i).second&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：<br><img src=\"/2018/03/29/STL之map/map.png\"></p>\n<h3 id=\"map实现数字分离\"><a href=\"#map实现数字分离\" class=\"headerlink\" title=\"map实现数字分离\"></a>map实现数字分离</h3><h4 id=\"string-gt-number\"><a href=\"#string-gt-number\" class=\"headerlink\" title=\"string-&gt;number\"></a>string-&gt;number</h4><p>下面给出例子，可以实现超级大数的每位相加！！！<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"keyword\">char</span>,<span class=\"keyword\">int</span>&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i)</span><br><span class=\"line\">        m[<span class=\"string\">'0'</span> + i] = i;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    s = <span class=\"string\">\"9876543210123456789876543210123456789\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>( <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.size(); ++i)</span><br><span class=\"line\">        sum += m[s[i]];</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; sum &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果：</p>\n<blockquote>\n<p>171</p>\n</blockquote>\n<h4 id=\"number-gt-string\"><a href=\"#number-gt-string\" class=\"headerlink\" title=\"number-&gt;string\"></a>number-&gt;string</h4><p>与上面的转换原理相同。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">    map&lt;long long int,char&gt; m;</span><br><span class=\"line\">    long long i;</span><br><span class=\"line\">    for(i = 0; i &lt; 10; ++i)&#123;</span><br><span class=\"line\">        m[i] = &apos;0&apos; + i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    long long  n[10] =&#123;1,2,3,4,5,6,7,8,9,0&#125;;</span><br><span class=\"line\">    for(int i=0;i&lt;10;i++)</span><br><span class=\"line\">   \t\tcout &lt;&lt;m[n[i]] ;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果：</p>\n<blockquote>\n<p>1234567890</p>\n</blockquote>\n<h3 id=\"multimap\"><a href=\"#multimap\" class=\"headerlink\" title=\"multimap\"></a>multimap</h3><p>multimap与map的关系和multiset与set的关系相同，允许重复的元素，所以元素的插入删除和查找都与map不同。</p>\n<blockquote>\n<p> multimap&lt;string,double&gt; m;<br> m.insert(pair&lt;string,double&gt;(“Abc”,123.2));<br>上述插入方法同样适用于map。</p>\n</blockquote>\n<h3 id=\"find-amp-erase\"><a href=\"#find-amp-erase\" class=\"headerlink\" title=\"find &amp; erase\"></a>find &amp; erase</h3><p>在上面的代码加上<br><code>C++ printf(&quot;%d&quot;,m.find(&#39;5&#39;)-&gt;second);</code><br>可以得到‘5’对应的数字 5。</p>\n<p><code>C++ m.erase(&quot;1&quot;);</code><br>会使这一个map删除。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"map映照容器\"><a href=\"#map映照容器\" class=\"headerlink\" title=\"map映照容器\"></a>map映照容器</h3><img src=\"/2018/03/29/STL之map/map1.png\">\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">double</span>&gt;m;</span><br><span class=\"line\">\tm[<span class=\"string\">\"li\"</span>]=<span class=\"number\">123.4</span>;</span><br><span class=\"line\">\tm[<span class=\"string\">\"wang\"</span>]=<span class=\"number\">23.1</span>;</span><br><span class=\"line\">\tm[<span class=\"string\">\"zhang\"</span>]=<span class=\"number\">-21.9</span>;</span><br><span class=\"line\">\tm[<span class=\"string\">\"abc\"</span>]=<span class=\"number\">12.1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">double</span>&gt;::iterator i=m.begin();i!=m.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;(*i).first&lt;&lt;<span class=\"string\">\":\"</span>&lt;&lt;(*i).second&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：<br><img src=\"/2018/03/29/STL之map/map.png\"></p>\n<h3 id=\"map实现数字分离\"><a href=\"#map实现数字分离\" class=\"headerlink\" title=\"map实现数字分离\"></a>map实现数字分离</h3><h4 id=\"string-gt-number\"><a href=\"#string-gt-number\" class=\"headerlink\" title=\"string-&gt;number\"></a>string-&gt;number</h4><p>下面给出例子，可以实现超级大数的每位相加！！！<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"keyword\">char</span>,<span class=\"keyword\">int</span>&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i)</span><br><span class=\"line\">        m[<span class=\"string\">'0'</span> + i] = i;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    s = <span class=\"string\">\"9876543210123456789876543210123456789\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>( <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.size(); ++i)</span><br><span class=\"line\">        sum += m[s[i]];</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; sum &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果：</p>\n<blockquote>\n<p>171</p>\n</blockquote>\n<h4 id=\"number-gt-string\"><a href=\"#number-gt-string\" class=\"headerlink\" title=\"number-&gt;string\"></a>number-&gt;string</h4><p>与上面的转换原理相同。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">    map&lt;long long int,char&gt; m;</span><br><span class=\"line\">    long long i;</span><br><span class=\"line\">    for(i = 0; i &lt; 10; ++i)&#123;</span><br><span class=\"line\">        m[i] = &apos;0&apos; + i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    long long  n[10] =&#123;1,2,3,4,5,6,7,8,9,0&#125;;</span><br><span class=\"line\">    for(int i=0;i&lt;10;i++)</span><br><span class=\"line\">   \t\tcout &lt;&lt;m[n[i]] ;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果：</p>\n<blockquote>\n<p>1234567890</p>\n</blockquote>\n<h3 id=\"multimap\"><a href=\"#multimap\" class=\"headerlink\" title=\"multimap\"></a>multimap</h3><p>multimap与map的关系和multiset与set的关系相同，允许重复的元素，所以元素的插入删除和查找都与map不同。</p>\n<blockquote>\n<p> multimap&lt;string,double&gt; m;<br> m.insert(pair&lt;string,double&gt;(“Abc”,123.2));<br>上述插入方法同样适用于map。</p>\n</blockquote>\n<h3 id=\"find-amp-erase\"><a href=\"#find-amp-erase\" class=\"headerlink\" title=\"find &amp; erase\"></a>find &amp; erase</h3><p>在上面的代码加上<br><code>C++ printf(&quot;%d&quot;,m.find(&#39;5&#39;)-&gt;second);</code><br>可以得到‘5’对应的数字 5。</p>\n<p><code>C++ m.erase(&quot;1&quot;);</code><br>会使这一个map删除。</p>\n"},{"title":"STL之set","date":"2018-03-28T14:48:14.000Z","description":"set容器它会自动调节二叉树排列，把元素放到适合的位置，确保每个子树根节点的键值大于左子树所有的值、小于右子树所有的值，插入重复数据时会忽略。","_content":"\n### set容器\nset是用红黑树的平衡二叉索引树的数据结构来实现的，插入时，它会自动调节二叉树排列，\n把元素放到适合的位置，确保每个子树根节点的键值大于左子树所有的值、小于右子树所有的值，\n插入重复数据时会忽略。set迭代器采用中序遍历，检索效率高于vector、deque、list，\n并且会将元素按照升序的序列遍历。set容器中的数值，一经更改，set会根据新值旋转二叉树，\n以保证平衡，构建set就是为了快速检索（python中的set一旦建立就是一个常量，不能改的）。\n![平衡检索二叉树(set集合)示意图](https://ws1.sinaimg.cn/large/005xm8nggy1fpsxcunkc5j30fz09et9m.jpg)\n**multiset，与set不同之处就是它允许有重复的键值。**\n\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tset<int>s;\n\tsrand(time(NULL));  //生成随机数种子 \n\tfor(int i=0;i<10;i++)\n\t\ts.insert(rand()%10);\n\tfor(set<int>::iterator i=s.begin();i!=s.end();i++)\n\t\tprintf(\"%d \",*i);\n\tcout<<endl;\n\tfor(set<int>::reverse_iterator i=s.rbegin();i!=s.rend();i++)\n\t\tprintf(\"%d \",*i);\n\treturn 0;\n}\n```\n运行结果：\n{% asset_img set1.png %}\n由于重复的被删去，所以可能输出不够十个数。而用上面把set改成上面提及的multiset就可以支持重复数字。\n{% asset_img set2.png %}\n在上面set的代码将set改为multiset即可。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tmultiset<int>s;\n\tsrand(time(NULL));  //生成随机数种子 \n\tfor(int i=0;i<10;i++)\n\t\ts.insert(rand()%10);\n\tfor(multiset<int>::iterator i=s.begin();i!=s.end();i++)\n\t\tprintf(\"%d \",*i);\n\tcout<<endl;\n\tint a=rand()%10;\n\tcout<<\"delete the num as :\"<<a<<endl;\n\tint h=s.erase(a);      //multiset的erase函数删除所有要删除的数并返回个数\n\tcout<<\"delete \"<<h<<\" \"<<\"\\\"\"<<a<<\"\\\"\"<<endl;\n\tcout<<\"after delete \"<<a<<\":\";\n\tfor(multiset<int>::reverse_iterator i=s.rbegin();i!=s.rend();i++)\n\t\tprintf(\"%d \",*i);\n\treturn 0;\n}\n```\n运行结果:\n{% asset_img set3.png %}\n\n### set的重载\n重载可改变排序依据。\nset的重载会与priority_queue放一起比较，[详情点此跳转](https://edxuanlen.tk/2018/03/30/STL%E4%B9%8Bstack-queue/#set%E7%9A%84%E9%87%8D%E8%BD%BD)！\n","source":"_posts/STL之set.md","raw":"---\ntitle: STL之set\ndate: 2018-03-28 22:48:14\ntags: STL\ncategories: C/C++\ndescription: set容器它会自动调节二叉树排列，把元素放到适合的位置，确保每个子树根节点的键值大于左子树所有的值、小于右子树所有的值，插入重复数据时会忽略。\n---\n\n### set容器\nset是用红黑树的平衡二叉索引树的数据结构来实现的，插入时，它会自动调节二叉树排列，\n把元素放到适合的位置，确保每个子树根节点的键值大于左子树所有的值、小于右子树所有的值，\n插入重复数据时会忽略。set迭代器采用中序遍历，检索效率高于vector、deque、list，\n并且会将元素按照升序的序列遍历。set容器中的数值，一经更改，set会根据新值旋转二叉树，\n以保证平衡，构建set就是为了快速检索（python中的set一旦建立就是一个常量，不能改的）。\n![平衡检索二叉树(set集合)示意图](https://ws1.sinaimg.cn/large/005xm8nggy1fpsxcunkc5j30fz09et9m.jpg)\n**multiset，与set不同之处就是它允许有重复的键值。**\n\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tset<int>s;\n\tsrand(time(NULL));  //生成随机数种子 \n\tfor(int i=0;i<10;i++)\n\t\ts.insert(rand()%10);\n\tfor(set<int>::iterator i=s.begin();i!=s.end();i++)\n\t\tprintf(\"%d \",*i);\n\tcout<<endl;\n\tfor(set<int>::reverse_iterator i=s.rbegin();i!=s.rend();i++)\n\t\tprintf(\"%d \",*i);\n\treturn 0;\n}\n```\n运行结果：\n{% asset_img set1.png %}\n由于重复的被删去，所以可能输出不够十个数。而用上面把set改成上面提及的multiset就可以支持重复数字。\n{% asset_img set2.png %}\n在上面set的代码将set改为multiset即可。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tmultiset<int>s;\n\tsrand(time(NULL));  //生成随机数种子 \n\tfor(int i=0;i<10;i++)\n\t\ts.insert(rand()%10);\n\tfor(multiset<int>::iterator i=s.begin();i!=s.end();i++)\n\t\tprintf(\"%d \",*i);\n\tcout<<endl;\n\tint a=rand()%10;\n\tcout<<\"delete the num as :\"<<a<<endl;\n\tint h=s.erase(a);      //multiset的erase函数删除所有要删除的数并返回个数\n\tcout<<\"delete \"<<h<<\" \"<<\"\\\"\"<<a<<\"\\\"\"<<endl;\n\tcout<<\"after delete \"<<a<<\":\";\n\tfor(multiset<int>::reverse_iterator i=s.rbegin();i!=s.rend();i++)\n\t\tprintf(\"%d \",*i);\n\treturn 0;\n}\n```\n运行结果:\n{% asset_img set3.png %}\n\n### set的重载\n重载可改变排序依据。\nset的重载会与priority_queue放一起比较，[详情点此跳转](https://edxuanlen.tk/2018/03/30/STL%E4%B9%8Bstack-queue/#set%E7%9A%84%E9%87%8D%E8%BD%BD)！\n","slug":"STL之set","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbg000ma7s1yl04rdo7","content":"<h3 id=\"set容器\"><a href=\"#set容器\" class=\"headerlink\" title=\"set容器\"></a>set容器</h3><p>set是用红黑树的平衡二叉索引树的数据结构来实现的，插入时，它会自动调节二叉树排列，<br>把元素放到适合的位置，确保每个子树根节点的键值大于左子树所有的值、小于右子树所有的值，<br>插入重复数据时会忽略。set迭代器采用中序遍历，检索效率高于vector、deque、list，<br>并且会将元素按照升序的序列遍历。set容器中的数值，一经更改，set会根据新值旋转二叉树，<br>以保证平衡，构建set就是为了快速检索（python中的set一旦建立就是一个常量，不能改的）。<br><img src=\"https://ws1.sinaimg.cn/large/005xm8nggy1fpsxcunkc5j30fz09et9m.jpg\" alt=\"平衡检索二叉树(set集合)示意图\"><br><strong>multiset，与set不同之处就是它允许有重复的键值。</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;s;</span><br><span class=\"line\">\tsrand(time(<span class=\"literal\">NULL</span>));  <span class=\"comment\">//生成随机数种子 </span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\ts.insert(rand()%<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=s.begin();i!=s.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::reverse_iterator i=s.rbegin();i!=s.rend();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：<br><img src=\"/2018/03/28/STL之set/set1.png\"><br>由于重复的被删去，所以可能输出不够十个数。而用上面把set改成上面提及的multiset就可以支持重复数字。<br><img src=\"/2018/03/28/STL之set/set2.png\"><br>在上面set的代码将set改为multiset即可。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">multiset</span>&lt;<span class=\"keyword\">int</span>&gt;s;</span><br><span class=\"line\">\tsrand(time(<span class=\"literal\">NULL</span>));  <span class=\"comment\">//生成随机数种子 </span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\ts.insert(rand()%<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">multiset</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=s.begin();i!=s.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a=rand()%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"delete the num as :\"</span>&lt;&lt;a&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> h=s.erase(a);      <span class=\"comment\">//multiset的erase函数删除所有要删除的数并返回个数</span></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"delete \"</span>&lt;&lt;h&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;<span class=\"string\">\"\\\"\"</span>&lt;&lt;a&lt;&lt;<span class=\"string\">\"\\\"\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"after delete \"</span>&lt;&lt;a&lt;&lt;<span class=\"string\">\":\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">multiset</span>&lt;<span class=\"keyword\">int</span>&gt;::reverse_iterator i=s.rbegin();i!=s.rend();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果:<br><img src=\"/2018/03/28/STL之set/set3.png\"></p>\n<h3 id=\"set的重载\"><a href=\"#set的重载\" class=\"headerlink\" title=\"set的重载\"></a>set的重载</h3><p>重载可改变排序依据。<br>set的重载会与priority_queue放一起比较，<a href=\"https://edxuanlen.tk/2018/03/30/STL%E4%B9%8Bstack-queue/#set%E7%9A%84%E9%87%8D%E8%BD%BD\" target=\"_blank\" rel=\"noopener\">详情点此跳转</a>！</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"set容器\"><a href=\"#set容器\" class=\"headerlink\" title=\"set容器\"></a>set容器</h3><p>set是用红黑树的平衡二叉索引树的数据结构来实现的，插入时，它会自动调节二叉树排列，<br>把元素放到适合的位置，确保每个子树根节点的键值大于左子树所有的值、小于右子树所有的值，<br>插入重复数据时会忽略。set迭代器采用中序遍历，检索效率高于vector、deque、list，<br>并且会将元素按照升序的序列遍历。set容器中的数值，一经更改，set会根据新值旋转二叉树，<br>以保证平衡，构建set就是为了快速检索（python中的set一旦建立就是一个常量，不能改的）。<br><img src=\"https://ws1.sinaimg.cn/large/005xm8nggy1fpsxcunkc5j30fz09et9m.jpg\" alt=\"平衡检索二叉树(set集合)示意图\"><br><strong>multiset，与set不同之处就是它允许有重复的键值。</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;s;</span><br><span class=\"line\">\tsrand(time(<span class=\"literal\">NULL</span>));  <span class=\"comment\">//生成随机数种子 </span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\ts.insert(rand()%<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=s.begin();i!=s.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::reverse_iterator i=s.rbegin();i!=s.rend();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：<br><img src=\"/2018/03/28/STL之set/set1.png\"><br>由于重复的被删去，所以可能输出不够十个数。而用上面把set改成上面提及的multiset就可以支持重复数字。<br><img src=\"/2018/03/28/STL之set/set2.png\"><br>在上面set的代码将set改为multiset即可。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">multiset</span>&lt;<span class=\"keyword\">int</span>&gt;s;</span><br><span class=\"line\">\tsrand(time(<span class=\"literal\">NULL</span>));  <span class=\"comment\">//生成随机数种子 </span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\ts.insert(rand()%<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">multiset</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=s.begin();i!=s.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a=rand()%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"delete the num as :\"</span>&lt;&lt;a&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> h=s.erase(a);      <span class=\"comment\">//multiset的erase函数删除所有要删除的数并返回个数</span></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"delete \"</span>&lt;&lt;h&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;<span class=\"string\">\"\\\"\"</span>&lt;&lt;a&lt;&lt;<span class=\"string\">\"\\\"\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"after delete \"</span>&lt;&lt;a&lt;&lt;<span class=\"string\">\":\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">multiset</span>&lt;<span class=\"keyword\">int</span>&gt;::reverse_iterator i=s.rbegin();i!=s.rend();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果:<br><img src=\"/2018/03/28/STL之set/set3.png\"></p>\n<h3 id=\"set的重载\"><a href=\"#set的重载\" class=\"headerlink\" title=\"set的重载\"></a>set的重载</h3><p>重载可改变排序依据。<br>set的重载会与priority_queue放一起比较，<a href=\"https://edxuanlen.tk/2018/03/30/STL%E4%B9%8Bstack-queue/#set%E7%9A%84%E9%87%8D%E8%BD%BD\" target=\"_blank\" rel=\"noopener\">详情点此跳转</a>！</p>\n"},{"title":"STL之sort和unique","date":"2018-03-28T15:39:29.000Z","description":"常用的排序(升降序)和去重函数。","_content":"\n```C++\n#include<bits/stdc++.h> \nusing namespace std;\nbool hh(int a,int b){\t//改sort规则为降序 \n\treturn a>b;\n}\nint main(){\n\tint a[13]={1,3,6,6,8,5,7,4,9,4,2,3};\n\tint i;\n\tfor(i=0;i<12;i++)\n\t\tprintf(\"%d \",a[i]);\n\t\t\n\tprintf(\"\\nafter sort:\");\n\tsort(a,a+12);\t//默认升序 \n\tfor(i=0;i<12;i++)\n\t\tprintf(\"%d \",a[i]);\n\t\t\n\tprintf(\"\\nafter sort:\");\n\tsort(a,a+12,hh);\n\tfor(i=0;i<12;i++)\n\t\tprintf(\"%d \",a[i]);\n\t\n\tprintf(\"\\nafter unique:\");\n\tint ans=unique(a,a+12)-a;\n\tfor(i=0;i<ans;i++)\n\t\tprintf(\"%d \",a[i]);\n\treturn 0;\n}\n```\n运行结果:\n{% asset_img sort&unique.png %}","source":"_posts/STL之sort和unique.md","raw":"---\ntitle: STL之sort和unique\ndate: 2018-03-28 23:39:29\ntags: STL\ncategories: C/C++\ndescription: 常用的排序(升降序)和去重函数。\n---\n\n```C++\n#include<bits/stdc++.h> \nusing namespace std;\nbool hh(int a,int b){\t//改sort规则为降序 \n\treturn a>b;\n}\nint main(){\n\tint a[13]={1,3,6,6,8,5,7,4,9,4,2,3};\n\tint i;\n\tfor(i=0;i<12;i++)\n\t\tprintf(\"%d \",a[i]);\n\t\t\n\tprintf(\"\\nafter sort:\");\n\tsort(a,a+12);\t//默认升序 \n\tfor(i=0;i<12;i++)\n\t\tprintf(\"%d \",a[i]);\n\t\t\n\tprintf(\"\\nafter sort:\");\n\tsort(a,a+12,hh);\n\tfor(i=0;i<12;i++)\n\t\tprintf(\"%d \",a[i]);\n\t\n\tprintf(\"\\nafter unique:\");\n\tint ans=unique(a,a+12)-a;\n\tfor(i=0;i<ans;i++)\n\t\tprintf(\"%d \",a[i]);\n\treturn 0;\n}\n```\n运行结果:\n{% asset_img sort&unique.png %}","slug":"STL之sort和unique","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbi000oa7s1e2j049m4","content":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt; </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">hh</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;\t<span class=\"comment\">//改sort规则为降序 </span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a&gt;b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">13</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">12</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a[i]);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nafter sort:\"</span>);</span><br><span class=\"line\">\tsort(a,a+<span class=\"number\">12</span>);\t<span class=\"comment\">//默认升序 </span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">12</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a[i]);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nafter sort:\"</span>);</span><br><span class=\"line\">\tsort(a,a+<span class=\"number\">12</span>,hh);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">12</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a[i]);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nafter unique:\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans=unique(a,a+<span class=\"number\">12</span>)-a;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;ans;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果:<br><img src=\"/2018/03/28/STL之sort和unique/sort&unique.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt; </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">hh</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;\t<span class=\"comment\">//改sort规则为降序 </span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a&gt;b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">13</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">4</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">12</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a[i]);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nafter sort:\"</span>);</span><br><span class=\"line\">\tsort(a,a+<span class=\"number\">12</span>);\t<span class=\"comment\">//默认升序 </span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">12</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a[i]);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nafter sort:\"</span>);</span><br><span class=\"line\">\tsort(a,a+<span class=\"number\">12</span>,hh);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">12</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a[i]);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nafter unique:\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans=unique(a,a+<span class=\"number\">12</span>)-a;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;ans;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果:<br><img src=\"/2018/03/28/STL之sort和unique/sort&unique.png\"></p>\n"},{"title":"STL之stack&queue","date":"2018-03-29T16:47:44.000Z","description":"本文介绍栈(stack)和队列(queue)以及优先级队列(priority_queue)。","_content":"\n### 栈(stack)\nstack堆栈是一个**后进先出**的线性表插入和删除元素都只能在表的一端进行。\n插入元素的一端称为栈顶(另一端称为栈底)。插入元素为入栈(Push)，删除为出栈(Pop)。\n{% asset_img stack.png %}\n过程就像压入和弹出数据。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tstack<int> s;\n\t//压入数据\n    s.push(1);\n    s.push(2);\n    s.push(4);\n    s.push(5);\n    cout << s.size() << endl;\n    while(s.empty() != true){\n        cout << s.top() << endl;\n        s.pop();//弹出数据\n    }\n    return 0;\n}\n```\n输出:\n> 4\n> 5 4 2 1\n\n### 队列(queue)\nqueue队列容器是一个**先进先出**的线性存储表，元素插入只能在队尾，删除只能在队首。\n将上面的代码 stack改为queue ，s.top改为s.front 可得到：\n> 4\n> 1 2 4 5\n\n### 优先队列(priority_queue)\npriority_queue与队列一样只能在队尾插入元素，队首删除元素，但是队首永远是队列中的最大元素。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tpriority_queue<int> pq;\n    pq.push(1);\n    pq.push(3);\n    pq.push(2);\n    pq.push(8);\n    pq.push(9);\n    pq.push(0);\n    cout << \"size: \" << pq.size() << endl;\n    while(pq.empty() != true){\n        cout << pq.top() <<\" \";\n        pq.pop();\n    }\n    return 0;\n}\n```\n运行结果：\n{% asset_img queue.png %}\n\n### set和priority_queue的重载\n#### set的重载\nset的重载与sort函数的重载相似。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Comp\n{\n    bool operator()(int a,int b)\n    {\n        return a > b;\n    }\n};\nint main()\n{\n    set<int,Comp> v;\n    v.insert(1);\n    v.insert(3);\n    v.insert(5);\n    v.insert(2);\n    v.insert(4);\n    v.insert(3);\n    for(set<int,Comp>::iterator it = v.begin(); it != v.end(); ++it)\n        cout << *it << \" \";\n    cout << endl;\n    for(set<int,Comp>::reverse_iterator rit = v.rbegin(); rit != v.rend(); ++rit)\n        cout << *rit << \" \";\n    cout << endl;\n    return 0;\n}\n```\n输出结果为：\n> 5 4 3 2 1\n> 1 2 3 4 5\n#### priority_queue的重载\npriority_queue的重载与set的重载差不多，但中间需要一个多一个容器作为参数(暂时我也不知道为啥==)。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\n//重载\nstruct C{\n\tbool operator()(int a,int b){\n\t\treturn a>b;\n\t}\n} ;\nint main(){\n\tpriority_queue<int,vector<int>,C> pq;  //少了vector报错\n    pq.push(1);\n    pq.push(3);\n    pq.push(2);\n    pq.push(8);\n    pq.push(9);\n    pq.push(0);\n    cout << \"size: \" << pq.size() << endl;\n    while(pq.empty() != true){\n        cout << pq.top() <<\" \";\n        pq.pop();\n    }\n    return 0;\n}\n```\n数据与上面优先队列的例子相同，重载后输出结果为:\n{% asset_img queue1.png %}\n","source":"_posts/STL之stack-queue.md","raw":"---\ntitle: STL之stack&queue\ndate: 2018-03-30 00:47:44\ntags:\n  - STL\n  - 栈\ncategories: C/C++\ndescription: 本文介绍栈(stack)和队列(queue)以及优先级队列(priority_queue)。\n---\n\n### 栈(stack)\nstack堆栈是一个**后进先出**的线性表插入和删除元素都只能在表的一端进行。\n插入元素的一端称为栈顶(另一端称为栈底)。插入元素为入栈(Push)，删除为出栈(Pop)。\n{% asset_img stack.png %}\n过程就像压入和弹出数据。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tstack<int> s;\n\t//压入数据\n    s.push(1);\n    s.push(2);\n    s.push(4);\n    s.push(5);\n    cout << s.size() << endl;\n    while(s.empty() != true){\n        cout << s.top() << endl;\n        s.pop();//弹出数据\n    }\n    return 0;\n}\n```\n输出:\n> 4\n> 5 4 2 1\n\n### 队列(queue)\nqueue队列容器是一个**先进先出**的线性存储表，元素插入只能在队尾，删除只能在队首。\n将上面的代码 stack改为queue ，s.top改为s.front 可得到：\n> 4\n> 1 2 4 5\n\n### 优先队列(priority_queue)\npriority_queue与队列一样只能在队尾插入元素，队首删除元素，但是队首永远是队列中的最大元素。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tpriority_queue<int> pq;\n    pq.push(1);\n    pq.push(3);\n    pq.push(2);\n    pq.push(8);\n    pq.push(9);\n    pq.push(0);\n    cout << \"size: \" << pq.size() << endl;\n    while(pq.empty() != true){\n        cout << pq.top() <<\" \";\n        pq.pop();\n    }\n    return 0;\n}\n```\n运行结果：\n{% asset_img queue.png %}\n\n### set和priority_queue的重载\n#### set的重载\nset的重载与sort函数的重载相似。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Comp\n{\n    bool operator()(int a,int b)\n    {\n        return a > b;\n    }\n};\nint main()\n{\n    set<int,Comp> v;\n    v.insert(1);\n    v.insert(3);\n    v.insert(5);\n    v.insert(2);\n    v.insert(4);\n    v.insert(3);\n    for(set<int,Comp>::iterator it = v.begin(); it != v.end(); ++it)\n        cout << *it << \" \";\n    cout << endl;\n    for(set<int,Comp>::reverse_iterator rit = v.rbegin(); rit != v.rend(); ++rit)\n        cout << *rit << \" \";\n    cout << endl;\n    return 0;\n}\n```\n输出结果为：\n> 5 4 3 2 1\n> 1 2 3 4 5\n#### priority_queue的重载\npriority_queue的重载与set的重载差不多，但中间需要一个多一个容器作为参数(暂时我也不知道为啥==)。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\n//重载\nstruct C{\n\tbool operator()(int a,int b){\n\t\treturn a>b;\n\t}\n} ;\nint main(){\n\tpriority_queue<int,vector<int>,C> pq;  //少了vector报错\n    pq.push(1);\n    pq.push(3);\n    pq.push(2);\n    pq.push(8);\n    pq.push(9);\n    pq.push(0);\n    cout << \"size: \" << pq.size() << endl;\n    while(pq.empty() != true){\n        cout << pq.top() <<\" \";\n        pq.pop();\n    }\n    return 0;\n}\n```\n数据与上面优先队列的例子相同，重载后输出结果为:\n{% asset_img queue1.png %}\n","slug":"STL之stack-queue","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbk000ta7s1lqqhjtqd","content":"<h3 id=\"栈-stack\"><a href=\"#栈-stack\" class=\"headerlink\" title=\"栈(stack)\"></a>栈(stack)</h3><p>stack堆栈是一个<strong>后进先出</strong>的线性表插入和删除元素都只能在表的一端进行。<br>插入元素的一端称为栈顶(另一端称为栈底)。插入元素为入栈(Push)，删除为出栈(Pop)。<br><img src=\"/2018/03/30/STL之stack-queue/stack.png\"><br>过程就像压入和弹出数据。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt; s;</span><br><span class=\"line\">\t<span class=\"comment\">//压入数据</span></span><br><span class=\"line\">    s.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">    s.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">    s.push(<span class=\"number\">4</span>);</span><br><span class=\"line\">    s.push(<span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; s.size() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(s.empty() != <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; s.top() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        s.pop();<span class=\"comment\">//弹出数据</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出:</p>\n<blockquote>\n<p>4<br>5 4 2 1</p>\n</blockquote>\n<h3 id=\"队列-queue\"><a href=\"#队列-queue\" class=\"headerlink\" title=\"队列(queue)\"></a>队列(queue)</h3><p>queue队列容器是一个<strong>先进先出</strong>的线性存储表，元素插入只能在队尾，删除只能在队首。<br>将上面的代码 stack改为queue ，s.top改为s.front 可得到：</p>\n<blockquote>\n<p>4<br>1 2 4 5</p>\n</blockquote>\n<h3 id=\"优先队列-priority-queue\"><a href=\"#优先队列-priority-queue\" class=\"headerlink\" title=\"优先队列(priority_queue)\"></a>优先队列(priority_queue)</h3><p>priority_queue与队列一样只能在队尾插入元素，队首删除元素，但是队首永远是队列中的最大元素。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpriority_queue&lt;<span class=\"keyword\">int</span>&gt; pq;</span><br><span class=\"line\">    pq.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">3</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">8</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">9</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"size: \"</span> &lt;&lt; pq.size() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pq.empty() != <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; pq.top() &lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        pq.pop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果：<br><img src=\"/2018/03/30/STL之stack-queue/queue.png\"></p>\n<h3 id=\"set和priority-queue的重载\"><a href=\"#set和priority-queue的重载\" class=\"headerlink\" title=\"set和priority_queue的重载\"></a>set和priority_queue的重载</h3><h4 id=\"set的重载\"><a href=\"#set的重载\" class=\"headerlink\" title=\"set的重载\"></a>set的重载</h4><p>set的重载与sort函数的重载相似。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Comp</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a &gt; b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>,Comp&gt; v;</span><br><span class=\"line\">    v.insert(<span class=\"number\">1</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">3</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">5</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">2</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">4</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>,Comp&gt;::iterator it = v.begin(); it != v.end(); ++it)</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; *it &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>,Comp&gt;::reverse_iterator rit = v.rbegin(); rit != v.rend(); ++rit)</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; *rit &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果为：</p>\n<blockquote>\n<p>5 4 3 2 1<br>1 2 3 4 5</p>\n</blockquote>\n<h4 id=\"priority-queue的重载\"><a href=\"#priority-queue的重载\" class=\"headerlink\" title=\"priority_queue的重载\"></a>priority_queue的重载</h4><p>priority_queue的重载与set的重载差不多，但中间需要一个多一个容器作为参数(暂时我也不知道为啥==)。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"comment\">//重载</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">C</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a&gt;b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125; ;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpriority_queue&lt;<span class=\"keyword\">int</span>,<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;,C&gt; pq;  <span class=\"comment\">//少了vector报错</span></span><br><span class=\"line\">    pq.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">3</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">8</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">9</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"size: \"</span> &lt;&lt; pq.size() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pq.empty() != <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; pq.top() &lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        pq.pop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>数据与上面优先队列的例子相同，重载后输出结果为:<br><img src=\"/2018/03/30/STL之stack-queue/queue1.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"栈-stack\"><a href=\"#栈-stack\" class=\"headerlink\" title=\"栈(stack)\"></a>栈(stack)</h3><p>stack堆栈是一个<strong>后进先出</strong>的线性表插入和删除元素都只能在表的一端进行。<br>插入元素的一端称为栈顶(另一端称为栈底)。插入元素为入栈(Push)，删除为出栈(Pop)。<br><img src=\"/2018/03/30/STL之stack-queue/stack.png\"><br>过程就像压入和弹出数据。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt; s;</span><br><span class=\"line\">\t<span class=\"comment\">//压入数据</span></span><br><span class=\"line\">    s.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">    s.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">    s.push(<span class=\"number\">4</span>);</span><br><span class=\"line\">    s.push(<span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; s.size() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(s.empty() != <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; s.top() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        s.pop();<span class=\"comment\">//弹出数据</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出:</p>\n<blockquote>\n<p>4<br>5 4 2 1</p>\n</blockquote>\n<h3 id=\"队列-queue\"><a href=\"#队列-queue\" class=\"headerlink\" title=\"队列(queue)\"></a>队列(queue)</h3><p>queue队列容器是一个<strong>先进先出</strong>的线性存储表，元素插入只能在队尾，删除只能在队首。<br>将上面的代码 stack改为queue ，s.top改为s.front 可得到：</p>\n<blockquote>\n<p>4<br>1 2 4 5</p>\n</blockquote>\n<h3 id=\"优先队列-priority-queue\"><a href=\"#优先队列-priority-queue\" class=\"headerlink\" title=\"优先队列(priority_queue)\"></a>优先队列(priority_queue)</h3><p>priority_queue与队列一样只能在队尾插入元素，队首删除元素，但是队首永远是队列中的最大元素。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpriority_queue&lt;<span class=\"keyword\">int</span>&gt; pq;</span><br><span class=\"line\">    pq.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">3</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">8</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">9</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"size: \"</span> &lt;&lt; pq.size() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pq.empty() != <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; pq.top() &lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        pq.pop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果：<br><img src=\"/2018/03/30/STL之stack-queue/queue.png\"></p>\n<h3 id=\"set和priority-queue的重载\"><a href=\"#set和priority-queue的重载\" class=\"headerlink\" title=\"set和priority_queue的重载\"></a>set和priority_queue的重载</h3><h4 id=\"set的重载\"><a href=\"#set的重载\" class=\"headerlink\" title=\"set的重载\"></a>set的重载</h4><p>set的重载与sort函数的重载相似。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Comp</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a &gt; b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>,Comp&gt; v;</span><br><span class=\"line\">    v.insert(<span class=\"number\">1</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">3</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">5</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">2</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">4</span>);</span><br><span class=\"line\">    v.insert(<span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>,Comp&gt;::iterator it = v.begin(); it != v.end(); ++it)</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; *it &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>,Comp&gt;::reverse_iterator rit = v.rbegin(); rit != v.rend(); ++rit)</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; *rit &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果为：</p>\n<blockquote>\n<p>5 4 3 2 1<br>1 2 3 4 5</p>\n</blockquote>\n<h4 id=\"priority-queue的重载\"><a href=\"#priority-queue的重载\" class=\"headerlink\" title=\"priority_queue的重载\"></a>priority_queue的重载</h4><p>priority_queue的重载与set的重载差不多，但中间需要一个多一个容器作为参数(暂时我也不知道为啥==)。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"comment\">//重载</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">C</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a&gt;b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125; ;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpriority_queue&lt;<span class=\"keyword\">int</span>,<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;,C&gt; pq;  <span class=\"comment\">//少了vector报错</span></span><br><span class=\"line\">    pq.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">3</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">2</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">8</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">9</span>);</span><br><span class=\"line\">    pq.push(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"size: \"</span> &lt;&lt; pq.size() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pq.empty() != <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; pq.top() &lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        pq.pop();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>数据与上面优先队列的例子相同，重载后输出结果为:<br><img src=\"/2018/03/30/STL之stack-queue/queue1.png\"></p>\n"},{"title":"STL之string","date":"2018-03-28T03:33:20.000Z","description":"string的常用函数以及int和string的转换。","_content":"\n### string的insert、erase和clear\n\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tstring s;char ss[1000];\n\tgets(ss);//无法直接gets string \n\ts=ss;\n\t//尾部添加字符字符串直接用+号 或者使用append()\n\ts+=\" wo\";\n\ts.append(\"rld!\");\n\tcout<<\"insert添加后:  \"<<s<<endl;\n\tstring::iterator i=s.begin();\n\ts.erase(s.begin()+5,i+12);\n\tcout<<\"erase删除后:  \"<<s<<endl;\n\ts.clear();\n\tcout<<\"clear后:\"<<s;\n\treturn 0;\n}\n```\n\n### string的find\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){  \n   string s=\"what are you dong\";  \n   string s1=\"are \"; \n   if(s.find(s1)<0)   //找不到返回-1\n\t\tcout<<\"not find\"<<endl;  \n   else  //找到返回位置\n    \tcout<<\"position= \"<<s.find(s1)+1<<endl;  \n   return 0;  \n}  \n```\n运行结果\n> position= 6\n\n\n### string数字处理\nc++11标准增加了全局函数std::to_string:\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nvoid StrToInt(){\n\tstring s=\"87654321\";\n\tint a=stoi(s);\n\tprintf(\"%d\\n\",a);\n} \nvoid IntToStr(){\n\tint a=12345678;\n\tstring s;\n\ts=to_string(a);\n\tcout<<s<<endl;\n}\nint main(){\n\tStrToInt();\n\tIntToStr();\t\n\treturn 0;\n}\n```\n\n运行结果\n> 87654321\n> 12345678\n\n\n### sscanf分离\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    int a,b,c;\n    char s[6]=\"4,5$6\";\n    sscanf(s,\"%d,%d$%d\",&a,&b,&c);\n    cout << a << \" \" << b << \" \" << c << endl;\n    return 0;\n}\n```\n\n运行结果:\n> 4 5 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/STL之string.md","raw":"---\ntitle: STL之string\ndate: 2018-03-28 11:33:20\ntags: STL\ncategories: C/C++\ndescription: string的常用函数以及int和string的转换。\n---\n\n### string的insert、erase和clear\n\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tstring s;char ss[1000];\n\tgets(ss);//无法直接gets string \n\ts=ss;\n\t//尾部添加字符字符串直接用+号 或者使用append()\n\ts+=\" wo\";\n\ts.append(\"rld!\");\n\tcout<<\"insert添加后:  \"<<s<<endl;\n\tstring::iterator i=s.begin();\n\ts.erase(s.begin()+5,i+12);\n\tcout<<\"erase删除后:  \"<<s<<endl;\n\ts.clear();\n\tcout<<\"clear后:\"<<s;\n\treturn 0;\n}\n```\n\n### string的find\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){  \n   string s=\"what are you dong\";  \n   string s1=\"are \"; \n   if(s.find(s1)<0)   //找不到返回-1\n\t\tcout<<\"not find\"<<endl;  \n   else  //找到返回位置\n    \tcout<<\"position= \"<<s.find(s1)+1<<endl;  \n   return 0;  \n}  \n```\n运行结果\n> position= 6\n\n\n### string数字处理\nc++11标准增加了全局函数std::to_string:\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nvoid StrToInt(){\n\tstring s=\"87654321\";\n\tint a=stoi(s);\n\tprintf(\"%d\\n\",a);\n} \nvoid IntToStr(){\n\tint a=12345678;\n\tstring s;\n\ts=to_string(a);\n\tcout<<s<<endl;\n}\nint main(){\n\tStrToInt();\n\tIntToStr();\t\n\treturn 0;\n}\n```\n\n运行结果\n> 87654321\n> 12345678\n\n\n### sscanf分离\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    int a,b,c;\n    char s[6]=\"4,5$6\";\n    sscanf(s,\"%d,%d$%d\",&a,&b,&c);\n    cout << a << \" \" << b << \" \" << c << endl;\n    return 0;\n}\n```\n\n运行结果:\n> 4 5 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"STL之string","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbm000wa7s1f1ndp7z4","content":"<h3 id=\"string的insert、erase和clear\"><a href=\"#string的insert、erase和clear\" class=\"headerlink\" title=\"string的insert、erase和clear\"></a>string的insert、erase和clear</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> s;<span class=\"keyword\">char</span> ss[<span class=\"number\">1000</span>];</span><br><span class=\"line\">\tgets(ss);<span class=\"comment\">//无法直接gets string </span></span><br><span class=\"line\">\ts=ss;</span><br><span class=\"line\">\t<span class=\"comment\">//尾部添加字符字符串直接用+号 或者使用append()</span></span><br><span class=\"line\">\ts+=<span class=\"string\">\" wo\"</span>;</span><br><span class=\"line\">\ts.append(<span class=\"string\">\"rld!\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"insert添加后:  \"</span>&lt;&lt;s&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span>::iterator i=s.begin();</span><br><span class=\"line\">\ts.erase(s.begin()+<span class=\"number\">5</span>,i+<span class=\"number\">12</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"erase删除后:  \"</span>&lt;&lt;s&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\ts.clear();</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"clear后:\"</span>&lt;&lt;s;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"string的find\"><a href=\"#string的find\" class=\"headerlink\" title=\"string的find\"></a>string的find</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">   <span class=\"built_in\">string</span> s=<span class=\"string\">\"what are you dong\"</span>;  </span><br><span class=\"line\">   <span class=\"built_in\">string</span> s1=<span class=\"string\">\"are \"</span>; </span><br><span class=\"line\">   <span class=\"keyword\">if</span>(s.find(s1)&lt;<span class=\"number\">0</span>)   <span class=\"comment\">//找不到返回-1</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"not find\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">   <span class=\"keyword\">else</span>  <span class=\"comment\">//找到返回位置</span></span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"position= \"</span>&lt;&lt;s.find(s1)+<span class=\"number\">1</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<blockquote>\n<p>position= 6</p>\n</blockquote>\n<h3 id=\"string数字处理\"><a href=\"#string数字处理\" class=\"headerlink\" title=\"string数字处理\"></a>string数字处理</h3><p>c++11标准增加了全局函数std::to_string:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">StrToInt</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> s=<span class=\"string\">\"87654321\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a=stoi(s);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,a);</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">IntToStr</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a=<span class=\"number\">12345678</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> s;</span><br><span class=\"line\">\ts=to_string(a);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;s&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tStrToInt();</span><br><span class=\"line\">\tIntToStr();\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果</p>\n<blockquote>\n<p>87654321<br>12345678</p>\n</blockquote>\n<h3 id=\"sscanf分离\"><a href=\"#sscanf分离\" class=\"headerlink\" title=\"sscanf分离\"></a>sscanf分离</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b,c;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> s[<span class=\"number\">6</span>]=<span class=\"string\">\"4,5$6\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">sscanf</span>(s,<span class=\"string\">\"%d,%d$%d\"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; b &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; c &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果:</p>\n<blockquote>\n<p>4 5 6</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"string的insert、erase和clear\"><a href=\"#string的insert、erase和clear\" class=\"headerlink\" title=\"string的insert、erase和clear\"></a>string的insert、erase和clear</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> s;<span class=\"keyword\">char</span> ss[<span class=\"number\">1000</span>];</span><br><span class=\"line\">\tgets(ss);<span class=\"comment\">//无法直接gets string </span></span><br><span class=\"line\">\ts=ss;</span><br><span class=\"line\">\t<span class=\"comment\">//尾部添加字符字符串直接用+号 或者使用append()</span></span><br><span class=\"line\">\ts+=<span class=\"string\">\" wo\"</span>;</span><br><span class=\"line\">\ts.append(<span class=\"string\">\"rld!\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"insert添加后:  \"</span>&lt;&lt;s&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span>::iterator i=s.begin();</span><br><span class=\"line\">\ts.erase(s.begin()+<span class=\"number\">5</span>,i+<span class=\"number\">12</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"erase删除后:  \"</span>&lt;&lt;s&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\ts.clear();</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"clear后:\"</span>&lt;&lt;s;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"string的find\"><a href=\"#string的find\" class=\"headerlink\" title=\"string的find\"></a>string的find</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">   <span class=\"built_in\">string</span> s=<span class=\"string\">\"what are you dong\"</span>;  </span><br><span class=\"line\">   <span class=\"built_in\">string</span> s1=<span class=\"string\">\"are \"</span>; </span><br><span class=\"line\">   <span class=\"keyword\">if</span>(s.find(s1)&lt;<span class=\"number\">0</span>)   <span class=\"comment\">//找不到返回-1</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"not find\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">   <span class=\"keyword\">else</span>  <span class=\"comment\">//找到返回位置</span></span><br><span class=\"line\">    \t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"position= \"</span>&lt;&lt;s.find(s1)+<span class=\"number\">1</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<blockquote>\n<p>position= 6</p>\n</blockquote>\n<h3 id=\"string数字处理\"><a href=\"#string数字处理\" class=\"headerlink\" title=\"string数字处理\"></a>string数字处理</h3><p>c++11标准增加了全局函数std::to_string:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">StrToInt</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> s=<span class=\"string\">\"87654321\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a=stoi(s);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,a);</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">IntToStr</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a=<span class=\"number\">12345678</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> s;</span><br><span class=\"line\">\ts=to_string(a);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;s&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tStrToInt();</span><br><span class=\"line\">\tIntToStr();\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行结果</p>\n<blockquote>\n<p>87654321<br>12345678</p>\n</blockquote>\n<h3 id=\"sscanf分离\"><a href=\"#sscanf分离\" class=\"headerlink\" title=\"sscanf分离\"></a>sscanf分离</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b,c;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> s[<span class=\"number\">6</span>]=<span class=\"string\">\"4,5$6\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">sscanf</span>(s,<span class=\"string\">\"%d,%d$%d\"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; b &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; c &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果:</p>\n<blockquote>\n<p>4 5 6</p>\n</blockquote>\n"},{"title":"STL之vector","date":"2018-03-28T02:21:06.000Z","description":"介绍动态数组vector的一些基本特性","_content":"\n### vector之insert、erase\nvector有内存管理的机制，也就是说对于插入和删除，vector可以动态调整所占用的内存空间。\n常用相关函数insert、erase如下：\n\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tvector<int> v;\n\tfor(int i=0;i<10;i++)\n\t\tv.push_back(i); //在数组尾部插入数字\n\tvector<int> a(10);\n\tfor(int i=0;i<10;i++)\n\t\ta[i]=10-i;\n\n\tprintf(\"a[i] v[i]\\n\");\n\tfor(int i=0;i<10;i++)\n\t\tprintf(\"%2d   %2d\\n\",a[i],v[i]);\n\t//在第一个元素之前插入111  insert begin+n是在第n个元素之前插入\n\tv.insert(v.begin()+5,10);\n\tv.insert(v.end()-5,10);\n\tprintf(\"insert 插入v[i]后:  \");\n\t//iterator迭代器\n\tfor(vector<int>::iterator i=v.begin();i<v.end();i++)\n\t\tprintf(\"%d \",*i);\n\t//在最后一个元素之后插入222 insert end + n 是在n个元素之后插入\n\tprintf(\"\\nerase 删除单个数字后:  \");\n\ta.erase(a.begin()+4);\n\tfor(vector<int>::iterator i=a.begin();i<a.end();i++)\n\t\tprintf(\"%d \",*i);\n\tprintf(\"\\nerase 删除范围数字后:  \");\n\t a.erase(a.begin(),a.begin()+4);//删除这一范围内的数字\n\tfor(vector<int>::iterator i=a.begin();i<a.end();i++)\n\t\tprintf(\"%d \",*i);\n\treturn 0;\n}\n```\n\n运行截图如下:\n{% asset_img vector.png %}\n\n### vector之push_back、back、reverse、size\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main (){\n\tvector<int> a;\n\tint sum (0);\n \tfor (int i=0;i<10;i++)\n\t\ta.push_back(i);\t//结尾压入数据\n\tprintf(\"%d\\n\",a.size());\n\treverse(a.begin(),a.end());  \n\tfor (int i=0;i<10;i++)\n\t\tcout<<a[i]<<\" \";\n\tcout<<endl;\n  \twhile (!a.empty()){\n    \t sum += a.back();\n    \t a.pop_back();  //弹出最后压入的数据 (不受reverse影响)\n    \t printf(\"%d \",a.size());\n\t}\n\tprintf(\"\\n%d\\n\",a.size());\n  \tcout << \"total: \" << sum << '\\n';\n\treturn 0;\n}\n```\n\n运行结果\n{% asset_img vector1.png %}\n\n### 求和accumulate\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    vector<int> v;\n    for(int i = 0; i < 10; ++i )\n        v.push_back(i);\n    cout << accumulate(v.begin(),v.end(),0) << endl;\n    return 0;\n}\n```\n运行结果\n> 45\n","source":"_posts/STL之vector.md","raw":"---\ntitle: STL之vector\ndate: 2018-03-28 10:21:06\ntags: STL\ncategories: C/C++\ndescription: 介绍动态数组vector的一些基本特性\n---\n\n### vector之insert、erase\nvector有内存管理的机制，也就是说对于插入和删除，vector可以动态调整所占用的内存空间。\n常用相关函数insert、erase如下：\n\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tvector<int> v;\n\tfor(int i=0;i<10;i++)\n\t\tv.push_back(i); //在数组尾部插入数字\n\tvector<int> a(10);\n\tfor(int i=0;i<10;i++)\n\t\ta[i]=10-i;\n\n\tprintf(\"a[i] v[i]\\n\");\n\tfor(int i=0;i<10;i++)\n\t\tprintf(\"%2d   %2d\\n\",a[i],v[i]);\n\t//在第一个元素之前插入111  insert begin+n是在第n个元素之前插入\n\tv.insert(v.begin()+5,10);\n\tv.insert(v.end()-5,10);\n\tprintf(\"insert 插入v[i]后:  \");\n\t//iterator迭代器\n\tfor(vector<int>::iterator i=v.begin();i<v.end();i++)\n\t\tprintf(\"%d \",*i);\n\t//在最后一个元素之后插入222 insert end + n 是在n个元素之后插入\n\tprintf(\"\\nerase 删除单个数字后:  \");\n\ta.erase(a.begin()+4);\n\tfor(vector<int>::iterator i=a.begin();i<a.end();i++)\n\t\tprintf(\"%d \",*i);\n\tprintf(\"\\nerase 删除范围数字后:  \");\n\t a.erase(a.begin(),a.begin()+4);//删除这一范围内的数字\n\tfor(vector<int>::iterator i=a.begin();i<a.end();i++)\n\t\tprintf(\"%d \",*i);\n\treturn 0;\n}\n```\n\n运行截图如下:\n{% asset_img vector.png %}\n\n### vector之push_back、back、reverse、size\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main (){\n\tvector<int> a;\n\tint sum (0);\n \tfor (int i=0;i<10;i++)\n\t\ta.push_back(i);\t//结尾压入数据\n\tprintf(\"%d\\n\",a.size());\n\treverse(a.begin(),a.end());  \n\tfor (int i=0;i<10;i++)\n\t\tcout<<a[i]<<\" \";\n\tcout<<endl;\n  \twhile (!a.empty()){\n    \t sum += a.back();\n    \t a.pop_back();  //弹出最后压入的数据 (不受reverse影响)\n    \t printf(\"%d \",a.size());\n\t}\n\tprintf(\"\\n%d\\n\",a.size());\n  \tcout << \"total: \" << sum << '\\n';\n\treturn 0;\n}\n```\n\n运行结果\n{% asset_img vector1.png %}\n\n### 求和accumulate\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    vector<int> v;\n    for(int i = 0; i < 10; ++i )\n        v.push_back(i);\n    cout << accumulate(v.begin(),v.end(),0) << endl;\n    return 0;\n}\n```\n运行结果\n> 45\n","slug":"STL之vector","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbo0011a7s1npjahfdm","content":"<h3 id=\"vector之insert、erase\"><a href=\"#vector之insert、erase\" class=\"headerlink\" title=\"vector之insert、erase\"></a>vector之insert、erase</h3><p>vector有内存管理的机制，也就是说对于插入和删除，vector可以动态调整所占用的内存空间。<br>常用相关函数insert、erase如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\tv.push_back(i); <span class=\"comment\">//在数组尾部插入数字</span></span><br><span class=\"line\">\t<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; a(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\ta[i]=<span class=\"number\">10</span>-i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"a[i] v[i]\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%2d   %2d\\n\"</span>,a[i],v[i]);</span><br><span class=\"line\">\t<span class=\"comment\">//在第一个元素之前插入111  insert begin+n是在第n个元素之前插入</span></span><br><span class=\"line\">\tv.insert(v.begin()+<span class=\"number\">5</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv.insert(v.end()<span class=\"number\">-5</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"insert 插入v[i]后:  \"</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//iterator迭代器</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=v.begin();i&lt;v.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"comment\">//在最后一个元素之后插入222 insert end + n 是在n个元素之后插入</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nerase 删除单个数字后:  \"</span>);</span><br><span class=\"line\">\ta.erase(a.begin()+<span class=\"number\">4</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=a.begin();i&lt;a.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nerase 删除范围数字后:  \"</span>);</span><br><span class=\"line\">\t a.erase(a.begin(),a.begin()+<span class=\"number\">4</span>);<span class=\"comment\">//删除这一范围内的数字</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=a.begin();i&lt;a.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行截图如下:<br><img src=\"/2018/03/28/STL之vector/vector.png\"></p>\n<h3 id=\"vector之push-back、back、reverse、size\"><a href=\"#vector之push-back、back、reverse、size\" class=\"headerlink\" title=\"vector之push_back、back、reverse、size\"></a>vector之push_back、back、reverse、size</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; a;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">sum</span> <span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\"> \t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\ta.push_back(i);\t<span class=\"comment\">//结尾压入数据</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,a.size());</span><br><span class=\"line\">\treverse(a.begin(),a.end());  </span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  \t<span class=\"keyword\">while</span> (!a.empty())&#123;</span><br><span class=\"line\">    \t sum += a.back();</span><br><span class=\"line\">    \t a.pop_back();  <span class=\"comment\">//弹出最后压入的数据 (不受reverse影响)</span></span><br><span class=\"line\">    \t <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a.size());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n%d\\n\"</span>,a.size());</span><br><span class=\"line\">  \t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"total: \"</span> &lt;&lt; sum &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果<br><img src=\"/2018/03/28/STL之vector/vector1.png\"></p>\n<h3 id=\"求和accumulate\"><a href=\"#求和accumulate\" class=\"headerlink\" title=\"求和accumulate\"></a>求和accumulate</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i )</span><br><span class=\"line\">        v.push_back(i);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; accumulate(v.begin(),v.end(),<span class=\"number\">0</span>) &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<blockquote>\n<p>45</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"vector之insert、erase\"><a href=\"#vector之insert、erase\" class=\"headerlink\" title=\"vector之insert、erase\"></a>vector之insert、erase</h3><p>vector有内存管理的机制，也就是说对于插入和删除，vector可以动态调整所占用的内存空间。<br>常用相关函数insert、erase如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\tv.push_back(i); <span class=\"comment\">//在数组尾部插入数字</span></span><br><span class=\"line\">\t<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; a(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\ta[i]=<span class=\"number\">10</span>-i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"a[i] v[i]\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%2d   %2d\\n\"</span>,a[i],v[i]);</span><br><span class=\"line\">\t<span class=\"comment\">//在第一个元素之前插入111  insert begin+n是在第n个元素之前插入</span></span><br><span class=\"line\">\tv.insert(v.begin()+<span class=\"number\">5</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv.insert(v.end()<span class=\"number\">-5</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"insert 插入v[i]后:  \"</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//iterator迭代器</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=v.begin();i&lt;v.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"comment\">//在最后一个元素之后插入222 insert end + n 是在n个元素之后插入</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nerase 删除单个数字后:  \"</span>);</span><br><span class=\"line\">\ta.erase(a.begin()+<span class=\"number\">4</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=a.begin();i&lt;a.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nerase 删除范围数字后:  \"</span>);</span><br><span class=\"line\">\t a.erase(a.begin(),a.begin()+<span class=\"number\">4</span>);<span class=\"comment\">//删除这一范围内的数字</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=a.begin();i&lt;a.end();i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,*i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行截图如下:<br><img src=\"/2018/03/28/STL之vector/vector.png\"></p>\n<h3 id=\"vector之push-back、back、reverse、size\"><a href=\"#vector之push-back、back、reverse、size\" class=\"headerlink\" title=\"vector之push_back、back、reverse、size\"></a>vector之push_back、back、reverse、size</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; a;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">sum</span> <span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\"> \t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\ta.push_back(i);\t<span class=\"comment\">//结尾压入数据</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,a.size());</span><br><span class=\"line\">\treverse(a.begin(),a.end());  </span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">  \t<span class=\"keyword\">while</span> (!a.empty())&#123;</span><br><span class=\"line\">    \t sum += a.back();</span><br><span class=\"line\">    \t a.pop_back();  <span class=\"comment\">//弹出最后压入的数据 (不受reverse影响)</span></span><br><span class=\"line\">    \t <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,a.size());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n%d\\n\"</span>,a.size());</span><br><span class=\"line\">  \t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"total: \"</span> &lt;&lt; sum &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果<br><img src=\"/2018/03/28/STL之vector/vector1.png\"></p>\n<h3 id=\"求和accumulate\"><a href=\"#求和accumulate\" class=\"headerlink\" title=\"求和accumulate\"></a>求和accumulate</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i )</span><br><span class=\"line\">        v.push_back(i);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; accumulate(v.begin(),v.end(),<span class=\"number\">0</span>) &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<blockquote>\n<p>45</p>\n</blockquote>\n"},{"title":"Ubuntu-18 之旅","date":"2018-09-02T11:35:40.000Z","description":"配置 Ubuntu18的全过程，供自己以后方便使用。","_content":"\n# Ubuntu的安装\n如果在安装过程中最后提醒grub安装失败，是因为开机启动项安装失败，会导致无法进入系统\n我一开始比较丧心病狂，直接把整块硬盘格式化后装Ubuntu就可以了\n比较好的的处理方法如下==\nhttps://blog.csdn.net/qq_40883132/article/details/80538539\n\n# HEXO 配置\n网上有很多教程\n想看的可以百度一下\n这里我是想说，把整个文件夹保存下来才是王道，直接可以使用\ngit config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n配置下信息\n若出现报错 ：修改： themes/BlueLake (修改的内容, 未跟踪的内容) 修改尚未加入提交\ngit status\ngit rm -f --cached themes/BlueLake/\ngit add themes/BlueLake/\ngit add .\ngit commit -m \"\"\n如果是要建立分支\n```\ngit checkout -b hexo                 //创建并切换\ngit remote rm origin                                        //清除当前设备\ngit remote add origin git@github.com:edxuanlen/github.io.git//添加远程设备\ngit remote -v                                               //查看当前设备\ngit push origin hexo                                        \n```\n\n# 网易云\n抛弃了kali再回到Ubuntu的怀抱，\n就是因为kali蓝牙配置搞砸了，听歌都不爽（因为想连蓝牙音箱）\n所以emmm 网易云可以直接到官网下载ubuntu版的，\nhttp://d1.music.126.net/dmusic/netease-cloud-music_1.1.0_amd64_ubuntu.deb\n下载完双击可以直接安装\n无法打开的问题自行百度\nsudo netease-cloud-music能正常使用\n1. 方法一\n用root权限修改文件/usr/share/applications/netease-cloud-music.desktop\n 比如：sudo gedit /usr/share/applications/netease-cloud-music.desktop\n--no-sandbox\n2. 方法二\nsudo gedit /etc/sudoers\n修改/etc/sudoers文件，加一行：\nYOURNAME ALL = NOPASSWD: /usr/bin/netease-cloud-music\nYOURNAME为你登录的用户名。\nsudo gedit /usr/share/applications/netease-cloud-music.desktop\n\n修改Exec=netease-cloud-music %U 为  Exec=sudo netease-cloud-music %U,\n这样点击网易云音乐图标就是以管理员权限启动的了，且不用输入密码。\n\n 网易云无法调整界面大小\n搜索.netease-cloud-music（注意前面有个\".\"）然后把搜索到的文件夹全都删掉\n或者删除了~/.cache/netease-cloud-music 目录\n\n# CLion,IdeaJ和Pycharm 三件套==\n官网都有直接，学生可以通过学校邮箱申请免费使用，获得一个Activate code。\n\n打开这三个软件，运行.sh文件，选择 Activate code，输入code\n\n\n给Pycharm添加桌面快捷键\nsudo gedit /usr/share/applications/Pycharm.desktop\n编辑\n```\n[Desktop Entry]\nType=Application\nName=Pycharm\nGenericName=Pycharm3\nComment=Pycharm3:The Python IDE\nExec=sh **/**.sh  （sh的完整路径）\nIcon= （图标所在的完整路径）\nTerminal=pycharm\nCategories=Pycharm;\n```\n\n\n# Mysql\n坑： ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)\n不能直接输入mysql连接\n官网有很全的安装指南\nhttps://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install\n\n安装后登录的时候输入\nmysql -h<locolhost> -uroot -p<密码>\n记得 -h和-p后面都不能加空格\n如 mysql -h127.0.0.1 -uroot -p88888888\n导出问题（https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）\n\nshow variables like '%secure%';\n找出secure_file_priv的目录，输出到该目录下即可\n\n\n# 还原某些桌面设置\ndconf reset -f /\n\n# 解压zip乱码\nunzip -O cp936 xxxx.zip\n\n\n\n\n\n\n\n","source":"_posts/Ubuntu-18-之旅.md","raw":"---\ntitle: Ubuntu-18 之旅\ndate: 2018-09-02 19:35:40\ntags: Ubuntu\ncategories:\n  - 系统\ndescription: 配置 Ubuntu18的全过程，供自己以后方便使用。\n---\n\n# Ubuntu的安装\n如果在安装过程中最后提醒grub安装失败，是因为开机启动项安装失败，会导致无法进入系统\n我一开始比较丧心病狂，直接把整块硬盘格式化后装Ubuntu就可以了\n比较好的的处理方法如下==\nhttps://blog.csdn.net/qq_40883132/article/details/80538539\n\n# HEXO 配置\n网上有很多教程\n想看的可以百度一下\n这里我是想说，把整个文件夹保存下来才是王道，直接可以使用\ngit config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n配置下信息\n若出现报错 ：修改： themes/BlueLake (修改的内容, 未跟踪的内容) 修改尚未加入提交\ngit status\ngit rm -f --cached themes/BlueLake/\ngit add themes/BlueLake/\ngit add .\ngit commit -m \"\"\n如果是要建立分支\n```\ngit checkout -b hexo                 //创建并切换\ngit remote rm origin                                        //清除当前设备\ngit remote add origin git@github.com:edxuanlen/github.io.git//添加远程设备\ngit remote -v                                               //查看当前设备\ngit push origin hexo                                        \n```\n\n# 网易云\n抛弃了kali再回到Ubuntu的怀抱，\n就是因为kali蓝牙配置搞砸了，听歌都不爽（因为想连蓝牙音箱）\n所以emmm 网易云可以直接到官网下载ubuntu版的，\nhttp://d1.music.126.net/dmusic/netease-cloud-music_1.1.0_amd64_ubuntu.deb\n下载完双击可以直接安装\n无法打开的问题自行百度\nsudo netease-cloud-music能正常使用\n1. 方法一\n用root权限修改文件/usr/share/applications/netease-cloud-music.desktop\n 比如：sudo gedit /usr/share/applications/netease-cloud-music.desktop\n--no-sandbox\n2. 方法二\nsudo gedit /etc/sudoers\n修改/etc/sudoers文件，加一行：\nYOURNAME ALL = NOPASSWD: /usr/bin/netease-cloud-music\nYOURNAME为你登录的用户名。\nsudo gedit /usr/share/applications/netease-cloud-music.desktop\n\n修改Exec=netease-cloud-music %U 为  Exec=sudo netease-cloud-music %U,\n这样点击网易云音乐图标就是以管理员权限启动的了，且不用输入密码。\n\n 网易云无法调整界面大小\n搜索.netease-cloud-music（注意前面有个\".\"）然后把搜索到的文件夹全都删掉\n或者删除了~/.cache/netease-cloud-music 目录\n\n# CLion,IdeaJ和Pycharm 三件套==\n官网都有直接，学生可以通过学校邮箱申请免费使用，获得一个Activate code。\n\n打开这三个软件，运行.sh文件，选择 Activate code，输入code\n\n\n给Pycharm添加桌面快捷键\nsudo gedit /usr/share/applications/Pycharm.desktop\n编辑\n```\n[Desktop Entry]\nType=Application\nName=Pycharm\nGenericName=Pycharm3\nComment=Pycharm3:The Python IDE\nExec=sh **/**.sh  （sh的完整路径）\nIcon= （图标所在的完整路径）\nTerminal=pycharm\nCategories=Pycharm;\n```\n\n\n# Mysql\n坑： ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)\n不能直接输入mysql连接\n官网有很全的安装指南\nhttps://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install\n\n安装后登录的时候输入\nmysql -h<locolhost> -uroot -p<密码>\n记得 -h和-p后面都不能加空格\n如 mysql -h127.0.0.1 -uroot -p88888888\n导出问题（https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）\n\nshow variables like '%secure%';\n找出secure_file_priv的目录，输出到该目录下即可\n\n\n# 还原某些桌面设置\ndconf reset -f /\n\n# 解压zip乱码\nunzip -O cp936 xxxx.zip\n\n\n\n\n\n\n\n","slug":"Ubuntu-18-之旅","published":1,"updated":"2019-09-22T09:17:38.891Z","_id":"ck0ur8hbq0014a7s1hy7ds3jz","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Ubuntu的安装\"><a href=\"#Ubuntu的安装\" class=\"headerlink\" title=\"Ubuntu的安装\"></a>Ubuntu的安装</h1><p>如果在安装过程中最后提醒grub安装失败，是因为开机启动项安装失败，会导致无法进入系统<br>我一开始比较丧心病狂，直接把整块硬盘格式化后装Ubuntu就可以了<br>比较好的的处理方法如下==<br><a href=\"https://blog.csdn.net/qq_40883132/article/details/80538539\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_40883132/article/details/80538539</a></p>\n<h1 id=\"HEXO-配置\"><a href=\"#HEXO-配置\" class=\"headerlink\" title=\"HEXO 配置\"></a>HEXO 配置</h1><p>网上有很多教程<br>想看的可以百度一下<br>这里我是想说，把整个文件夹保存下来才是王道，直接可以使用<br>git config –global user.email “<a href=\"mailto:you@example.com\" target=\"_blank\" rel=\"noopener\">you@example.com</a>“<br>git config –global user.name “Your Name”<br>配置下信息<br>若出现报错 ：修改： themes/BlueLake (修改的内容, 未跟踪的内容) 修改尚未加入提交<br>git status<br>git rm -f –cached themes/BlueLake/<br>git add themes/BlueLake/<br>git add .<br>git commit -m “”<br>如果是要建立分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b hexo                 //创建并切换</span><br><span class=\"line\">git remote rm origin                                        //清除当前设备</span><br><span class=\"line\">git remote add origin git@github.com:edxuanlen/github.io.git//添加远程设备</span><br><span class=\"line\">git remote -v                                               //查看当前设备</span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"网易云\"><a href=\"#网易云\" class=\"headerlink\" title=\"网易云\"></a>网易云</h1><p>抛弃了kali再回到Ubuntu的怀抱，<br>就是因为kali蓝牙配置搞砸了，听歌都不爽（因为想连蓝牙音箱）<br>所以emmm 网易云可以直接到官网下载ubuntu版的，<br><a href=\"http://d1.music.126.net/dmusic/netease-cloud-music_1.1.0_amd64_ubuntu.deb\" target=\"_blank\" rel=\"noopener\">http://d1.music.126.net/dmusic/netease-cloud-music_1.1.0_amd64_ubuntu.deb</a><br>下载完双击可以直接安装<br>无法打开的问题自行百度<br>sudo netease-cloud-music能正常使用</p>\n<ol>\n<li>方法一<br>用root权限修改文件/usr/share/applications/netease-cloud-music.desktop<br>比如：sudo gedit /usr/share/applications/netease-cloud-music.desktop<br>–no-sandbox</li>\n<li>方法二<br>sudo gedit /etc/sudoers<br>修改/etc/sudoers文件，加一行：<br>YOURNAME ALL = NOPASSWD: /usr/bin/netease-cloud-music<br>YOURNAME为你登录的用户名。<br>sudo gedit /usr/share/applications/netease-cloud-music.desktop</li>\n</ol>\n<p>修改Exec=netease-cloud-music %U 为  Exec=sudo netease-cloud-music %U,<br>这样点击网易云音乐图标就是以管理员权限启动的了，且不用输入密码。</p>\n<p> 网易云无法调整界面大小<br>搜索.netease-cloud-music（注意前面有个”.”）然后把搜索到的文件夹全都删掉<br>或者删除了~/.cache/netease-cloud-music 目录</p>\n<h1 id=\"CLion-IdeaJ和Pycharm-三件套\"><a href=\"#CLion-IdeaJ和Pycharm-三件套\" class=\"headerlink\" title=\"CLion,IdeaJ和Pycharm 三件套==\"></a>CLion,IdeaJ和Pycharm 三件套==</h1><p>官网都有直接，学生可以通过学校邮箱申请免费使用，获得一个Activate code。</p>\n<p>打开这三个软件，运行.sh文件，选择 Activate code，输入code</p>\n<p>给Pycharm添加桌面快捷键<br>sudo gedit /usr/share/applications/Pycharm.desktop<br>编辑<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Desktop Entry]</span><br><span class=\"line\">Type=Application</span><br><span class=\"line\">Name=Pycharm</span><br><span class=\"line\">GenericName=Pycharm3</span><br><span class=\"line\">Comment=Pycharm3:The Python IDE</span><br><span class=\"line\">Exec=sh **/**.sh  （sh的完整路径）</span><br><span class=\"line\">Icon= （图标所在的完整路径）</span><br><span class=\"line\">Terminal=pycharm</span><br><span class=\"line\">Categories=Pycharm;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h1><p>坑： ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/run/mysqld/mysqld.sock’ (2)<br>不能直接输入mysql连接<br>官网有很全的安装指南<br><a href=\"https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install</a></p>\n<p>安装后登录的时候输入<br>mysql -h<locolhost> -uroot -p&lt;密码&gt;<br>记得 -h和-p后面都不能加空格<br>如 mysql -h127.0.0.1 -uroot -p88888888<br>导出问题（<a href=\"https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）</a></locolhost></p>\n<p>show variables like ‘%secure%’;<br>找出secure_file_priv的目录，输出到该目录下即可</p>\n<h1 id=\"还原某些桌面设置\"><a href=\"#还原某些桌面设置\" class=\"headerlink\" title=\"还原某些桌面设置\"></a>还原某些桌面设置</h1><p>dconf reset -f /</p>\n<h1 id=\"解压zip乱码\"><a href=\"#解压zip乱码\" class=\"headerlink\" title=\"解压zip乱码\"></a>解压zip乱码</h1><p>unzip -O cp936 xxxx.zip</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Ubuntu的安装\"><a href=\"#Ubuntu的安装\" class=\"headerlink\" title=\"Ubuntu的安装\"></a>Ubuntu的安装</h1><p>如果在安装过程中最后提醒grub安装失败，是因为开机启动项安装失败，会导致无法进入系统<br>我一开始比较丧心病狂，直接把整块硬盘格式化后装Ubuntu就可以了<br>比较好的的处理方法如下==<br><a href=\"https://blog.csdn.net/qq_40883132/article/details/80538539\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_40883132/article/details/80538539</a></p>\n<h1 id=\"HEXO-配置\"><a href=\"#HEXO-配置\" class=\"headerlink\" title=\"HEXO 配置\"></a>HEXO 配置</h1><p>网上有很多教程<br>想看的可以百度一下<br>这里我是想说，把整个文件夹保存下来才是王道，直接可以使用<br>git config –global user.email “<a href=\"mailto:you@example.com\" target=\"_blank\" rel=\"noopener\">you@example.com</a>“<br>git config –global user.name “Your Name”<br>配置下信息<br>若出现报错 ：修改： themes/BlueLake (修改的内容, 未跟踪的内容) 修改尚未加入提交<br>git status<br>git rm -f –cached themes/BlueLake/<br>git add themes/BlueLake/<br>git add .<br>git commit -m “”<br>如果是要建立分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b hexo                 //创建并切换</span><br><span class=\"line\">git remote rm origin                                        //清除当前设备</span><br><span class=\"line\">git remote add origin git@github.com:edxuanlen/github.io.git//添加远程设备</span><br><span class=\"line\">git remote -v                                               //查看当前设备</span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"网易云\"><a href=\"#网易云\" class=\"headerlink\" title=\"网易云\"></a>网易云</h1><p>抛弃了kali再回到Ubuntu的怀抱，<br>就是因为kali蓝牙配置搞砸了，听歌都不爽（因为想连蓝牙音箱）<br>所以emmm 网易云可以直接到官网下载ubuntu版的，<br><a href=\"http://d1.music.126.net/dmusic/netease-cloud-music_1.1.0_amd64_ubuntu.deb\" target=\"_blank\" rel=\"noopener\">http://d1.music.126.net/dmusic/netease-cloud-music_1.1.0_amd64_ubuntu.deb</a><br>下载完双击可以直接安装<br>无法打开的问题自行百度<br>sudo netease-cloud-music能正常使用</p>\n<ol>\n<li>方法一<br>用root权限修改文件/usr/share/applications/netease-cloud-music.desktop<br>比如：sudo gedit /usr/share/applications/netease-cloud-music.desktop<br>–no-sandbox</li>\n<li>方法二<br>sudo gedit /etc/sudoers<br>修改/etc/sudoers文件，加一行：<br>YOURNAME ALL = NOPASSWD: /usr/bin/netease-cloud-music<br>YOURNAME为你登录的用户名。<br>sudo gedit /usr/share/applications/netease-cloud-music.desktop</li>\n</ol>\n<p>修改Exec=netease-cloud-music %U 为  Exec=sudo netease-cloud-music %U,<br>这样点击网易云音乐图标就是以管理员权限启动的了，且不用输入密码。</p>\n<p> 网易云无法调整界面大小<br>搜索.netease-cloud-music（注意前面有个”.”）然后把搜索到的文件夹全都删掉<br>或者删除了~/.cache/netease-cloud-music 目录</p>\n<h1 id=\"CLion-IdeaJ和Pycharm-三件套\"><a href=\"#CLion-IdeaJ和Pycharm-三件套\" class=\"headerlink\" title=\"CLion,IdeaJ和Pycharm 三件套==\"></a>CLion,IdeaJ和Pycharm 三件套==</h1><p>官网都有直接，学生可以通过学校邮箱申请免费使用，获得一个Activate code。</p>\n<p>打开这三个软件，运行.sh文件，选择 Activate code，输入code</p>\n<p>给Pycharm添加桌面快捷键<br>sudo gedit /usr/share/applications/Pycharm.desktop<br>编辑<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Desktop Entry]</span><br><span class=\"line\">Type=Application</span><br><span class=\"line\">Name=Pycharm</span><br><span class=\"line\">GenericName=Pycharm3</span><br><span class=\"line\">Comment=Pycharm3:The Python IDE</span><br><span class=\"line\">Exec=sh **/**.sh  （sh的完整路径）</span><br><span class=\"line\">Icon= （图标所在的完整路径）</span><br><span class=\"line\">Terminal=pycharm</span><br><span class=\"line\">Categories=Pycharm;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h1><p>坑： ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/run/mysqld/mysqld.sock’ (2)<br>不能直接输入mysql连接<br>官网有很全的安装指南<br><a href=\"https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-fresh-install</a></p>\n<p>安装后登录的时候输入<br>mysql -h<locolhost> -uroot -p&lt;密码&gt;<br>记得 -h和-p后面都不能加空格<br>如 mysql -h127.0.0.1 -uroot -p88888888<br>导出问题（<a href=\"https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/34102562/mysql-error-1290-hy000-secure-file-priv-option）</a></locolhost></p>\n<p>show variables like ‘%secure%’;<br>找出secure_file_priv的目录，输出到该目录下即可</p>\n<h1 id=\"还原某些桌面设置\"><a href=\"#还原某些桌面设置\" class=\"headerlink\" title=\"还原某些桌面设置\"></a>还原某些桌面设置</h1><p>dconf reset -f /</p>\n<h1 id=\"解压zip乱码\"><a href=\"#解压zip乱码\" class=\"headerlink\" title=\"解压zip乱码\"></a>解压zip乱码</h1><p>unzip -O cp936 xxxx.zip</p>\n"},{"title":"python Django初识","date":"2018-09-18T09:53:35.000Z","description":"使用Python中的Django搭建网站后台 。","_content":"\n\n# 基本环境\nUbuntu18\n```\nsudo apt-get update\nsudo apt-get -y upgrade\n更新安装好的系统信息\n\nsudo pip install  virtualenv  \n安装虚拟环境\nip a\n查看当前虚拟机的ip\n\n\n```\n","source":"_posts/python-Django初识.md","raw":"---\ntitle: python Django初识\ndate: 2018-09-18 17:53:35\ntags:\n    - python3项目\ncategories:\n    - Python3\ndescription:\n    使用Python中的Django搭建网站后台 。\n---\n\n\n# 基本环境\nUbuntu18\n```\nsudo apt-get update\nsudo apt-get -y upgrade\n更新安装好的系统信息\n\nsudo pip install  virtualenv  \n安装虚拟环境\nip a\n查看当前虚拟机的ip\n\n\n```\n","slug":"python-Django初识","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbs0019a7s1krtdwjnw","content":"<h1 id=\"基本环境\"><a href=\"#基本环境\" class=\"headerlink\" title=\"基本环境\"></a>基本环境</h1><p>Ubuntu18<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get -y upgrade</span><br><span class=\"line\">更新安装好的系统信息</span><br><span class=\"line\"></span><br><span class=\"line\">sudo pip install  virtualenv  </span><br><span class=\"line\">安装虚拟环境</span><br><span class=\"line\">ip a</span><br><span class=\"line\">查看当前虚拟机的ip</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"基本环境\"><a href=\"#基本环境\" class=\"headerlink\" title=\"基本环境\"></a>基本环境</h1><p>Ubuntu18<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get -y upgrade</span><br><span class=\"line\">更新安装好的系统信息</span><br><span class=\"line\"></span><br><span class=\"line\">sudo pip install  virtualenv  </span><br><span class=\"line\">安装虚拟环境</span><br><span class=\"line\">ip a</span><br><span class=\"line\">查看当前虚拟机的ip</span><br></pre></td></tr></table></figure></p>\n"},{"title":"python爬取hdu题库","date":"2018-09-02T23:48:27.000Z","description":"Python实现爬取后台题库。","_content":"\n这里涉及到很多的点，比如python利用正则表达式爬下来之后怎么把html标签去除，还有伪装浏览器访问，错误处理。\n\n```python\nimport webbrowser\nimport urllib\nimport requests\nimport re\ndef getHtml(url):\n    page = urllib.request.urlopen(url)\n    html = page.read()\n    unicodehtml = html.decode(\"gbk\")\t## 转化为gbk格式\n    return unicodehtml\n\ndef zhenghe(str1,id,imgre):\n    html=getHtml( str1+id )\n    return re.findall(imgre,html)\n\nheaders = {'User-Agent':\n    'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '\n    'Chrome/51.0.2704.63 Safari/537.36'}    ## 改request的头  模拟浏览器\nnum =1000;\nUrl = \"http://acm.hdu.edu.cn/showproblem.php?pid=\"\nreg = r'<div class=panel_content>.*?[\\s\\S]*?</div>'\t## 正则表达式\nimgre=re.compile(reg)\nwhile num<=6275:\n        list = zhenghe(Url,str(num),imgre)\n        t = open(\"hdu题库\\hdu%s.txt\"%num,\"w\")\n        for i in list:\n            dr = re.compile(r'<[^>]+>',re.S)\n            dd = dr.sub('',i)\n            ## 上面两行时用来去除html标签\n            t.write(dd)\t\t## 写入\n            t.write(\"\\n\")\n        t.close()\n        num=num+1\n```\n\n然而有一些问题 。就是转化gbk格式失败会终止程序，因此要写个错误处理\n```python\ndef getHtml(url):\n    page = urllib.request.urlopen(url)\n    html = page.read()\n    try:\n        unicodehtml = html.decode(\"gbk\")\n    except:\n        print(\"%s had not been install\\n\"%url)\n        return \"a\" \t## 错误时return一个a\n    return unicodehtml\n\nwhile num<=6275:\n        list = zhenghe(Url,str(num),imgre)\n        if(list==\"a\"):\t## 当发生错误时不写入\n            continue\n        t = open(\"hdu题库\\hdu%s.txt\"%num,\"w\")\n```\n到了这一步其实基本都已经实现了，但是还是不太完美，输入输出没有分开，而且也没有标题：\n{% asset_img 1.png %}\n这时候详化一下正则表达式就可以了，最终版本代码：\n\n```python\nimport webbrowser\nimport urllib\nimport requests\nimport re\nimport codecs\ndef getHtml(url):\n    page = urllib.request.urlopen(url)\n    html = page.read()\n    try:\n        unicodehtml = html.decode(\"gbk\")\n    except:\n        print(\"%s had not been install\\n\"%url)\n        return \"a\"\n    return unicodehtml\n\ndef zhenghe(str1,id,imgre):\n    html=getHtml( str1+id )\n    return re.findall(imgre,html)\nheaders = {'User-Agent':\n    'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '\n    'Chrome/51.0.2704.63 Safari/537.36'}\nnum =1013;\nUrl = \"http://acm.hdu.edu.cn/showproblem.php?pid=\"\nreg = {}\nreg[0] = r\"<td align=center><h1 style='color:#1A5CC8'>.*?[\\s\\S]</h1>\"\nreg[1] = r\"<br><br><div class=panel_title align=left>.*?[\\s\\S]*?</div> <div class=panel_content>\"\nreg[2] = r\"</div> <div class=panel_content>.*?[\\s\\S]*?<br></div><div class=panel_bottom>\"\nreg[3] = r'Sample Input</div><div class=panel_content><pre><div style=\"font-family:Courier New,Courier,monospace;\">.*?[\\s\\S]*?</div>'\nreg[4] = r'Sample Output</div><div class=panel_content><pre><div style=\"font-family:Courier New,Courier,monospace;\">.*?[\\s\\S]*?</div>'\nwhile num<=1013:\n    t = open(\"hdu题库\\hdu%s.txt\"%num,\"a\")\n    for j in range (0,5):\n        imgre=re.compile(reg[j])\n        list = zhenghe(Url,str(num),imgre)\n        if(list==\"a\"):\n            continue\n\n        for i in list:\n            dr = re.compile(r'<[^>]+>',re.S)\n            dd = dr.sub('',i)\n            dr = re.compile(r'Input',re.S)\n            dd = dr.sub('Input\\n',dd)\n            dr = re.compile(r'Output',re.S)\n            dd = dr.sub('Output\\n',dd)\n            t.write(dd)\n            t.write(\"\\n\\n\")\n    t.close()\n    num=num+1\n```\n\n{% asset_img 2.png %}\n","source":"_posts/python爬取hdu题库.md","raw":"---\ntitle: python爬取hdu题库\ndate: 2018-09-03 07:48:27\ntags: Python\ncategories: Python\ndescription: Python实现爬取后台题库。\n---\n\n这里涉及到很多的点，比如python利用正则表达式爬下来之后怎么把html标签去除，还有伪装浏览器访问，错误处理。\n\n```python\nimport webbrowser\nimport urllib\nimport requests\nimport re\ndef getHtml(url):\n    page = urllib.request.urlopen(url)\n    html = page.read()\n    unicodehtml = html.decode(\"gbk\")\t## 转化为gbk格式\n    return unicodehtml\n\ndef zhenghe(str1,id,imgre):\n    html=getHtml( str1+id )\n    return re.findall(imgre,html)\n\nheaders = {'User-Agent':\n    'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '\n    'Chrome/51.0.2704.63 Safari/537.36'}    ## 改request的头  模拟浏览器\nnum =1000;\nUrl = \"http://acm.hdu.edu.cn/showproblem.php?pid=\"\nreg = r'<div class=panel_content>.*?[\\s\\S]*?</div>'\t## 正则表达式\nimgre=re.compile(reg)\nwhile num<=6275:\n        list = zhenghe(Url,str(num),imgre)\n        t = open(\"hdu题库\\hdu%s.txt\"%num,\"w\")\n        for i in list:\n            dr = re.compile(r'<[^>]+>',re.S)\n            dd = dr.sub('',i)\n            ## 上面两行时用来去除html标签\n            t.write(dd)\t\t## 写入\n            t.write(\"\\n\")\n        t.close()\n        num=num+1\n```\n\n然而有一些问题 。就是转化gbk格式失败会终止程序，因此要写个错误处理\n```python\ndef getHtml(url):\n    page = urllib.request.urlopen(url)\n    html = page.read()\n    try:\n        unicodehtml = html.decode(\"gbk\")\n    except:\n        print(\"%s had not been install\\n\"%url)\n        return \"a\" \t## 错误时return一个a\n    return unicodehtml\n\nwhile num<=6275:\n        list = zhenghe(Url,str(num),imgre)\n        if(list==\"a\"):\t## 当发生错误时不写入\n            continue\n        t = open(\"hdu题库\\hdu%s.txt\"%num,\"w\")\n```\n到了这一步其实基本都已经实现了，但是还是不太完美，输入输出没有分开，而且也没有标题：\n{% asset_img 1.png %}\n这时候详化一下正则表达式就可以了，最终版本代码：\n\n```python\nimport webbrowser\nimport urllib\nimport requests\nimport re\nimport codecs\ndef getHtml(url):\n    page = urllib.request.urlopen(url)\n    html = page.read()\n    try:\n        unicodehtml = html.decode(\"gbk\")\n    except:\n        print(\"%s had not been install\\n\"%url)\n        return \"a\"\n    return unicodehtml\n\ndef zhenghe(str1,id,imgre):\n    html=getHtml( str1+id )\n    return re.findall(imgre,html)\nheaders = {'User-Agent':\n    'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '\n    'Chrome/51.0.2704.63 Safari/537.36'}\nnum =1013;\nUrl = \"http://acm.hdu.edu.cn/showproblem.php?pid=\"\nreg = {}\nreg[0] = r\"<td align=center><h1 style='color:#1A5CC8'>.*?[\\s\\S]</h1>\"\nreg[1] = r\"<br><br><div class=panel_title align=left>.*?[\\s\\S]*?</div> <div class=panel_content>\"\nreg[2] = r\"</div> <div class=panel_content>.*?[\\s\\S]*?<br></div><div class=panel_bottom>\"\nreg[3] = r'Sample Input</div><div class=panel_content><pre><div style=\"font-family:Courier New,Courier,monospace;\">.*?[\\s\\S]*?</div>'\nreg[4] = r'Sample Output</div><div class=panel_content><pre><div style=\"font-family:Courier New,Courier,monospace;\">.*?[\\s\\S]*?</div>'\nwhile num<=1013:\n    t = open(\"hdu题库\\hdu%s.txt\"%num,\"a\")\n    for j in range (0,5):\n        imgre=re.compile(reg[j])\n        list = zhenghe(Url,str(num),imgre)\n        if(list==\"a\"):\n            continue\n\n        for i in list:\n            dr = re.compile(r'<[^>]+>',re.S)\n            dd = dr.sub('',i)\n            dr = re.compile(r'Input',re.S)\n            dd = dr.sub('Input\\n',dd)\n            dr = re.compile(r'Output',re.S)\n            dd = dr.sub('Output\\n',dd)\n            t.write(dd)\n            t.write(\"\\n\\n\")\n    t.close()\n    num=num+1\n```\n\n{% asset_img 2.png %}\n","slug":"python爬取hdu题库","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbu001ca7s1sudjlgge","content":"<p>这里涉及到很多的点，比如python利用正则表达式爬下来之后怎么把html标签去除，还有伪装浏览器访问，错误处理。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> webbrowser</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getHtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    page = urllib.request.urlopen(url)</span><br><span class=\"line\">    html = page.read()</span><br><span class=\"line\">    unicodehtml = html.decode(<span class=\"string\">\"gbk\"</span>)\t<span class=\"comment\">## 转化为gbk格式</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> unicodehtml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">zhenghe</span><span class=\"params\">(str1,id,imgre)</span>:</span></span><br><span class=\"line\">    html=getHtml( str1+id )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> re.findall(imgre,html)</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;<span class=\"string\">'User-Agent'</span>:</span><br><span class=\"line\">    <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class=\"line\">    <span class=\"string\">'Chrome/51.0.2704.63 Safari/537.36'</span>&#125;    <span class=\"comment\">## 改request的头  模拟浏览器</span></span><br><span class=\"line\">num =<span class=\"number\">1000</span>;</span><br><span class=\"line\">Url = <span class=\"string\">\"http://acm.hdu.edu.cn/showproblem.php?pid=\"</span></span><br><span class=\"line\">reg = <span class=\"string\">r'&lt;div class=panel_content&gt;.*?[\\s\\S]*?&lt;/div&gt;'</span>\t<span class=\"comment\">## 正则表达式</span></span><br><span class=\"line\">imgre=re.compile(reg)</span><br><span class=\"line\"><span class=\"keyword\">while</span> num&lt;=<span class=\"number\">6275</span>:</span><br><span class=\"line\">        list = zhenghe(Url,str(num),imgre)</span><br><span class=\"line\">        t = open(<span class=\"string\">\"hdu题库\\hdu%s.txt\"</span>%num,<span class=\"string\">\"w\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> list:</span><br><span class=\"line\">            dr = re.compile(<span class=\"string\">r'&lt;[^&gt;]+&gt;'</span>,re.S)</span><br><span class=\"line\">            dd = dr.sub(<span class=\"string\">''</span>,i)</span><br><span class=\"line\">            <span class=\"comment\">## 上面两行时用来去除html标签</span></span><br><span class=\"line\">            t.write(dd)\t\t<span class=\"comment\">## 写入</span></span><br><span class=\"line\">            t.write(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">        t.close()</span><br><span class=\"line\">        num=num+<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>然而有一些问题 。就是转化gbk格式失败会终止程序，因此要写个错误处理<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getHtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    page = urllib.request.urlopen(url)</span><br><span class=\"line\">    html = page.read()</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        unicodehtml = html.decode(<span class=\"string\">\"gbk\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"%s had not been install\\n\"</span>%url)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"a\"</span> \t<span class=\"comment\">## 错误时return一个a</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> unicodehtml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> num&lt;=<span class=\"number\">6275</span>:</span><br><span class=\"line\">        list = zhenghe(Url,str(num),imgre)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(list==<span class=\"string\">\"a\"</span>):\t<span class=\"comment\">## 当发生错误时不写入</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        t = open(<span class=\"string\">\"hdu题库\\hdu%s.txt\"</span>%num,<span class=\"string\">\"w\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>到了这一步其实基本都已经实现了，但是还是不太完美，输入输出没有分开，而且也没有标题：<br><img src=\"/2018/09/03/python爬取hdu题库/1.png\"><br>这时候详化一下正则表达式就可以了，最终版本代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> webbrowser</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> codecs</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getHtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    page = urllib.request.urlopen(url)</span><br><span class=\"line\">    html = page.read()</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        unicodehtml = html.decode(<span class=\"string\">\"gbk\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"%s had not been install\\n\"</span>%url)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"a\"</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> unicodehtml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">zhenghe</span><span class=\"params\">(str1,id,imgre)</span>:</span></span><br><span class=\"line\">    html=getHtml( str1+id )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> re.findall(imgre,html)</span><br><span class=\"line\">headers = &#123;<span class=\"string\">'User-Agent'</span>:</span><br><span class=\"line\">    <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class=\"line\">    <span class=\"string\">'Chrome/51.0.2704.63 Safari/537.36'</span>&#125;</span><br><span class=\"line\">num =<span class=\"number\">1013</span>;</span><br><span class=\"line\">Url = <span class=\"string\">\"http://acm.hdu.edu.cn/showproblem.php?pid=\"</span></span><br><span class=\"line\">reg = &#123;&#125;</span><br><span class=\"line\">reg[<span class=\"number\">0</span>] = <span class=\"string\">r\"&lt;td align=center&gt;&lt;h1 style='color:#1A5CC8'&gt;.*?[\\s\\S]&lt;/h1&gt;\"</span></span><br><span class=\"line\">reg[<span class=\"number\">1</span>] = <span class=\"string\">r\"&lt;br&gt;&lt;br&gt;&lt;div class=panel_title align=left&gt;.*?[\\s\\S]*?&lt;/div&gt; &lt;div class=panel_content&gt;\"</span></span><br><span class=\"line\">reg[<span class=\"number\">2</span>] = <span class=\"string\">r\"&lt;/div&gt; &lt;div class=panel_content&gt;.*?[\\s\\S]*?&lt;br&gt;&lt;/div&gt;&lt;div class=panel_bottom&gt;\"</span></span><br><span class=\"line\">reg[<span class=\"number\">3</span>] = <span class=\"string\">r'Sample Input&lt;/div&gt;&lt;div class=panel_content&gt;&lt;pre&gt;&lt;div style=\"font-family:Courier New,Courier,monospace;\"&gt;.*?[\\s\\S]*?&lt;/div&gt;'</span></span><br><span class=\"line\">reg[<span class=\"number\">4</span>] = <span class=\"string\">r'Sample Output&lt;/div&gt;&lt;div class=panel_content&gt;&lt;pre&gt;&lt;div style=\"font-family:Courier New,Courier,monospace;\"&gt;.*?[\\s\\S]*?&lt;/div&gt;'</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> num&lt;=<span class=\"number\">1013</span>:</span><br><span class=\"line\">    t = open(<span class=\"string\">\"hdu题库\\hdu%s.txt\"</span>%num,<span class=\"string\">\"a\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range (<span class=\"number\">0</span>,<span class=\"number\">5</span>):</span><br><span class=\"line\">        imgre=re.compile(reg[j])</span><br><span class=\"line\">        list = zhenghe(Url,str(num),imgre)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(list==<span class=\"string\">\"a\"</span>):</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> list:</span><br><span class=\"line\">            dr = re.compile(<span class=\"string\">r'&lt;[^&gt;]+&gt;'</span>,re.S)</span><br><span class=\"line\">            dd = dr.sub(<span class=\"string\">''</span>,i)</span><br><span class=\"line\">            dr = re.compile(<span class=\"string\">r'Input'</span>,re.S)</span><br><span class=\"line\">            dd = dr.sub(<span class=\"string\">'Input\\n'</span>,dd)</span><br><span class=\"line\">            dr = re.compile(<span class=\"string\">r'Output'</span>,re.S)</span><br><span class=\"line\">            dd = dr.sub(<span class=\"string\">'Output\\n'</span>,dd)</span><br><span class=\"line\">            t.write(dd)</span><br><span class=\"line\">            t.write(<span class=\"string\">\"\\n\\n\"</span>)</span><br><span class=\"line\">    t.close()</span><br><span class=\"line\">    num=num+<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<img src=\"/2018/09/03/python爬取hdu题库/2.png\">\n","site":{"data":{}},"excerpt":"","more":"<p>这里涉及到很多的点，比如python利用正则表达式爬下来之后怎么把html标签去除，还有伪装浏览器访问，错误处理。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> webbrowser</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getHtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    page = urllib.request.urlopen(url)</span><br><span class=\"line\">    html = page.read()</span><br><span class=\"line\">    unicodehtml = html.decode(<span class=\"string\">\"gbk\"</span>)\t<span class=\"comment\">## 转化为gbk格式</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> unicodehtml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">zhenghe</span><span class=\"params\">(str1,id,imgre)</span>:</span></span><br><span class=\"line\">    html=getHtml( str1+id )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> re.findall(imgre,html)</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;<span class=\"string\">'User-Agent'</span>:</span><br><span class=\"line\">    <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class=\"line\">    <span class=\"string\">'Chrome/51.0.2704.63 Safari/537.36'</span>&#125;    <span class=\"comment\">## 改request的头  模拟浏览器</span></span><br><span class=\"line\">num =<span class=\"number\">1000</span>;</span><br><span class=\"line\">Url = <span class=\"string\">\"http://acm.hdu.edu.cn/showproblem.php?pid=\"</span></span><br><span class=\"line\">reg = <span class=\"string\">r'&lt;div class=panel_content&gt;.*?[\\s\\S]*?&lt;/div&gt;'</span>\t<span class=\"comment\">## 正则表达式</span></span><br><span class=\"line\">imgre=re.compile(reg)</span><br><span class=\"line\"><span class=\"keyword\">while</span> num&lt;=<span class=\"number\">6275</span>:</span><br><span class=\"line\">        list = zhenghe(Url,str(num),imgre)</span><br><span class=\"line\">        t = open(<span class=\"string\">\"hdu题库\\hdu%s.txt\"</span>%num,<span class=\"string\">\"w\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> list:</span><br><span class=\"line\">            dr = re.compile(<span class=\"string\">r'&lt;[^&gt;]+&gt;'</span>,re.S)</span><br><span class=\"line\">            dd = dr.sub(<span class=\"string\">''</span>,i)</span><br><span class=\"line\">            <span class=\"comment\">## 上面两行时用来去除html标签</span></span><br><span class=\"line\">            t.write(dd)\t\t<span class=\"comment\">## 写入</span></span><br><span class=\"line\">            t.write(<span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">        t.close()</span><br><span class=\"line\">        num=num+<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>然而有一些问题 。就是转化gbk格式失败会终止程序，因此要写个错误处理<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getHtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    page = urllib.request.urlopen(url)</span><br><span class=\"line\">    html = page.read()</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        unicodehtml = html.decode(<span class=\"string\">\"gbk\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"%s had not been install\\n\"</span>%url)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"a\"</span> \t<span class=\"comment\">## 错误时return一个a</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> unicodehtml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> num&lt;=<span class=\"number\">6275</span>:</span><br><span class=\"line\">        list = zhenghe(Url,str(num),imgre)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(list==<span class=\"string\">\"a\"</span>):\t<span class=\"comment\">## 当发生错误时不写入</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        t = open(<span class=\"string\">\"hdu题库\\hdu%s.txt\"</span>%num,<span class=\"string\">\"w\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>到了这一步其实基本都已经实现了，但是还是不太完美，输入输出没有分开，而且也没有标题：<br><img src=\"/2018/09/03/python爬取hdu题库/1.png\"><br>这时候详化一下正则表达式就可以了，最终版本代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> webbrowser</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> codecs</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getHtml</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    page = urllib.request.urlopen(url)</span><br><span class=\"line\">    html = page.read()</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        unicodehtml = html.decode(<span class=\"string\">\"gbk\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"%s had not been install\\n\"</span>%url)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"a\"</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> unicodehtml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">zhenghe</span><span class=\"params\">(str1,id,imgre)</span>:</span></span><br><span class=\"line\">    html=getHtml( str1+id )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> re.findall(imgre,html)</span><br><span class=\"line\">headers = &#123;<span class=\"string\">'User-Agent'</span>:</span><br><span class=\"line\">    <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class=\"line\">    <span class=\"string\">'Chrome/51.0.2704.63 Safari/537.36'</span>&#125;</span><br><span class=\"line\">num =<span class=\"number\">1013</span>;</span><br><span class=\"line\">Url = <span class=\"string\">\"http://acm.hdu.edu.cn/showproblem.php?pid=\"</span></span><br><span class=\"line\">reg = &#123;&#125;</span><br><span class=\"line\">reg[<span class=\"number\">0</span>] = <span class=\"string\">r\"&lt;td align=center&gt;&lt;h1 style='color:#1A5CC8'&gt;.*?[\\s\\S]&lt;/h1&gt;\"</span></span><br><span class=\"line\">reg[<span class=\"number\">1</span>] = <span class=\"string\">r\"&lt;br&gt;&lt;br&gt;&lt;div class=panel_title align=left&gt;.*?[\\s\\S]*?&lt;/div&gt; &lt;div class=panel_content&gt;\"</span></span><br><span class=\"line\">reg[<span class=\"number\">2</span>] = <span class=\"string\">r\"&lt;/div&gt; &lt;div class=panel_content&gt;.*?[\\s\\S]*?&lt;br&gt;&lt;/div&gt;&lt;div class=panel_bottom&gt;\"</span></span><br><span class=\"line\">reg[<span class=\"number\">3</span>] = <span class=\"string\">r'Sample Input&lt;/div&gt;&lt;div class=panel_content&gt;&lt;pre&gt;&lt;div style=\"font-family:Courier New,Courier,monospace;\"&gt;.*?[\\s\\S]*?&lt;/div&gt;'</span></span><br><span class=\"line\">reg[<span class=\"number\">4</span>] = <span class=\"string\">r'Sample Output&lt;/div&gt;&lt;div class=panel_content&gt;&lt;pre&gt;&lt;div style=\"font-family:Courier New,Courier,monospace;\"&gt;.*?[\\s\\S]*?&lt;/div&gt;'</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> num&lt;=<span class=\"number\">1013</span>:</span><br><span class=\"line\">    t = open(<span class=\"string\">\"hdu题库\\hdu%s.txt\"</span>%num,<span class=\"string\">\"a\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range (<span class=\"number\">0</span>,<span class=\"number\">5</span>):</span><br><span class=\"line\">        imgre=re.compile(reg[j])</span><br><span class=\"line\">        list = zhenghe(Url,str(num),imgre)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(list==<span class=\"string\">\"a\"</span>):</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> list:</span><br><span class=\"line\">            dr = re.compile(<span class=\"string\">r'&lt;[^&gt;]+&gt;'</span>,re.S)</span><br><span class=\"line\">            dd = dr.sub(<span class=\"string\">''</span>,i)</span><br><span class=\"line\">            dr = re.compile(<span class=\"string\">r'Input'</span>,re.S)</span><br><span class=\"line\">            dd = dr.sub(<span class=\"string\">'Input\\n'</span>,dd)</span><br><span class=\"line\">            dr = re.compile(<span class=\"string\">r'Output'</span>,re.S)</span><br><span class=\"line\">            dd = dr.sub(<span class=\"string\">'Output\\n'</span>,dd)</span><br><span class=\"line\">            t.write(dd)</span><br><span class=\"line\">            t.write(<span class=\"string\">\"\\n\\n\"</span>)</span><br><span class=\"line\">    t.close()</span><br><span class=\"line\">    num=num+<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<img src=\"/2018/09/03/python爬取hdu题库/2.png\">\n"},{"title":"redis配置与使用","date":"2018-09-05T02:36:23.000Z","description":"redis的基本配置和与python3 搭配使用。","_content":"\n# 下载安装配置\n担心MYSQL开着会影响到redis 所以先检查和关闭mysql\n```\nservice mysql status\nservice mysql stop\n```\n然后下载redis 到官网下载也行 ， 用wget也行。\n```\nwget http://download.redis.io/releases/redis-4.0.10.tar.gz\ntar -zxvf redis-4.0.10.tar.gz\ncd redis-4.0.10\nmake test\ncd src\nmake install\ncd ..\nmkdir etc\nmkdir bin\nmv redis.conf etc/\ncd src\nmv mkreleasehdr.sh  redis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server  redis-trib.rb ../bin\n./redis-server\n```\n这时候会看到一些about\nctrl + c 出来，\n```\ncd\n./redis-c\n```\n这时候会报错\nCould not connect to Redis at 127.0.0.1:6379: Connection refused\nCould not connect to Redis at 127.0.0.1:6379: Connection refused\n修改一下配置文件\n具体目录find找一下\n把daemonize配置项改为yes\n```\nredis-server /home/edxuanlen/redis-4.0.10/etc/redis.conf\nredis-cli\n```\n然后就可以连接了\n\n附录：配置信息\ndaemonize 如果需要在后台运行，把该项改为yes\npidfile 配置多个pid的地址 默认在/var/run/redis. pid\nbind 绑定ip，设置后只接受来自该ip的请求\nport 监听端口，默认是6379\nloglevel 分为4个等级：debug verbose notice warning\nlogfile 用于配置log文件地址\ndatabases 设置数据库个数，默认使用的数据库为0\nsave 设置redis进行数据库镜像的频率。\nrdbcompression 在进行镜像备份时，是否进行压缩\ndbfilename 镜像备份文件的文件名\nDir 数据库镜像备份的文件放置路径\nSlaveof 设置数据库为其他数据库的从数据库\nMasterauth 主数据库连接需要的密码验证\nRequriepass 设置 登陆时需要使用密码\nMaxclients 限制同时使用的客户数量\nMaxmemory 设置redis能够使用的最大内存\nAppendonly 开启append only模式\nAppendfsync 设置对appendonly. aof文件同步的频率（对数据进行备份的第二种方式）\nvm-enabled 是否开启虚拟内存支持 （vm开头的参数都是配置虚拟内存的）\nvm-swap-file 设置虚拟内存的交换文件路径\nvm-max-memory 设置redis使用的最大物理内存大小\nvm-page-size 设置虚拟内存的页大小\nvm-pages 设置交换文件的总的page数量\nvm-max-threads 设置VM IO同时使用的线程数量\nGlueoutputbuf 把小的输出缓存存放在一起\nhash-max-zipmap-entries 设置hash的临界值\nActiverehashing 重新hash\n\n\n\n\n## redis中的list\n\n#题目：\n 做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？ 将 0001 题生成的 200 个激活码（或者优惠券）保存到 Redis 非关系型数据库中。\n\n\n\nhttp://www.runoob.com/redis/redis-lists.html\n使用LPUSH将数据插入到名为 Code的列表当中\n```python3\n# coding : utf-8\nimport redis\nimport random\n\nr = redis.Redis(host='127.0.0.1',port=6379,db=0)\nlist = []\nfor i in range (65,91):\n    list.append(str(chr(i)))\nfor i in range (97,123):\n    list.append(str(chr(i)))\nfor i in range (10):\n    list.append(str(i))\n\n# file = open('code.txt','w')\nfor i in range (200):\n    Code = ''\n    for j in range (16):\n        Code += random.choice(list)\n        if (j + 1) % 4 == 0 and j != 15:\n            Code = Code + '-'\n    r.lpush('Code', Code )\n```\n","source":"_posts/redis配置与使用.md","raw":"---\ntitle: redis配置与使用\ndate: 2018-09-05 10:36:23\ntags:\n    - python3小练手\ncategories:\n    - Python3\ndescription:\n    redis的基本配置和与python3 搭配使用。\n---\n\n# 下载安装配置\n担心MYSQL开着会影响到redis 所以先检查和关闭mysql\n```\nservice mysql status\nservice mysql stop\n```\n然后下载redis 到官网下载也行 ， 用wget也行。\n```\nwget http://download.redis.io/releases/redis-4.0.10.tar.gz\ntar -zxvf redis-4.0.10.tar.gz\ncd redis-4.0.10\nmake test\ncd src\nmake install\ncd ..\nmkdir etc\nmkdir bin\nmv redis.conf etc/\ncd src\nmv mkreleasehdr.sh  redis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server  redis-trib.rb ../bin\n./redis-server\n```\n这时候会看到一些about\nctrl + c 出来，\n```\ncd\n./redis-c\n```\n这时候会报错\nCould not connect to Redis at 127.0.0.1:6379: Connection refused\nCould not connect to Redis at 127.0.0.1:6379: Connection refused\n修改一下配置文件\n具体目录find找一下\n把daemonize配置项改为yes\n```\nredis-server /home/edxuanlen/redis-4.0.10/etc/redis.conf\nredis-cli\n```\n然后就可以连接了\n\n附录：配置信息\ndaemonize 如果需要在后台运行，把该项改为yes\npidfile 配置多个pid的地址 默认在/var/run/redis. pid\nbind 绑定ip，设置后只接受来自该ip的请求\nport 监听端口，默认是6379\nloglevel 分为4个等级：debug verbose notice warning\nlogfile 用于配置log文件地址\ndatabases 设置数据库个数，默认使用的数据库为0\nsave 设置redis进行数据库镜像的频率。\nrdbcompression 在进行镜像备份时，是否进行压缩\ndbfilename 镜像备份文件的文件名\nDir 数据库镜像备份的文件放置路径\nSlaveof 设置数据库为其他数据库的从数据库\nMasterauth 主数据库连接需要的密码验证\nRequriepass 设置 登陆时需要使用密码\nMaxclients 限制同时使用的客户数量\nMaxmemory 设置redis能够使用的最大内存\nAppendonly 开启append only模式\nAppendfsync 设置对appendonly. aof文件同步的频率（对数据进行备份的第二种方式）\nvm-enabled 是否开启虚拟内存支持 （vm开头的参数都是配置虚拟内存的）\nvm-swap-file 设置虚拟内存的交换文件路径\nvm-max-memory 设置redis使用的最大物理内存大小\nvm-page-size 设置虚拟内存的页大小\nvm-pages 设置交换文件的总的page数量\nvm-max-threads 设置VM IO同时使用的线程数量\nGlueoutputbuf 把小的输出缓存存放在一起\nhash-max-zipmap-entries 设置hash的临界值\nActiverehashing 重新hash\n\n\n\n\n## redis中的list\n\n#题目：\n 做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？ 将 0001 题生成的 200 个激活码（或者优惠券）保存到 Redis 非关系型数据库中。\n\n\n\nhttp://www.runoob.com/redis/redis-lists.html\n使用LPUSH将数据插入到名为 Code的列表当中\n```python3\n# coding : utf-8\nimport redis\nimport random\n\nr = redis.Redis(host='127.0.0.1',port=6379,db=0)\nlist = []\nfor i in range (65,91):\n    list.append(str(chr(i)))\nfor i in range (97,123):\n    list.append(str(chr(i)))\nfor i in range (10):\n    list.append(str(i))\n\n# file = open('code.txt','w')\nfor i in range (200):\n    Code = ''\n    for j in range (16):\n        Code += random.choice(list)\n        if (j + 1) % 4 == 0 and j != 15:\n            Code = Code + '-'\n    r.lpush('Code', Code )\n```\n","slug":"redis配置与使用","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbv001ga7s19dvqt7ai","content":"<h1 id=\"下载安装配置\"><a href=\"#下载安装配置\" class=\"headerlink\" title=\"下载安装配置\"></a>下载安装配置</h1><p>担心MYSQL开着会影响到redis 所以先检查和关闭mysql<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysql status</span><br><span class=\"line\">service mysql stop</span><br></pre></td></tr></table></figure></p>\n<p>然后下载redis 到官网下载也行 ， 用wget也行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://download.redis.io/releases/redis-4.0.10.tar.gz</span><br><span class=\"line\">tar -zxvf redis-4.0.10.tar.gz</span><br><span class=\"line\">cd redis-4.0.10</span><br><span class=\"line\">make test</span><br><span class=\"line\">cd src</span><br><span class=\"line\">make install</span><br><span class=\"line\">cd ..</span><br><span class=\"line\">mkdir etc</span><br><span class=\"line\">mkdir bin</span><br><span class=\"line\">mv redis.conf etc/</span><br><span class=\"line\">cd src</span><br><span class=\"line\">mv mkreleasehdr.sh  redis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server  redis-trib.rb ../bin</span><br><span class=\"line\">./redis-server</span><br></pre></td></tr></table></figure></p>\n<p>这时候会看到一些about<br>ctrl + c 出来，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd</span><br><span class=\"line\">./redis-c</span><br></pre></td></tr></table></figure></p>\n<p>这时候会报错<br>Could not connect to Redis at 127.0.0.1:6379: Connection refused<br>Could not connect to Redis at 127.0.0.1:6379: Connection refused<br>修改一下配置文件<br>具体目录find找一下<br>把daemonize配置项改为yes<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-server /home/edxuanlen/redis-4.0.10/etc/redis.conf</span><br><span class=\"line\">redis-cli</span><br></pre></td></tr></table></figure></p>\n<p>然后就可以连接了</p>\n<p>附录：配置信息<br>daemonize 如果需要在后台运行，把该项改为yes<br>pidfile 配置多个pid的地址 默认在/var/run/redis. pid<br>bind 绑定ip，设置后只接受来自该ip的请求<br>port 监听端口，默认是6379<br>loglevel 分为4个等级：debug verbose notice warning<br>logfile 用于配置log文件地址<br>databases 设置数据库个数，默认使用的数据库为0<br>save 设置redis进行数据库镜像的频率。<br>rdbcompression 在进行镜像备份时，是否进行压缩<br>dbfilename 镜像备份文件的文件名<br>Dir 数据库镜像备份的文件放置路径<br>Slaveof 设置数据库为其他数据库的从数据库<br>Masterauth 主数据库连接需要的密码验证<br>Requriepass 设置 登陆时需要使用密码<br>Maxclients 限制同时使用的客户数量<br>Maxmemory 设置redis能够使用的最大内存<br>Appendonly 开启append only模式<br>Appendfsync 设置对appendonly. aof文件同步的频率（对数据进行备份的第二种方式）<br>vm-enabled 是否开启虚拟内存支持 （vm开头的参数都是配置虚拟内存的）<br>vm-swap-file 设置虚拟内存的交换文件路径<br>vm-max-memory 设置redis使用的最大物理内存大小<br>vm-page-size 设置虚拟内存的页大小<br>vm-pages 设置交换文件的总的page数量<br>vm-max-threads 设置VM IO同时使用的线程数量<br>Glueoutputbuf 把小的输出缓存存放在一起<br>hash-max-zipmap-entries 设置hash的临界值<br>Activerehashing 重新hash</p>\n<h2 id=\"redis中的list\"><a href=\"#redis中的list\" class=\"headerlink\" title=\"redis中的list\"></a>redis中的list</h2><p>#题目：<br> 做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？ 将 0001 题生成的 200 个激活码（或者优惠券）保存到 Redis 非关系型数据库中。</p>\n<p><a href=\"http://www.runoob.com/redis/redis-lists.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/redis/redis-lists.html</a><br>使用LPUSH将数据插入到名为 Code的列表当中<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># coding : utf-8</span><br><span class=\"line\">import redis</span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">r = redis.Redis(host=&apos;127.0.0.1&apos;,port=6379,db=0)</span><br><span class=\"line\">list = []</span><br><span class=\"line\">for i in range (65,91):</span><br><span class=\"line\">    list.append(str(chr(i)))</span><br><span class=\"line\">for i in range (97,123):</span><br><span class=\"line\">    list.append(str(chr(i)))</span><br><span class=\"line\">for i in range (10):</span><br><span class=\"line\">    list.append(str(i))</span><br><span class=\"line\"></span><br><span class=\"line\"># file = open(&apos;code.txt&apos;,&apos;w&apos;)</span><br><span class=\"line\">for i in range (200):</span><br><span class=\"line\">    Code = &apos;&apos;</span><br><span class=\"line\">    for j in range (16):</span><br><span class=\"line\">        Code += random.choice(list)</span><br><span class=\"line\">        if (j + 1) % 4 == 0 and j != 15:</span><br><span class=\"line\">            Code = Code + &apos;-&apos;</span><br><span class=\"line\">    r.lpush(&apos;Code&apos;, Code )</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"下载安装配置\"><a href=\"#下载安装配置\" class=\"headerlink\" title=\"下载安装配置\"></a>下载安装配置</h1><p>担心MYSQL开着会影响到redis 所以先检查和关闭mysql<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysql status</span><br><span class=\"line\">service mysql stop</span><br></pre></td></tr></table></figure></p>\n<p>然后下载redis 到官网下载也行 ， 用wget也行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://download.redis.io/releases/redis-4.0.10.tar.gz</span><br><span class=\"line\">tar -zxvf redis-4.0.10.tar.gz</span><br><span class=\"line\">cd redis-4.0.10</span><br><span class=\"line\">make test</span><br><span class=\"line\">cd src</span><br><span class=\"line\">make install</span><br><span class=\"line\">cd ..</span><br><span class=\"line\">mkdir etc</span><br><span class=\"line\">mkdir bin</span><br><span class=\"line\">mv redis.conf etc/</span><br><span class=\"line\">cd src</span><br><span class=\"line\">mv mkreleasehdr.sh  redis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server  redis-trib.rb ../bin</span><br><span class=\"line\">./redis-server</span><br></pre></td></tr></table></figure></p>\n<p>这时候会看到一些about<br>ctrl + c 出来，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd</span><br><span class=\"line\">./redis-c</span><br></pre></td></tr></table></figure></p>\n<p>这时候会报错<br>Could not connect to Redis at 127.0.0.1:6379: Connection refused<br>Could not connect to Redis at 127.0.0.1:6379: Connection refused<br>修改一下配置文件<br>具体目录find找一下<br>把daemonize配置项改为yes<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-server /home/edxuanlen/redis-4.0.10/etc/redis.conf</span><br><span class=\"line\">redis-cli</span><br></pre></td></tr></table></figure></p>\n<p>然后就可以连接了</p>\n<p>附录：配置信息<br>daemonize 如果需要在后台运行，把该项改为yes<br>pidfile 配置多个pid的地址 默认在/var/run/redis. pid<br>bind 绑定ip，设置后只接受来自该ip的请求<br>port 监听端口，默认是6379<br>loglevel 分为4个等级：debug verbose notice warning<br>logfile 用于配置log文件地址<br>databases 设置数据库个数，默认使用的数据库为0<br>save 设置redis进行数据库镜像的频率。<br>rdbcompression 在进行镜像备份时，是否进行压缩<br>dbfilename 镜像备份文件的文件名<br>Dir 数据库镜像备份的文件放置路径<br>Slaveof 设置数据库为其他数据库的从数据库<br>Masterauth 主数据库连接需要的密码验证<br>Requriepass 设置 登陆时需要使用密码<br>Maxclients 限制同时使用的客户数量<br>Maxmemory 设置redis能够使用的最大内存<br>Appendonly 开启append only模式<br>Appendfsync 设置对appendonly. aof文件同步的频率（对数据进行备份的第二种方式）<br>vm-enabled 是否开启虚拟内存支持 （vm开头的参数都是配置虚拟内存的）<br>vm-swap-file 设置虚拟内存的交换文件路径<br>vm-max-memory 设置redis使用的最大物理内存大小<br>vm-page-size 设置虚拟内存的页大小<br>vm-pages 设置交换文件的总的page数量<br>vm-max-threads 设置VM IO同时使用的线程数量<br>Glueoutputbuf 把小的输出缓存存放在一起<br>hash-max-zipmap-entries 设置hash的临界值<br>Activerehashing 重新hash</p>\n<h2 id=\"redis中的list\"><a href=\"#redis中的list\" class=\"headerlink\" title=\"redis中的list\"></a>redis中的list</h2><p>#题目：<br> 做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用生成激活码（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？ 将 0001 题生成的 200 个激活码（或者优惠券）保存到 Redis 非关系型数据库中。</p>\n<p><a href=\"http://www.runoob.com/redis/redis-lists.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/redis/redis-lists.html</a><br>使用LPUSH将数据插入到名为 Code的列表当中<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># coding : utf-8</span><br><span class=\"line\">import redis</span><br><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">r = redis.Redis(host=&apos;127.0.0.1&apos;,port=6379,db=0)</span><br><span class=\"line\">list = []</span><br><span class=\"line\">for i in range (65,91):</span><br><span class=\"line\">    list.append(str(chr(i)))</span><br><span class=\"line\">for i in range (97,123):</span><br><span class=\"line\">    list.append(str(chr(i)))</span><br><span class=\"line\">for i in range (10):</span><br><span class=\"line\">    list.append(str(i))</span><br><span class=\"line\"></span><br><span class=\"line\"># file = open(&apos;code.txt&apos;,&apos;w&apos;)</span><br><span class=\"line\">for i in range (200):</span><br><span class=\"line\">    Code = &apos;&apos;</span><br><span class=\"line\">    for j in range (16):</span><br><span class=\"line\">        Code += random.choice(list)</span><br><span class=\"line\">        if (j + 1) % 4 == 0 and j != 15:</span><br><span class=\"line\">            Code = Code + &apos;-&apos;</span><br><span class=\"line\">    r.lpush(&apos;Code&apos;, Code )</span><br></pre></td></tr></table></figure></p>\n"},{"title":"string 的使用","date":"2018-04-14T05:37:39.000Z","description":"string的处理","_content":"\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tchar a[101];\n\n\twhile(gets(a)){\n\t\tstring b=a;\n\t\tint i=0;\n\t\ttransform(b.begin(),b.end(),b.begin(),::tolower);\n\t\tif(!b.find(\"lovelive\"))\n\t\t\tprintf(\"yes\\n\");\n\t\telse\n\t\t\tprintf(\"no\\n\");\n\t}\n\treturn 0;\n}\n\n```\n","source":"_posts/string-的使用.md","raw":"---\ntitle: string 的使用\ndate: 2018-04-14 13:37:39\ntags:\tSTL\ncategories: C/C++\ndescription: string的处理\n---\n\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tchar a[101];\n\n\twhile(gets(a)){\n\t\tstring b=a;\n\t\tint i=0;\n\t\ttransform(b.begin(),b.end(),b.begin(),::tolower);\n\t\tif(!b.find(\"lovelive\"))\n\t\t\tprintf(\"yes\\n\");\n\t\telse\n\t\t\tprintf(\"no\\n\");\n\t}\n\treturn 0;\n}\n\n```\n","slug":"string-的使用","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbw001ka7s1pgsauraj","content":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> a[<span class=\"number\">101</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(gets(a))&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">string</span> b=a;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ttransform(b.begin(),b.end(),b.begin(),::<span class=\"built_in\">tolower</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!b.find(<span class=\"string\">\"lovelive\"</span>))</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"yes\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"no\\n\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> a[<span class=\"number\">101</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(gets(a))&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">string</span> b=a;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ttransform(b.begin(),b.end(),b.begin(),::<span class=\"built_in\">tolower</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!b.find(<span class=\"string\">\"lovelive\"</span>))</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"yes\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"no\\n\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"不要62","date":"2018-03-31T14:45:22.000Z","description":"简单的数位DP和打表解法。","_content":"\n[题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=2089)\n### 题意\n>**Problem Description**\n杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。\n杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。\n不吉利的数字为所有含有4或62的号码。例如：\n62315 73418 88914\n都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。\n你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。\n \n>**Input**\n输入的都是整数对n、m（0<n≤m<1000000），如果遇到都是0的整数对，则输入结束。\n \n>**Output**\n对于每个整数对，输出一个不含有不吉利数字的统计个数，该数值占一行位置。\n \n>**Sample Input**\n1 100\n0 0\n \n>**Sample Output**\n80\n\n#### 数位DP解法\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nlong long f[10][10];\nvoid getdp(){\n\tf[0][0]=1;  \n\t  \n\tfor(int i=1;i<10;i++){  \n\t\tfor(int j=0;j<10;j++){  \n\t\t\tif(j==4) f[i][j]=0;  \n\t\t\telse if(j==6) {  \n\t\t\t\tfor(int k=0;k<10;k++)  \n\t\t\t\t\tf[i][j]+=f[i-1][k];  \n\t\t\t\tf[i][j]-=f[i-1][2];  \n\t\t\t} \n\t\t\telse{  \n\t\t\tfor(int k=0;k<10;k++)  \n\t\t\t\tf[i][j]+=f[i-1][k];  \n\t\t\t}   \n\t  \t}  \n\t}  \n\tfor(int i=0;i<10;i++){\n\t\tfor(int j=0;j<10;j++) \n\t\t\tprintf(\"%8d \",f[i][j]);\n\t\tcout<<endl<<endl;\n\t}\n}\n  \nint a[10];  \nlong long  solve(int n){  \n\ta[0]=0;  \n\twhile(n){  \n\t\ta[++a[0]]=n%10;  \n\t\tn/=10; \n\t}  \n\ta[a[0]+1]=0;  \n\tlong long ans=0;  \n\tfor(int i=a[0];i>=1;i--){  \n\t\tfor(int j=0;j<a[i];j++)  \t\t\t\n\t\t\t//if(!(a[i+1]==6&&j==2))  \n\t\t\t\tans+=f[i][j]; \n\t\tcout<<i<<\" \"<<a[i]<<\":\"<<ans<<endl;\n\t\tif(a[i]==4)break;  \n\t\tif(a[i+1]==6&&a[i]==2) break;  \n\t}  \n\treturn ans;  \n}  \nint main(){  \n\tint n,m;  \n\tgetdp();  \n\twhile(scanf(\"%d %d\",&n,&m)==2&&(n||m)){  \n\t\tlong long k1=solve(m+1);  \n\t\tcout<<endl;\n\t\tlong long k2=solve(n);  \n\t\tprintf(\"%I64d\\n\",k1-k2);  \n\t}  \n}  \n```\n运行结果如下\n{% asset_img DP.png %}\n\n\n#### 打表\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1000000]={0}; \nint main() \n{ \n    int i,n,m,d=0; \n    for(i=1;i<1000000;++i) \n    { \n        if(i%10==4||i/10%10==4||i/100%10==4||i/1000%10==4||i/10000%10==4||i/100000%10==4)a[i]=a[i-1]; \n        else if(i%100==62||i/10%100==62||i/100%100==62||i/1000%100==62||i/10000%100==62)a[i]=a[i-1]; \n        else  a[i]=a[i-1]+1; \n    } \n    for(int i=0;i<600;i++){\n\t\tif(i%30==0)cout<<endl;\n    \tprintf(\"%3d \",a[i]);\n    }\n\tcout<<endl<<endl;\n    while(scanf(\"%d%d\",&n,&m)!=EOF&&n!=0||m!=0) \n        printf(\"%d\\n\",a[m]-a[n-1]); \n}  \n```\n运行结果如下\n{% asset_img 1.png %}\n\n\n通过输出两个不同解法的表 其实很容易看懂代码的意思。","source":"_posts/不要62.md","raw":"---\ntitle: 不要62\ndate: 2018-03-31 22:45:22\ntags:\n    - 动态规划\ncategories: C/C++\ndescription: 简单的数位DP和打表解法。\n---\n\n[题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=2089)\n### 题意\n>**Problem Description**\n杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。\n杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。\n不吉利的数字为所有含有4或62的号码。例如：\n62315 73418 88914\n都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。\n你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。\n \n>**Input**\n输入的都是整数对n、m（0<n≤m<1000000），如果遇到都是0的整数对，则输入结束。\n \n>**Output**\n对于每个整数对，输出一个不含有不吉利数字的统计个数，该数值占一行位置。\n \n>**Sample Input**\n1 100\n0 0\n \n>**Sample Output**\n80\n\n#### 数位DP解法\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nlong long f[10][10];\nvoid getdp(){\n\tf[0][0]=1;  \n\t  \n\tfor(int i=1;i<10;i++){  \n\t\tfor(int j=0;j<10;j++){  \n\t\t\tif(j==4) f[i][j]=0;  \n\t\t\telse if(j==6) {  \n\t\t\t\tfor(int k=0;k<10;k++)  \n\t\t\t\t\tf[i][j]+=f[i-1][k];  \n\t\t\t\tf[i][j]-=f[i-1][2];  \n\t\t\t} \n\t\t\telse{  \n\t\t\tfor(int k=0;k<10;k++)  \n\t\t\t\tf[i][j]+=f[i-1][k];  \n\t\t\t}   \n\t  \t}  \n\t}  \n\tfor(int i=0;i<10;i++){\n\t\tfor(int j=0;j<10;j++) \n\t\t\tprintf(\"%8d \",f[i][j]);\n\t\tcout<<endl<<endl;\n\t}\n}\n  \nint a[10];  \nlong long  solve(int n){  \n\ta[0]=0;  \n\twhile(n){  \n\t\ta[++a[0]]=n%10;  \n\t\tn/=10; \n\t}  \n\ta[a[0]+1]=0;  \n\tlong long ans=0;  \n\tfor(int i=a[0];i>=1;i--){  \n\t\tfor(int j=0;j<a[i];j++)  \t\t\t\n\t\t\t//if(!(a[i+1]==6&&j==2))  \n\t\t\t\tans+=f[i][j]; \n\t\tcout<<i<<\" \"<<a[i]<<\":\"<<ans<<endl;\n\t\tif(a[i]==4)break;  \n\t\tif(a[i+1]==6&&a[i]==2) break;  \n\t}  \n\treturn ans;  \n}  \nint main(){  \n\tint n,m;  \n\tgetdp();  \n\twhile(scanf(\"%d %d\",&n,&m)==2&&(n||m)){  \n\t\tlong long k1=solve(m+1);  \n\t\tcout<<endl;\n\t\tlong long k2=solve(n);  \n\t\tprintf(\"%I64d\\n\",k1-k2);  \n\t}  \n}  \n```\n运行结果如下\n{% asset_img DP.png %}\n\n\n#### 打表\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1000000]={0}; \nint main() \n{ \n    int i,n,m,d=0; \n    for(i=1;i<1000000;++i) \n    { \n        if(i%10==4||i/10%10==4||i/100%10==4||i/1000%10==4||i/10000%10==4||i/100000%10==4)a[i]=a[i-1]; \n        else if(i%100==62||i/10%100==62||i/100%100==62||i/1000%100==62||i/10000%100==62)a[i]=a[i-1]; \n        else  a[i]=a[i-1]+1; \n    } \n    for(int i=0;i<600;i++){\n\t\tif(i%30==0)cout<<endl;\n    \tprintf(\"%3d \",a[i]);\n    }\n\tcout<<endl<<endl;\n    while(scanf(\"%d%d\",&n,&m)!=EOF&&n!=0||m!=0) \n        printf(\"%d\\n\",a[m]-a[n-1]); \n}  \n```\n运行结果如下\n{% asset_img 1.png %}\n\n\n通过输出两个不同解法的表 其实很容易看懂代码的意思。","slug":"不要62","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbx001na7s1tfv4vwsd","content":"<p><a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=2089\" target=\"_blank\" rel=\"noopener\">题目链接</a></p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><blockquote>\n<p><strong>Problem Description</strong><br>杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。<br>杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。<br>不吉利的数字为所有含有4或62的号码。例如：<br>62315 73418 88914<br>都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。<br>你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。</p>\n</blockquote>\n<blockquote>\n<p><strong>Input</strong><br>输入的都是整数对n、m（0&lt;n≤m&lt;1000000），如果遇到都是0的整数对，则输入结束。</p>\n</blockquote>\n<blockquote>\n<p><strong>Output</strong><br>对于每个整数对，输出一个不含有不吉利数字的统计个数，该数值占一行位置。</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Input</strong><br>1 100<br>0 0</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Output</strong><br>80</p>\n</blockquote>\n<h4 id=\"数位DP解法\"><a href=\"#数位DP解法\" class=\"headerlink\" title=\"数位DP解法\"></a>数位DP解法</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> f[<span class=\"number\">10</span>][<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getdp</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tf[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=<span class=\"number\">1</span>;  </span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;  </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">10</span>;j++)&#123;  </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(j==<span class=\"number\">4</span>) f[i][j]=<span class=\"number\">0</span>;  </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j==<span class=\"number\">6</span>) &#123;  </span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">10</span>;k++)  </span><br><span class=\"line\">\t\t\t\t\tf[i][j]+=f[i<span class=\"number\">-1</span>][k];  </span><br><span class=\"line\">\t\t\t\tf[i][j]-=f[i<span class=\"number\">-1</span>][<span class=\"number\">2</span>];  </span><br><span class=\"line\">\t\t\t&#125; </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">10</span>;k++)  </span><br><span class=\"line\">\t\t\t\tf[i][j]+=f[i<span class=\"number\">-1</span>][k];  </span><br><span class=\"line\">\t\t\t&#125;   </span><br><span class=\"line\">\t  \t&#125;  </span><br><span class=\"line\">\t&#125;  </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">10</span>;j++) </span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%8d \"</span>,f[i][j]);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">10</span>];  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span>  <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;  </span><br><span class=\"line\">\ta[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;  </span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n)&#123;  </span><br><span class=\"line\">\t\ta[++a[<span class=\"number\">0</span>]]=n%<span class=\"number\">10</span>;  </span><br><span class=\"line\">\t\tn/=<span class=\"number\">10</span>; </span><br><span class=\"line\">\t&#125;  </span><br><span class=\"line\">\ta[a[<span class=\"number\">0</span>]+<span class=\"number\">1</span>]=<span class=\"number\">0</span>;  </span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans=<span class=\"number\">0</span>;  </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=a[<span class=\"number\">0</span>];i&gt;=<span class=\"number\">1</span>;i--)&#123;  </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;a[i];j++)  \t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//if(!(a[i+1]==6&amp;&amp;j==2))  </span></span><br><span class=\"line\">\t\t\t\tans+=f[i][j]; </span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\":\"</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i]==<span class=\"number\">4</span>)<span class=\"keyword\">break</span>;  </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i+<span class=\"number\">1</span>]==<span class=\"number\">6</span>&amp;&amp;a[i]==<span class=\"number\">2</span>) <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">\t&#125;  </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n,m;  </span><br><span class=\"line\">\tgetdp();  </span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d\"</span>,&amp;n,&amp;m)==<span class=\"number\">2</span>&amp;&amp;(n||m))&#123;  </span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> k1=solve(m+<span class=\"number\">1</span>);  </span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> k2=solve(n);  </span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%I64d\\n\"</span>,k1-k2);  </span><br><span class=\"line\">\t&#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下<br><img src=\"/2018/03/31/不要62/DP.png\"></p>\n<h4 id=\"打表\"><a href=\"#打表\" class=\"headerlink\" title=\"打表\"></a>打表</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">1000000</span>]=&#123;<span class=\"number\">0</span>&#125;; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">int</span> i,n,m,d=<span class=\"number\">0</span>; </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">1000000</span>;++i) </span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">10</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">100</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">1000</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">10000</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">100000</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>)a[i]=a[i<span class=\"number\">-1</span>]; </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i%<span class=\"number\">100</span>==<span class=\"number\">62</span>||i/<span class=\"number\">10</span>%<span class=\"number\">100</span>==<span class=\"number\">62</span>||i/<span class=\"number\">100</span>%<span class=\"number\">100</span>==<span class=\"number\">62</span>||i/<span class=\"number\">1000</span>%<span class=\"number\">100</span>==<span class=\"number\">62</span>||i/<span class=\"number\">10000</span>%<span class=\"number\">100</span>==<span class=\"number\">62</span>)a[i]=a[i<span class=\"number\">-1</span>]; </span><br><span class=\"line\">        <span class=\"keyword\">else</span>  a[i]=a[i<span class=\"number\">-1</span>]+<span class=\"number\">1</span>; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">600</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i%<span class=\"number\">30</span>==<span class=\"number\">0</span>)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    \t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%3d \"</span>,a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m)!=EOF&amp;&amp;n!=<span class=\"number\">0</span>||m!=<span class=\"number\">0</span>) </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,a[m]-a[n<span class=\"number\">-1</span>]); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下<br><img src=\"/2018/03/31/不要62/1.png\"></p>\n<p>通过输出两个不同解法的表 其实很容易看懂代码的意思。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://acm.hdu.edu.cn/showproblem.php?pid=2089\" target=\"_blank\" rel=\"noopener\">题目链接</a></p>\n<h3 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h3><blockquote>\n<p><strong>Problem Description</strong><br>杭州人称那些傻乎乎粘嗒嗒的人为62（音：laoer）。<br>杭州交通管理局经常会扩充一些的士车牌照，新近出来一个好消息，以后上牌照，不再含有不吉利的数字了，这样一来，就可以消除个别的士司机和乘客的心理障碍，更安全地服务大众。<br>不吉利的数字为所有含有4或62的号码。例如：<br>62315 73418 88914<br>都属于不吉利号码。但是，61152虽然含有6和2，但不是62连号，所以不属于不吉利数字之列。<br>你的任务是，对于每次给出的一个牌照区间号，推断出交管局今次又要实际上给多少辆新的士车上牌照了。</p>\n</blockquote>\n<blockquote>\n<p><strong>Input</strong><br>输入的都是整数对n、m（0&lt;n≤m&lt;1000000），如果遇到都是0的整数对，则输入结束。</p>\n</blockquote>\n<blockquote>\n<p><strong>Output</strong><br>对于每个整数对，输出一个不含有不吉利数字的统计个数，该数值占一行位置。</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Input</strong><br>1 100<br>0 0</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Output</strong><br>80</p>\n</blockquote>\n<h4 id=\"数位DP解法\"><a href=\"#数位DP解法\" class=\"headerlink\" title=\"数位DP解法\"></a>数位DP解法</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> f[<span class=\"number\">10</span>][<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getdp</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tf[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=<span class=\"number\">1</span>;  </span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;  </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">10</span>;j++)&#123;  </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(j==<span class=\"number\">4</span>) f[i][j]=<span class=\"number\">0</span>;  </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j==<span class=\"number\">6</span>) &#123;  </span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">10</span>;k++)  </span><br><span class=\"line\">\t\t\t\t\tf[i][j]+=f[i<span class=\"number\">-1</span>][k];  </span><br><span class=\"line\">\t\t\t\tf[i][j]-=f[i<span class=\"number\">-1</span>][<span class=\"number\">2</span>];  </span><br><span class=\"line\">\t\t\t&#125; </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;<span class=\"number\">10</span>;k++)  </span><br><span class=\"line\">\t\t\t\tf[i][j]+=f[i<span class=\"number\">-1</span>][k];  </span><br><span class=\"line\">\t\t\t&#125;   </span><br><span class=\"line\">\t  \t&#125;  </span><br><span class=\"line\">\t&#125;  </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">10</span>;j++) </span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%8d \"</span>,f[i][j]);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">10</span>];  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span>  <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;  </span><br><span class=\"line\">\ta[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;  </span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n)&#123;  </span><br><span class=\"line\">\t\ta[++a[<span class=\"number\">0</span>]]=n%<span class=\"number\">10</span>;  </span><br><span class=\"line\">\t\tn/=<span class=\"number\">10</span>; </span><br><span class=\"line\">\t&#125;  </span><br><span class=\"line\">\ta[a[<span class=\"number\">0</span>]+<span class=\"number\">1</span>]=<span class=\"number\">0</span>;  </span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ans=<span class=\"number\">0</span>;  </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=a[<span class=\"number\">0</span>];i&gt;=<span class=\"number\">1</span>;i--)&#123;  </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;a[i];j++)  \t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//if(!(a[i+1]==6&amp;&amp;j==2))  </span></span><br><span class=\"line\">\t\t\t\tans+=f[i][j]; </span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\":\"</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i]==<span class=\"number\">4</span>)<span class=\"keyword\">break</span>;  </span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i+<span class=\"number\">1</span>]==<span class=\"number\">6</span>&amp;&amp;a[i]==<span class=\"number\">2</span>) <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">\t&#125;  </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n,m;  </span><br><span class=\"line\">\tgetdp();  </span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d\"</span>,&amp;n,&amp;m)==<span class=\"number\">2</span>&amp;&amp;(n||m))&#123;  </span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> k1=solve(m+<span class=\"number\">1</span>);  </span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> k2=solve(n);  </span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%I64d\\n\"</span>,k1-k2);  </span><br><span class=\"line\">\t&#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下<br><img src=\"/2018/03/31/不要62/DP.png\"></p>\n<h4 id=\"打表\"><a href=\"#打表\" class=\"headerlink\" title=\"打表\"></a>打表</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">1000000</span>]=&#123;<span class=\"number\">0</span>&#125;; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">int</span> i,n,m,d=<span class=\"number\">0</span>; </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">1000000</span>;++i) </span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">10</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">100</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">1000</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">10000</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>||i/<span class=\"number\">100000</span>%<span class=\"number\">10</span>==<span class=\"number\">4</span>)a[i]=a[i<span class=\"number\">-1</span>]; </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i%<span class=\"number\">100</span>==<span class=\"number\">62</span>||i/<span class=\"number\">10</span>%<span class=\"number\">100</span>==<span class=\"number\">62</span>||i/<span class=\"number\">100</span>%<span class=\"number\">100</span>==<span class=\"number\">62</span>||i/<span class=\"number\">1000</span>%<span class=\"number\">100</span>==<span class=\"number\">62</span>||i/<span class=\"number\">10000</span>%<span class=\"number\">100</span>==<span class=\"number\">62</span>)a[i]=a[i<span class=\"number\">-1</span>]; </span><br><span class=\"line\">        <span class=\"keyword\">else</span>  a[i]=a[i<span class=\"number\">-1</span>]+<span class=\"number\">1</span>; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">600</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i%<span class=\"number\">30</span>==<span class=\"number\">0</span>)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    \t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%3d \"</span>,a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m)!=EOF&amp;&amp;n!=<span class=\"number\">0</span>||m!=<span class=\"number\">0</span>) </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,a[m]-a[n<span class=\"number\">-1</span>]); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下<br><img src=\"/2018/03/31/不要62/1.png\"></p>\n<p>通过输出两个不同解法的表 其实很容易看懂代码的意思。</p>\n"},{"title":"乘积尾零数目","date":"2018-04-05T17:20:00.000Z","description":null,"_content":"[原题链接](https://www.nowcoder.com/acm/contest/93/E)\n题目描述 \nwyh学长十分钟爱数字‘7’，他想知道每一个数字中有多少个数字‘7’\n\n输入描述:\n输入第一行一个整数T(1<=T<=10)\n接下来有T组测试数据，对于每组测试数据，输入一个整数n(1<=n<=10000000000)\n输出描述:\n对于每组测试数据，输出对应答案\n示例1\n输入\n2\n1234567\n123456\n输出\n1\n0\n\n\n**思路**\n这道题第一感觉就是求5和2最多组合个数，因为是从小到大递增，因子中2的个数一定永远比5的个数多所以就是求5的个数即可；\n一开始我是先求了5的个数，没多想，只除了5就输出，结果一直是WA的，后来才发现错在哪，5的n次方中因子会有n个5，比如25有两个5，125有三个5。。。\n所以就有了下面代码的思路，i<13是来自于我对数据范围100亿以内最大的5的n次方求解得到n最高为12；即5<sup>12</sup>(=244140625)<100亿<5<sup>13<sup>。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint main(){\n\tint n;\n\tint flag=0;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tll num;\n\t\tint sum=0;\n\t\tscanf(\"%lld\",&num);\n\t\tfor(int i=1;i<13;i++)\n\t\t\tsum+=num/pow(5,i);\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n```\n\n\nAC by..\\..njfu-edxuanlen","source":"_posts/乘积尾零数目.md","raw":"---\ntitle: 乘积尾零数目\ndate: 2018-04-06 01:20:00\ntags:\ncategories:\ndescription:\n---\n[原题链接](https://www.nowcoder.com/acm/contest/93/E)\n题目描述 \nwyh学长十分钟爱数字‘7’，他想知道每一个数字中有多少个数字‘7’\n\n输入描述:\n输入第一行一个整数T(1<=T<=10)\n接下来有T组测试数据，对于每组测试数据，输入一个整数n(1<=n<=10000000000)\n输出描述:\n对于每组测试数据，输出对应答案\n示例1\n输入\n2\n1234567\n123456\n输出\n1\n0\n\n\n**思路**\n这道题第一感觉就是求5和2最多组合个数，因为是从小到大递增，因子中2的个数一定永远比5的个数多所以就是求5的个数即可；\n一开始我是先求了5的个数，没多想，只除了5就输出，结果一直是WA的，后来才发现错在哪，5的n次方中因子会有n个5，比如25有两个5，125有三个5。。。\n所以就有了下面代码的思路，i<13是来自于我对数据范围100亿以内最大的5的n次方求解得到n最高为12；即5<sup>12</sup>(=244140625)<100亿<5<sup>13<sup>。\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint main(){\n\tint n;\n\tint flag=0;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tll num;\n\t\tint sum=0;\n\t\tscanf(\"%lld\",&num);\n\t\tfor(int i=1;i<13;i++)\n\t\t\tsum+=num/pow(5,i);\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n```\n\n\nAC by..\\..njfu-edxuanlen","slug":"乘积尾零数目","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hbz001sa7s1378p3kzt","content":"<p><a href=\"https://www.nowcoder.com/acm/contest/93/E\" target=\"_blank\" rel=\"noopener\">原题链接</a><br>题目描述<br>wyh学长十分钟爱数字‘7’，他想知道每一个数字中有多少个数字‘7’</p>\n<p>输入描述:<br>输入第一行一个整数T(1&lt;=T&lt;=10)<br>接下来有T组测试数据，对于每组测试数据，输入一个整数n(1&lt;=n&lt;=10000000000)<br>输出描述:<br>对于每组测试数据，输出对应答案<br>示例1<br>输入<br>2<br>1234567<br>123456<br>输出<br>1<br>0</p>\n<p><strong>思路</strong><br>这道题第一感觉就是求5和2最多组合个数，因为是从小到大递增，因子中2的个数一定永远比5的个数多所以就是求5的个数即可；<br>一开始我是先求了5的个数，没多想，只除了5就输出，结果一直是WA的，后来才发现错在哪，5的n次方中因子会有n个5，比如25有两个5，125有三个5。。。<br>所以就有了下面代码的思路，i&lt;13是来自于我对数据范围100亿以内最大的5的n次方求解得到n最高为12；即5<sup>12</sup>(=244140625)&lt;100亿&lt;5<sup>13<sup>。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">\t\tll num;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;num);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">13</span>;i++)</span><br><span class=\"line\">\t\t\tsum+=num/<span class=\"built_in\">pow</span>(<span class=\"number\">5</span>,i);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,sum);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></sup></sup></p>\n<p>AC by....njfu-edxuanlen</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.nowcoder.com/acm/contest/93/E\" target=\"_blank\" rel=\"noopener\">原题链接</a><br>题目描述<br>wyh学长十分钟爱数字‘7’，他想知道每一个数字中有多少个数字‘7’</p>\n<p>输入描述:<br>输入第一行一个整数T(1&lt;=T&lt;=10)<br>接下来有T组测试数据，对于每组测试数据，输入一个整数n(1&lt;=n&lt;=10000000000)<br>输出描述:<br>对于每组测试数据，输出对应答案<br>示例1<br>输入<br>2<br>1234567<br>123456<br>输出<br>1<br>0</p>\n<p><strong>思路</strong><br>这道题第一感觉就是求5和2最多组合个数，因为是从小到大递增，因子中2的个数一定永远比5的个数多所以就是求5的个数即可；<br>一开始我是先求了5的个数，没多想，只除了5就输出，结果一直是WA的，后来才发现错在哪，5的n次方中因子会有n个5，比如25有两个5，125有三个5。。。<br>所以就有了下面代码的思路，i&lt;13是来自于我对数据范围100亿以内最大的5的n次方求解得到n最高为12；即5<sup>12</sup>(=244140625)&lt;100亿&lt;5<sup>13<sup>。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">\t\tll num;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;num);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">13</span>;i++)</span><br><span class=\"line\">\t\t\tsum+=num/<span class=\"built_in\">pow</span>(<span class=\"number\">5</span>,i);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,sum);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></sup></sup></p>\n<p>AC by....njfu-edxuanlen</p>\n"},{"title":"全排列","date":"2018-03-30T05:18:06.000Z","description":"全排列的算法(含去重)。","_content":"\n### 递归解全排列\n思想如下\n{% asset_img 2.png %}\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[3]={'a','b','c'};\nint resove(int n){\n        if(n==3){\n            for(int i=0;i<3;i++)\n            \tcout<<a[i]; \n            cout<<endl;\n            return 0;\n        }\n        for(int i=n;i<3;i++){\n            swap(a[n],a[i]);\n            resove(n+1);\n            swap(a[n],a[i]);\n        }\n}\nint main(){\n    resove(0);\n    return 0;\n}\n```\n{% asset_img 1.png %}\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[3]={'a','b','a'};\nbool same(char *a,int n,int i){\n\tfor(int j=n;j<i;j++)\n\t\tif(a[j]==a[i])\n\t\t\treturn 1;\n\treturn 0;\n}\nint resove(int n){\n        if(n==3){\n            for(int i=0;i<3;i++)\n            \tcout<<a[i]; \n            cout<<endl;\n            return 0;\n        }\n        for(int i=n;i<3;i++){\n        \tif(!same(a,n,i)){\n        \t\tswap(a[n],a[i]);\n\t            resove(n+1);\n\t            swap(a[n],a[i]);\n\t\t\t}\n        }\n}\nint main(){\n    resove(0);\n    return 0;\n}\n```\n{% asset_img 3.png %}","source":"_posts/全排列.md","raw":"---\ntitle: 全排列\ndate: 2018-03-30 13:18:06\ntags: \n\t- DFS\n\t- 递归\ncategories: C/C++\ndescription: 全排列的算法(含去重)。\n---\n\n### 递归解全排列\n思想如下\n{% asset_img 2.png %}\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[3]={'a','b','c'};\nint resove(int n){\n        if(n==3){\n            for(int i=0;i<3;i++)\n            \tcout<<a[i]; \n            cout<<endl;\n            return 0;\n        }\n        for(int i=n;i<3;i++){\n            swap(a[n],a[i]);\n            resove(n+1);\n            swap(a[n],a[i]);\n        }\n}\nint main(){\n    resove(0);\n    return 0;\n}\n```\n{% asset_img 1.png %}\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[3]={'a','b','a'};\nbool same(char *a,int n,int i){\n\tfor(int j=n;j<i;j++)\n\t\tif(a[j]==a[i])\n\t\t\treturn 1;\n\treturn 0;\n}\nint resove(int n){\n        if(n==3){\n            for(int i=0;i<3;i++)\n            \tcout<<a[i]; \n            cout<<endl;\n            return 0;\n        }\n        for(int i=n;i<3;i++){\n        \tif(!same(a,n,i)){\n        \t\tswap(a[n],a[i]);\n\t            resove(n+1);\n\t            swap(a[n],a[i]);\n\t\t\t}\n        }\n}\nint main(){\n    resove(0);\n    return 0;\n}\n```\n{% asset_img 3.png %}","slug":"全排列","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hc0001va7s1o4ivre4j","content":"<h3 id=\"递归解全排列\"><a href=\"#递归解全排列\" class=\"headerlink\" title=\"递归解全排列\"></a>递归解全排列</h3><p>思想如下<br><img src=\"/2018/03/30/全排列/2.png\"><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">3</span>]=&#123;<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">resove</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)</span><br><span class=\"line\">            \t<span class=\"built_in\">cout</span>&lt;&lt;a[i]; </span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">            swap(a[n],a[i]);</span><br><span class=\"line\">            resove(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">            swap(a[n],a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    resove(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<img src=\"/2018/03/30/全排列/1.png\">\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">3</span>]=&#123;<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'a'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">same</span><span class=\"params\">(<span class=\"keyword\">char</span> *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=n;j&lt;i;j++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[j]==a[i])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">resove</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)</span><br><span class=\"line\">            \t<span class=\"built_in\">cout</span>&lt;&lt;a[i]; </span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">        \t<span class=\"keyword\">if</span>(!same(a,n,i))&#123;</span><br><span class=\"line\">        \t\tswap(a[n],a[i]);</span><br><span class=\"line\">\t            resove(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t            swap(a[n],a[i]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    resove(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/2018/03/30/全排列/3.png\">","site":{"data":{}},"excerpt":"","more":"<h3 id=\"递归解全排列\"><a href=\"#递归解全排列\" class=\"headerlink\" title=\"递归解全排列\"></a>递归解全排列</h3><p>思想如下<br><img src=\"/2018/03/30/全排列/2.png\"><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">3</span>]=&#123;<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">resove</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)</span><br><span class=\"line\">            \t<span class=\"built_in\">cout</span>&lt;&lt;a[i]; </span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">            swap(a[n],a[i]);</span><br><span class=\"line\">            resove(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">            swap(a[n],a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    resove(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<img src=\"/2018/03/30/全排列/1.png\">\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">3</span>]=&#123;<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'a'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">same</span><span class=\"params\">(<span class=\"keyword\">char</span> *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=n;j&lt;i;j++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[j]==a[i])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">resove</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)</span><br><span class=\"line\">            \t<span class=\"built_in\">cout</span>&lt;&lt;a[i]; </span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">        \t<span class=\"keyword\">if</span>(!same(a,n,i))&#123;</span><br><span class=\"line\">        \t\tswap(a[n],a[i]);</span><br><span class=\"line\">\t            resove(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t            swap(a[n],a[i]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    resove(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/2018/03/30/全排列/3.png\">"},{"title":"合并数字","date":"2018-03-30T01:34:20.000Z","description":"stack的使用。","_content":"\n**[题目链接!](https://nanti.jisuanke.com/t/25090)**\n题目如下：\n蒜头君得到了 n 个数，他想对这些数进行下面这样的操作，选出最左边的相邻的差的绝对值为 11 的两个数\n，只保留较小的数，删去较大的数，直到没有两个相邻的差的绝对值为 1的数，问最多可以进行多少次这样的操作？\n输入格式：\n输入第一行为一个整数 n(1≤n≤10<sup>5</sup>)，表示数字的总数。\n第二行为 n个整数 x<sub>1</sub>,x<sub>2</sub>,...,x<sub>n</sub>(0≤n≤10<sup>9</sup>)x，表示这些数。\n\n输出格式\n输出一行，为一个整数，表示蒜头君最多可以进行多少次这样的操作。\n样例输入\n4\n1 2 0 1\n样例输出\n3\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    int n,m;\n    scanf(\"%d\",&n);\n    stack<int>s;\n    for(int i=0;i<n;i++){\n    \tscanf(\"%d\",&m);\n    \twhile(!s.empty() && s.top()-m == 1)\n\t\t\ts.pop();\n    \tif(!s.empty() &&m-s.top()!=1||s.empty()) s.push(m);\n\t}\n\tprintf(\"%d\",n-s.size()); \n\treturn 0;\n}\n```\n输出结果:\n{% asset_img 1.png %}","source":"_posts/合并数字.md","raw":"---\ntitle: 合并数字\ndate: 2018-03-30 09:34:20\ntags: \n\t- C/C++题目\n\t- 栈\ncategories: C/C++\ndescription: stack的使用。\n---\n\n**[题目链接!](https://nanti.jisuanke.com/t/25090)**\n题目如下：\n蒜头君得到了 n 个数，他想对这些数进行下面这样的操作，选出最左边的相邻的差的绝对值为 11 的两个数\n，只保留较小的数，删去较大的数，直到没有两个相邻的差的绝对值为 1的数，问最多可以进行多少次这样的操作？\n输入格式：\n输入第一行为一个整数 n(1≤n≤10<sup>5</sup>)，表示数字的总数。\n第二行为 n个整数 x<sub>1</sub>,x<sub>2</sub>,...,x<sub>n</sub>(0≤n≤10<sup>9</sup>)x，表示这些数。\n\n输出格式\n输出一行，为一个整数，表示蒜头君最多可以进行多少次这样的操作。\n样例输入\n4\n1 2 0 1\n样例输出\n3\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    int n,m;\n    scanf(\"%d\",&n);\n    stack<int>s;\n    for(int i=0;i<n;i++){\n    \tscanf(\"%d\",&m);\n    \twhile(!s.empty() && s.top()-m == 1)\n\t\t\ts.pop();\n    \tif(!s.empty() &&m-s.top()!=1||s.empty()) s.push(m);\n\t}\n\tprintf(\"%d\",n-s.size()); \n\treturn 0;\n}\n```\n输出结果:\n{% asset_img 1.png %}","slug":"合并数字","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hc1001za7s1q45857mi","content":"<p><strong><a href=\"https://nanti.jisuanke.com/t/25090\" target=\"_blank\" rel=\"noopener\">题目链接!</a></strong><br>题目如下：<br>蒜头君得到了 n 个数，他想对这些数进行下面这样的操作，选出最左边的相邻的差的绝对值为 11 的两个数<br>，只保留较小的数，删去较大的数，直到没有两个相邻的差的绝对值为 1的数，问最多可以进行多少次这样的操作？<br>输入格式：<br>输入第一行为一个整数 n(1≤n≤10<sup>5</sup>)，表示数字的总数。<br>第二行为 n个整数 x<sub>1</sub>,x<sub>2</sub>,…,x<sub>n</sub>(0≤n≤10<sup>9</sup>)x，表示这些数。</p>\n<p>输出格式<br>输出一行，为一个整数，表示蒜头君最多可以进行多少次这样的操作。<br>样例输入<br>4<br>1 2 0 1<br>样例输出<br>3<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;s;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">    \t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">    \t<span class=\"keyword\">while</span>(!s.empty() &amp;&amp; s.top()-m == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\ts.pop();</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(!s.empty() &amp;&amp;m-s.top()!=<span class=\"number\">1</span>||s.empty()) s.push(m);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,n-s.size()); </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果:<br><img src=\"/2018/03/30/合并数字/1.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong><a href=\"https://nanti.jisuanke.com/t/25090\" target=\"_blank\" rel=\"noopener\">题目链接!</a></strong><br>题目如下：<br>蒜头君得到了 n 个数，他想对这些数进行下面这样的操作，选出最左边的相邻的差的绝对值为 11 的两个数<br>，只保留较小的数，删去较大的数，直到没有两个相邻的差的绝对值为 1的数，问最多可以进行多少次这样的操作？<br>输入格式：<br>输入第一行为一个整数 n(1≤n≤10<sup>5</sup>)，表示数字的总数。<br>第二行为 n个整数 x<sub>1</sub>,x<sub>2</sub>,…,x<sub>n</sub>(0≤n≤10<sup>9</sup>)x，表示这些数。</p>\n<p>输出格式<br>输出一行，为一个整数，表示蒜头君最多可以进行多少次这样的操作。<br>样例输入<br>4<br>1 2 0 1<br>样例输出<br>3<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;s;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">    \t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">    \t<span class=\"keyword\">while</span>(!s.empty() &amp;&amp; s.top()-m == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\ts.pop();</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(!s.empty() &amp;&amp;m-s.top()!=<span class=\"number\">1</span>||s.empty()) s.push(m);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,n-s.size()); </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果:<br><img src=\"/2018/03/30/合并数字/1.png\"></p>\n"},{"title":"最长公共子串LCS","date":"2018-03-27T00:36:12.000Z","description":"解决最长公共子序列（LCS）问题，即求字符串A，B的公共子序列LCS。","_content":"\n### 算法思路\n我们首先想到的肯定是暴力枚举法。\n先来看看：假设序列A有n 个元素，序列B有 m 个元素，那么A，B分别有2^n，2^m个子序列，\n如果任意两个子序列一一比较，比较的的子序列高达2^(m+n)对，这还没有算具体的复杂度。\n所以我们可以试试动态规划，把这个问题分解成子问题：\n求A的前i个元素和B的前j个元素之间的最长公共子序列长度。这时的空间复杂度为O(m+n)。\n**算法思想** \n1. 定义dp [i][j]：表示字符串序列A的前i个字符组成的序列Ax和字符串序列B的前j个字符组成\n的序列By之间的最长公共子序列L(i,j )的长度（m ，n分别为Ax和By的长度，i<=m,j<=n）\n2. 如果Ax [i] =By [j]，那么Ax与By之间的最长公共子序列L( i,j )的最后一项一定是这个元素，\n所以dp [i][j] = dp[i-1][j-1] + 1。\n3. 如果Ax[i] != By[j]，设LCS（i-1,j-1)是L( i -1, j-1 )的最后一个元素，\n或者L（i-1,j-1）是空序列，则 t!= Ax[i]和t!=By[j]至少有一个不成立。\n    (1). 当 LCS（i-1,j-1) != Ax[i] 时，dp[i][j]= dp[i-1][j]；\n    (2). 当 LCS（i-1,j-1) != By[j] 时，ap[i][j]= dp[i][j-1]；\n   所以dp[i][j]= max ( dp[i-1][j]，dp[i][j-1] )。\n4. 初始值为：dp[0][j] = dp[i][0] = 0.\n5. 题意要求求出任意一个最长公共子序列，这点要如何实现呢？\n   仍然考虑上面的递推式，L（i,j）的最后一个元素LCS( i，j )的来源有三种情况，定义数组flag[MAXN][MAXN]用以标记来的方向：\n   (1). dp[i][j] = dp[i-1][j-1] + 1，对应字符LCS( i-1,j-1)接上LCS( i,j)，flag[i][j] = 1,表示从斜向上左方来；\n   (2). dp[i][j] = dp[i-1][j]，对应字符LCS（i-1,j）接上LCS（i,j），flag[i][j] = 2,表示从/上方过来；\n   (3). dp[i][j] = dp[i][j-1]，对应字符LCS（I,j-1）接上LCS（i,j），flag[i][j] = 3,表示从左方过来。\n    **我们只要在计算dp[i][j]时根据来源进行不同的标记，回溯就可以找到一个最长公共子序列。**\n{% asset_img lcs.png LCS示意图 %}\n```C++\n#include<bits/stdc++.h>\nchar a[500],b[500];\nint lcs[501][501]; \t///记录中间结果的数组\nint flag[501][501];    ///标记数组，用于标识下标的走向，构造出公共子序列\nvoid LCS(){ ///动态规划求解\n    int i,j;\n    for(i=1;i<=strlen(a);i++)\n        for(j=1;j<=strlen(b);j++)\n            if(a[i-1]==b[j-1]){\n                lcs[i][j]=lcs[i-1][j-1]+1;\n                flag[i][j]=1;  ///斜向下标记\n            }\n            else if(lcs[i][j-1]>lcs[i-1][j]) {\n                lcs[i][j]=lcs[i][j-1];\n                flag[i][j]=2;  ///向右标记\n            }\n            else {\n                lcs[i][j]=lcs[i-1][j];\n                flag[i][j]=3;  ///向下标记\n            }\n}\nvoid getLCS(){///采用倒推方式求最长公共子序列\n    char res[500];\n    int i=strlen(a);\n    int j=strlen(b);\n    int k=0;    ///用于保存结果的数组标志位\n    while(i>0 && j>0){\n        if(flag[i][j]==1){     ///如果是斜向下标记\n            res[k]=a[--i];\n            k++;\n            j--;\n        }\n        else if(flag[i][j]==2)  ///如果是向右标记\n            j--;\n        else if(flag[i][j]==3)  ///如果是向下标记\n            i--;\n    }\n    for(i=k-1;i>=0;i--)\n        printf(\"%c\",res[i]);\n}\nint main(){\n    int i;\n    strcpy(a,\"ABCBDAB\");\n    strcpy(b,\"BDCABA\");\n    memset(lcs,0,sizeof(lcs));\n    memset(flag,0,sizeof(flag));\n    LCS();\n    printf(\"%d\\n\",lcs[strlen(a)][strlen(b)]);\n    getLCS();\n    return 0;\n}\n```\n运行结果:\n{% asset_img lcs1.png %}\n","source":"_posts/最长公共子串LCS.md","raw":"---\ntitle: 最长公共子串LCS\ndate: 2018-03-27 08:36:12\ntags: 动态规划\ncategories: C/C++\ndescription: 解决最长公共子序列（LCS）问题，即求字符串A，B的公共子序列LCS。\n---\n\n### 算法思路\n我们首先想到的肯定是暴力枚举法。\n先来看看：假设序列A有n 个元素，序列B有 m 个元素，那么A，B分别有2^n，2^m个子序列，\n如果任意两个子序列一一比较，比较的的子序列高达2^(m+n)对，这还没有算具体的复杂度。\n所以我们可以试试动态规划，把这个问题分解成子问题：\n求A的前i个元素和B的前j个元素之间的最长公共子序列长度。这时的空间复杂度为O(m+n)。\n**算法思想** \n1. 定义dp [i][j]：表示字符串序列A的前i个字符组成的序列Ax和字符串序列B的前j个字符组成\n的序列By之间的最长公共子序列L(i,j )的长度（m ，n分别为Ax和By的长度，i<=m,j<=n）\n2. 如果Ax [i] =By [j]，那么Ax与By之间的最长公共子序列L( i,j )的最后一项一定是这个元素，\n所以dp [i][j] = dp[i-1][j-1] + 1。\n3. 如果Ax[i] != By[j]，设LCS（i-1,j-1)是L( i -1, j-1 )的最后一个元素，\n或者L（i-1,j-1）是空序列，则 t!= Ax[i]和t!=By[j]至少有一个不成立。\n    (1). 当 LCS（i-1,j-1) != Ax[i] 时，dp[i][j]= dp[i-1][j]；\n    (2). 当 LCS（i-1,j-1) != By[j] 时，ap[i][j]= dp[i][j-1]；\n   所以dp[i][j]= max ( dp[i-1][j]，dp[i][j-1] )。\n4. 初始值为：dp[0][j] = dp[i][0] = 0.\n5. 题意要求求出任意一个最长公共子序列，这点要如何实现呢？\n   仍然考虑上面的递推式，L（i,j）的最后一个元素LCS( i，j )的来源有三种情况，定义数组flag[MAXN][MAXN]用以标记来的方向：\n   (1). dp[i][j] = dp[i-1][j-1] + 1，对应字符LCS( i-1,j-1)接上LCS( i,j)，flag[i][j] = 1,表示从斜向上左方来；\n   (2). dp[i][j] = dp[i-1][j]，对应字符LCS（i-1,j）接上LCS（i,j），flag[i][j] = 2,表示从/上方过来；\n   (3). dp[i][j] = dp[i][j-1]，对应字符LCS（I,j-1）接上LCS（i,j），flag[i][j] = 3,表示从左方过来。\n    **我们只要在计算dp[i][j]时根据来源进行不同的标记，回溯就可以找到一个最长公共子序列。**\n{% asset_img lcs.png LCS示意图 %}\n```C++\n#include<bits/stdc++.h>\nchar a[500],b[500];\nint lcs[501][501]; \t///记录中间结果的数组\nint flag[501][501];    ///标记数组，用于标识下标的走向，构造出公共子序列\nvoid LCS(){ ///动态规划求解\n    int i,j;\n    for(i=1;i<=strlen(a);i++)\n        for(j=1;j<=strlen(b);j++)\n            if(a[i-1]==b[j-1]){\n                lcs[i][j]=lcs[i-1][j-1]+1;\n                flag[i][j]=1;  ///斜向下标记\n            }\n            else if(lcs[i][j-1]>lcs[i-1][j]) {\n                lcs[i][j]=lcs[i][j-1];\n                flag[i][j]=2;  ///向右标记\n            }\n            else {\n                lcs[i][j]=lcs[i-1][j];\n                flag[i][j]=3;  ///向下标记\n            }\n}\nvoid getLCS(){///采用倒推方式求最长公共子序列\n    char res[500];\n    int i=strlen(a);\n    int j=strlen(b);\n    int k=0;    ///用于保存结果的数组标志位\n    while(i>0 && j>0){\n        if(flag[i][j]==1){     ///如果是斜向下标记\n            res[k]=a[--i];\n            k++;\n            j--;\n        }\n        else if(flag[i][j]==2)  ///如果是向右标记\n            j--;\n        else if(flag[i][j]==3)  ///如果是向下标记\n            i--;\n    }\n    for(i=k-1;i>=0;i--)\n        printf(\"%c\",res[i]);\n}\nint main(){\n    int i;\n    strcpy(a,\"ABCBDAB\");\n    strcpy(b,\"BDCABA\");\n    memset(lcs,0,sizeof(lcs));\n    memset(flag,0,sizeof(flag));\n    LCS();\n    printf(\"%d\\n\",lcs[strlen(a)][strlen(b)]);\n    getLCS();\n    return 0;\n}\n```\n运行结果:\n{% asset_img lcs1.png %}\n","slug":"最长公共子串LCS","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hc20022a7s112lx1scv","content":"<h3 id=\"算法思路\"><a href=\"#算法思路\" class=\"headerlink\" title=\"算法思路\"></a>算法思路</h3><p>我们首先想到的肯定是暴力枚举法。<br>先来看看：假设序列A有n 个元素，序列B有 m 个元素，那么A，B分别有2^n，2^m个子序列，<br>如果任意两个子序列一一比较，比较的的子序列高达2^(m+n)对，这还没有算具体的复杂度。<br>所以我们可以试试动态规划，把这个问题分解成子问题：<br>求A的前i个元素和B的前j个元素之间的最长公共子序列长度。这时的空间复杂度为O(m+n)。<br><strong>算法思想</strong> </p>\n<ol>\n<li>定义dp [i][j]：表示字符串序列A的前i个字符组成的序列Ax和字符串序列B的前j个字符组成<br>的序列By之间的最长公共子序列L(i,j )的长度（m ，n分别为Ax和By的长度，i&lt;=m,j&lt;=n）</li>\n<li>如果Ax [i] =By [j]，那么Ax与By之间的最长公共子序列L( i,j )的最后一项一定是这个元素，<br>所以dp [i][j] = dp[i-1][j-1] + 1。</li>\n<li>如果Ax[i] != By[j]，设LCS（i-1,j-1)是L( i -1, j-1 )的最后一个元素，<br>或者L（i-1,j-1）是空序列，则 t!= Ax[i]和t!=By[j]至少有一个不成立。<br> (1). 当 LCS（i-1,j-1) != Ax[i] 时，dp[i][j]= dp[i-1][j]；<br> (2). 当 LCS（i-1,j-1) != By[j] 时，ap[i][j]= dp[i][j-1]；<br>所以dp[i][j]= max ( dp[i-1][j]，dp[i][j-1] )。</li>\n<li>初始值为：dp[0][j] = dp[i][0] = 0.</li>\n<li>题意要求求出任意一个最长公共子序列，这点要如何实现呢？<br>仍然考虑上面的递推式，L（i,j）的最后一个元素LCS( i，j )的来源有三种情况，定义数组flag[MAXN][MAXN]用以标记来的方向：<br>(1). dp[i][j] = dp[i-1][j-1] + 1，对应字符LCS( i-1,j-1)接上LCS( i,j)，flag[i][j] = 1,表示从斜向上左方来；<br>(2). dp[i][j] = dp[i-1][j]，对应字符LCS（i-1,j）接上LCS（i,j），flag[i][j] = 2,表示从/上方过来；<br>(3). dp[i][j] = dp[i][j-1]，对应字符LCS（I,j-1）接上LCS（i,j），flag[i][j] = 3,表示从左方过来。<br> <strong>我们只要在计算dp[i][j]时根据来源进行不同的标记，回溯就可以找到一个最长公共子序列。</strong><img src=\"/2018/03/27/最长公共子串LCS/lcs.png\" title=\"LCS示意图\">\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">500</span>],b[<span class=\"number\">500</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> lcs[<span class=\"number\">501</span>][<span class=\"number\">501</span>]; \t<span class=\"comment\">///记录中间结果的数组</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> flag[<span class=\"number\">501</span>][<span class=\"number\">501</span>];    <span class=\"comment\">///标记数组，用于标识下标的走向，构造出公共子序列</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">LCS</span><span class=\"params\">()</span></span>&#123; <span class=\"comment\">///动态规划求解</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i,j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=<span class=\"built_in\">strlen</span>(a);i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=<span class=\"built_in\">strlen</span>(b);j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i<span class=\"number\">-1</span>]==b[j<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                lcs[i][j]=lcs[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">                flag[i][j]=<span class=\"number\">1</span>;  <span class=\"comment\">///斜向下标记</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(lcs[i][j<span class=\"number\">-1</span>]&gt;lcs[i<span class=\"number\">-1</span>][j]) &#123;</span><br><span class=\"line\">                lcs[i][j]=lcs[i][j<span class=\"number\">-1</span>];</span><br><span class=\"line\">                flag[i][j]=<span class=\"number\">2</span>;  <span class=\"comment\">///向右标记</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                lcs[i][j]=lcs[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">                flag[i][j]=<span class=\"number\">3</span>;  <span class=\"comment\">///向下标记</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getLCS</span><span class=\"params\">()</span></span>&#123;<span class=\"comment\">///采用倒推方式求最长公共子序列</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> res[<span class=\"number\">500</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"built_in\">strlen</span>(a);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j=<span class=\"built_in\">strlen</span>(b);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;    <span class=\"comment\">///用于保存结果的数组标志位</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&gt;<span class=\"number\">0</span> &amp;&amp; j&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag[i][j]==<span class=\"number\">1</span>)&#123;     <span class=\"comment\">///如果是斜向下标记</span></span><br><span class=\"line\">            res[k]=a[--i];</span><br><span class=\"line\">            k++;</span><br><span class=\"line\">            j--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag[i][j]==<span class=\"number\">2</span>)  <span class=\"comment\">///如果是向右标记</span></span><br><span class=\"line\">            j--;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag[i][j]==<span class=\"number\">3</span>)  <span class=\"comment\">///如果是向下标记</span></span><br><span class=\"line\">            i--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=k<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%c\"</span>,res[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(a,<span class=\"string\">\"ABCBDAB\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(b,<span class=\"string\">\"BDCABA\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(lcs,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(lcs));</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(flag,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(flag));</span><br><span class=\"line\">    LCS();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,lcs[<span class=\"built_in\">strlen</span>(a)][<span class=\"built_in\">strlen</span>(b)]);</span><br><span class=\"line\">    getLCS();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>运行结果:<br><img src=\"/2018/03/27/最长公共子串LCS/lcs1.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"算法思路\"><a href=\"#算法思路\" class=\"headerlink\" title=\"算法思路\"></a>算法思路</h3><p>我们首先想到的肯定是暴力枚举法。<br>先来看看：假设序列A有n 个元素，序列B有 m 个元素，那么A，B分别有2^n，2^m个子序列，<br>如果任意两个子序列一一比较，比较的的子序列高达2^(m+n)对，这还没有算具体的复杂度。<br>所以我们可以试试动态规划，把这个问题分解成子问题：<br>求A的前i个元素和B的前j个元素之间的最长公共子序列长度。这时的空间复杂度为O(m+n)。<br><strong>算法思想</strong> </p>\n<ol>\n<li>定义dp [i][j]：表示字符串序列A的前i个字符组成的序列Ax和字符串序列B的前j个字符组成<br>的序列By之间的最长公共子序列L(i,j )的长度（m ，n分别为Ax和By的长度，i&lt;=m,j&lt;=n）</li>\n<li>如果Ax [i] =By [j]，那么Ax与By之间的最长公共子序列L( i,j )的最后一项一定是这个元素，<br>所以dp [i][j] = dp[i-1][j-1] + 1。</li>\n<li>如果Ax[i] != By[j]，设LCS（i-1,j-1)是L( i -1, j-1 )的最后一个元素，<br>或者L（i-1,j-1）是空序列，则 t!= Ax[i]和t!=By[j]至少有一个不成立。<br> (1). 当 LCS（i-1,j-1) != Ax[i] 时，dp[i][j]= dp[i-1][j]；<br> (2). 当 LCS（i-1,j-1) != By[j] 时，ap[i][j]= dp[i][j-1]；<br>所以dp[i][j]= max ( dp[i-1][j]，dp[i][j-1] )。</li>\n<li>初始值为：dp[0][j] = dp[i][0] = 0.</li>\n<li>题意要求求出任意一个最长公共子序列，这点要如何实现呢？<br>仍然考虑上面的递推式，L（i,j）的最后一个元素LCS( i，j )的来源有三种情况，定义数组flag[MAXN][MAXN]用以标记来的方向：<br>(1). dp[i][j] = dp[i-1][j-1] + 1，对应字符LCS( i-1,j-1)接上LCS( i,j)，flag[i][j] = 1,表示从斜向上左方来；<br>(2). dp[i][j] = dp[i-1][j]，对应字符LCS（i-1,j）接上LCS（i,j），flag[i][j] = 2,表示从/上方过来；<br>(3). dp[i][j] = dp[i][j-1]，对应字符LCS（I,j-1）接上LCS（i,j），flag[i][j] = 3,表示从左方过来。<br> <strong>我们只要在计算dp[i][j]时根据来源进行不同的标记，回溯就可以找到一个最长公共子序列。</strong><img src=\"/2018/03/27/最长公共子串LCS/lcs.png\" title=\"LCS示意图\">\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">500</span>],b[<span class=\"number\">500</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> lcs[<span class=\"number\">501</span>][<span class=\"number\">501</span>]; \t<span class=\"comment\">///记录中间结果的数组</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> flag[<span class=\"number\">501</span>][<span class=\"number\">501</span>];    <span class=\"comment\">///标记数组，用于标识下标的走向，构造出公共子序列</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">LCS</span><span class=\"params\">()</span></span>&#123; <span class=\"comment\">///动态规划求解</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i,j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=<span class=\"built_in\">strlen</span>(a);i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=<span class=\"built_in\">strlen</span>(b);j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i<span class=\"number\">-1</span>]==b[j<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                lcs[i][j]=lcs[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]+<span class=\"number\">1</span>;</span><br><span class=\"line\">                flag[i][j]=<span class=\"number\">1</span>;  <span class=\"comment\">///斜向下标记</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(lcs[i][j<span class=\"number\">-1</span>]&gt;lcs[i<span class=\"number\">-1</span>][j]) &#123;</span><br><span class=\"line\">                lcs[i][j]=lcs[i][j<span class=\"number\">-1</span>];</span><br><span class=\"line\">                flag[i][j]=<span class=\"number\">2</span>;  <span class=\"comment\">///向右标记</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                lcs[i][j]=lcs[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">                flag[i][j]=<span class=\"number\">3</span>;  <span class=\"comment\">///向下标记</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getLCS</span><span class=\"params\">()</span></span>&#123;<span class=\"comment\">///采用倒推方式求最长公共子序列</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> res[<span class=\"number\">500</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"built_in\">strlen</span>(a);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> j=<span class=\"built_in\">strlen</span>(b);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;    <span class=\"comment\">///用于保存结果的数组标志位</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i&gt;<span class=\"number\">0</span> &amp;&amp; j&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag[i][j]==<span class=\"number\">1</span>)&#123;     <span class=\"comment\">///如果是斜向下标记</span></span><br><span class=\"line\">            res[k]=a[--i];</span><br><span class=\"line\">            k++;</span><br><span class=\"line\">            j--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag[i][j]==<span class=\"number\">2</span>)  <span class=\"comment\">///如果是向右标记</span></span><br><span class=\"line\">            j--;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag[i][j]==<span class=\"number\">3</span>)  <span class=\"comment\">///如果是向下标记</span></span><br><span class=\"line\">            i--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=k<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%c\"</span>,res[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(a,<span class=\"string\">\"ABCBDAB\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(b,<span class=\"string\">\"BDCABA\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(lcs,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(lcs));</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(flag,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(flag));</span><br><span class=\"line\">    LCS();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,lcs[<span class=\"built_in\">strlen</span>(a)][<span class=\"built_in\">strlen</span>(b)]);</span><br><span class=\"line\">    getLCS();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>运行结果:<br><img src=\"/2018/03/27/最长公共子串LCS/lcs1.png\"></p>\n"},{"title":"最长递增序列LIS(n^2和nlog2n)","date":"2018-03-26T16:33:00.000Z","description":"给出一个数列，找出其中最长的单调递增子序列。O(n<sup>2</sup>)和O(nlog<sub>2</sub>n)两种方法。","_content":"\n### 例题：\n>LIS是最长上升子序列。什么是最长上升子序列？ \n>就是给你一个序列，请你在其中求出一段最长严格上升的部分，它不一定要连续。\n>就像这样：2, 3, 4, 7 和 2, 3, 4, 6 \n>就是序列 2 5 3 4 1 7 6 的两个上升子序列，最长的长度是 4。\n\n### O(n<sup>2</sup>)的方法:\n对于每一个数，他都是在“可以接下去”的中，从前面的最优值+1转移而来。\n{% asset_img LIS.png LIS最优 %}\n代码示例如下：\n\n```C++\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint f[10000], b[10000];\nint lis(int n) {\n    memset(f, 0, sizeof f);\n    int res = 0;\n    for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < i; ++j)\n            if (b[j] < b[i]) {\n                f[i]=max(f[i],f[j]+1);\n        res = max(res, f[i]);\n    }\n    return res+1;\n}\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i) {\n        scanf(\"%d\", b + i);\n    }\n    printf(\"%d\\n\", lis(n));\n    return 0;\n}\n```\n\n### O(nlog<sub>2</sub>n)的方法:\n我们回想一下，在上面O(n<sup>2</sup>)的程序中，哪些地方看起来比较费时？\n没错，就是内层用于更新i的循环。因为每一次他都要查找一遍，效率并不高。\n回到题目，我们发现，他只要我们求长度，所以，我们可以模拟一个栈。\n所以每遇到一个比栈顶元素大的数，就放进栈里，遇到比栈顶元素小的就二分查找前边的元素，\n找到一个“最应该被换掉的元素”，用新数去更新前边的元素。\n这个算法不难证明也是正确的。因为前面每一次的枚举都换成了二分，\n内层的复杂度从n降到了log<sub>2</sub>n，外层不变。所以总的复杂度是O(nlog<sub>2</sub>n)。\nlis代码:\n\n```C++\nint lis(int n) {\n     f[0]=b[0];\n    int len=0;\n    for(int i=1;i<n;i++)\n    {\n        if(b[i]>f[len])\n            f[++len]=b[i];\n        else\n        {\n            int j=lower_bound(f,f+len,b[i])-f;\n            f[j]=b[i]; \n           // for(int k=0;k<len;k++)    \n           // \tprintf(\"%d \",f[k]);\n        }\n       // printf(\"\\n\");\n    }\n   return len+1;  \n}\n```\n注释的代码是为了更好的理解这个算法。\n\n\n\n\n","source":"_posts/最长递增序列LIS(n^2和nlog2n).md","raw":"---\ntitle: 最长递增序列LIS(n^2和nlog2n)\ndate: 2018-03-27 00:33:00\ntags: 动态规划\ncategories: C/C++\ndescription: 给出一个数列，找出其中最长的单调递增子序列。O(n<sup>2</sup>)和O(nlog<sub>2</sub>n)两种方法。\n---\n\n### 例题：\n>LIS是最长上升子序列。什么是最长上升子序列？ \n>就是给你一个序列，请你在其中求出一段最长严格上升的部分，它不一定要连续。\n>就像这样：2, 3, 4, 7 和 2, 3, 4, 6 \n>就是序列 2 5 3 4 1 7 6 的两个上升子序列，最长的长度是 4。\n\n### O(n<sup>2</sup>)的方法:\n对于每一个数，他都是在“可以接下去”的中，从前面的最优值+1转移而来。\n{% asset_img LIS.png LIS最优 %}\n代码示例如下：\n\n```C++\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint f[10000], b[10000];\nint lis(int n) {\n    memset(f, 0, sizeof f);\n    int res = 0;\n    for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < i; ++j)\n            if (b[j] < b[i]) {\n                f[i]=max(f[i],f[j]+1);\n        res = max(res, f[i]);\n    }\n    return res+1;\n}\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i) {\n        scanf(\"%d\", b + i);\n    }\n    printf(\"%d\\n\", lis(n));\n    return 0;\n}\n```\n\n### O(nlog<sub>2</sub>n)的方法:\n我们回想一下，在上面O(n<sup>2</sup>)的程序中，哪些地方看起来比较费时？\n没错，就是内层用于更新i的循环。因为每一次他都要查找一遍，效率并不高。\n回到题目，我们发现，他只要我们求长度，所以，我们可以模拟一个栈。\n所以每遇到一个比栈顶元素大的数，就放进栈里，遇到比栈顶元素小的就二分查找前边的元素，\n找到一个“最应该被换掉的元素”，用新数去更新前边的元素。\n这个算法不难证明也是正确的。因为前面每一次的枚举都换成了二分，\n内层的复杂度从n降到了log<sub>2</sub>n，外层不变。所以总的复杂度是O(nlog<sub>2</sub>n)。\nlis代码:\n\n```C++\nint lis(int n) {\n     f[0]=b[0];\n    int len=0;\n    for(int i=1;i<n;i++)\n    {\n        if(b[i]>f[len])\n            f[++len]=b[i];\n        else\n        {\n            int j=lower_bound(f,f+len,b[i])-f;\n            f[j]=b[i]; \n           // for(int k=0;k<len;k++)    \n           // \tprintf(\"%d \",f[k]);\n        }\n       // printf(\"\\n\");\n    }\n   return len+1;  \n}\n```\n注释的代码是为了更好的理解这个算法。\n\n\n\n\n","slug":"最长递增序列LIS(n^2和nlog2n)","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hc40026a7s1sxr37zjz","content":"<h3 id=\"例题：\"><a href=\"#例题：\" class=\"headerlink\" title=\"例题：\"></a>例题：</h3><blockquote>\n<p>LIS是最长上升子序列。什么是最长上升子序列？<br>就是给你一个序列，请你在其中求出一段最长严格上升的部分，它不一定要连续。<br>就像这样：2, 3, 4, 7 和 2, 3, 4, 6<br>就是序列 2 5 3 4 1 7 6 的两个上升子序列，最长的长度是 4。</p>\n</blockquote>\n<h3 id=\"O-n2-的方法\"><a href=\"#O-n2-的方法\" class=\"headerlink\" title=\"O(n2)的方法:\"></a>O(n<sup>2</sup>)的方法:</h3><p>对于每一个数，他都是在“可以接下去”的中，从前面的最优值+1转移而来。<br><img src=\"/2018/03/27/最长递增序列LIS(n%5E2和nlog2n)/LIS.png\" title=\"LIS最优\"><br>代码示例如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[<span class=\"number\">10000</span>], b[<span class=\"number\">10000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lis</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(f, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> f);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i; ++j)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (b[j] &lt; b[i]) &#123;</span><br><span class=\"line\">                f[i]=max(f[i],f[j]+<span class=\"number\">1</span>);</span><br><span class=\"line\">        res = max(res, f[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, b + i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, lis(n));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"O-nlog2n-的方法\"><a href=\"#O-nlog2n-的方法\" class=\"headerlink\" title=\"O(nlog2n)的方法:\"></a>O(nlog<sub>2</sub>n)的方法:</h3><p>我们回想一下，在上面O(n<sup>2</sup>)的程序中，哪些地方看起来比较费时？<br>没错，就是内层用于更新i的循环。因为每一次他都要查找一遍，效率并不高。<br>回到题目，我们发现，他只要我们求长度，所以，我们可以模拟一个栈。<br>所以每遇到一个比栈顶元素大的数，就放进栈里，遇到比栈顶元素小的就二分查找前边的元素，<br>找到一个“最应该被换掉的元素”，用新数去更新前边的元素。<br>这个算法不难证明也是正确的。因为前面每一次的枚举都换成了二分，<br>内层的复杂度从n降到了log<sub>2</sub>n，外层不变。所以总的复杂度是O(nlog<sub>2</sub>n)。<br>lis代码:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lis</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">     f[<span class=\"number\">0</span>]=b[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(b[i]&gt;f[len])</span><br><span class=\"line\">            f[++len]=b[i];</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> j=lower_bound(f,f+len,b[i])-f;</span><br><span class=\"line\">            f[j]=b[i]; </span><br><span class=\"line\">           <span class=\"comment\">// for(int k=0;k&lt;len;k++)    </span></span><br><span class=\"line\">           <span class=\"comment\">// \tprintf(\"%d \",f[k]);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">       <span class=\"comment\">// printf(\"\\n\");</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> len+<span class=\"number\">1</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注释的代码是为了更好的理解这个算法。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"例题：\"><a href=\"#例题：\" class=\"headerlink\" title=\"例题：\"></a>例题：</h3><blockquote>\n<p>LIS是最长上升子序列。什么是最长上升子序列？<br>就是给你一个序列，请你在其中求出一段最长严格上升的部分，它不一定要连续。<br>就像这样：2, 3, 4, 7 和 2, 3, 4, 6<br>就是序列 2 5 3 4 1 7 6 的两个上升子序列，最长的长度是 4。</p>\n</blockquote>\n<h3 id=\"O-n2-的方法\"><a href=\"#O-n2-的方法\" class=\"headerlink\" title=\"O(n2)的方法:\"></a>O(n<sup>2</sup>)的方法:</h3><p>对于每一个数，他都是在“可以接下去”的中，从前面的最优值+1转移而来。<br><img src=\"/2018/03/27/最长递增序列LIS(n%5E2和nlog2n)/LIS.png\" title=\"LIS最优\"><br>代码示例如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[<span class=\"number\">10000</span>], b[<span class=\"number\">10000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lis</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(f, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span> f);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i; ++j)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (b[j] &lt; b[i]) &#123;</span><br><span class=\"line\">                f[i]=max(f[i],f[j]+<span class=\"number\">1</span>);</span><br><span class=\"line\">        res = max(res, f[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, b + i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, lis(n));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"O-nlog2n-的方法\"><a href=\"#O-nlog2n-的方法\" class=\"headerlink\" title=\"O(nlog2n)的方法:\"></a>O(nlog<sub>2</sub>n)的方法:</h3><p>我们回想一下，在上面O(n<sup>2</sup>)的程序中，哪些地方看起来比较费时？<br>没错，就是内层用于更新i的循环。因为每一次他都要查找一遍，效率并不高。<br>回到题目，我们发现，他只要我们求长度，所以，我们可以模拟一个栈。<br>所以每遇到一个比栈顶元素大的数，就放进栈里，遇到比栈顶元素小的就二分查找前边的元素，<br>找到一个“最应该被换掉的元素”，用新数去更新前边的元素。<br>这个算法不难证明也是正确的。因为前面每一次的枚举都换成了二分，<br>内层的复杂度从n降到了log<sub>2</sub>n，外层不变。所以总的复杂度是O(nlog<sub>2</sub>n)。<br>lis代码:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lis</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">     f[<span class=\"number\">0</span>]=b[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(b[i]&gt;f[len])</span><br><span class=\"line\">            f[++len]=b[i];</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> j=lower_bound(f,f+len,b[i])-f;</span><br><span class=\"line\">            f[j]=b[i]; </span><br><span class=\"line\">           <span class=\"comment\">// for(int k=0;k&lt;len;k++)    </span></span><br><span class=\"line\">           <span class=\"comment\">// \tprintf(\"%d \",f[k]);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">       <span class=\"comment\">// printf(\"\\n\");</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> len+<span class=\"number\">1</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注释的代码是为了更好的理解这个算法。</p>\n"},{"title":"棋盘问题","date":"2018-03-31T12:17:15.000Z","description":"简单的深度搜索(DFS)问题：在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。","_content":"[原题链接](http://poj.org/problem?id=1321)\n### 题目内容\n>**Description**\n在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。\n<br>\n**Input**\n输入含有多组测试数据。 \n每组数据的第一行是两个正整数，n k，用一个空格隔开，表示了将在一个n*n的矩阵内描述棋盘，以及摆放棋子的数目。 n <= 8 , k <= n \n当为-1 -1时表示输入结束。 \n随后的n行描述了棋盘的形状：每行有n个字符，其中 # 表示棋盘区域， . 表示空白区域（数据保证不出现多余的空白行或者空白列）。 \n<br>\n**Output**\n对于每一组数据，给出一行输出，输出摆放的方案数目C （数据保证C<2^31）。\n\n>**Sample Input**\n<br>\n2 1\n\\#.\n.#\n4 4\n...#\n..#.\n.#..\n\\#.\\..\n-1 -1\n\n>**Sample Output**\n<br>\n2\n1\n\n题解:\n```C++\n#include<iostream>\n#include<stdio.h>\n#include<string.h>\nusing namespace std;\nint n,k,cnt;\nchar a[9][9];\nint vis[9]; \nvoid dfs(int r,int b){\n\tif(b==k)\n\t\tcnt++;\n\tfor(int i=r;i<n;i++)\n\t\tfor(int j=0;j<n;j++)\n                //判断是否在棋盘中且同列是否已经存在棋子\n                    if(a[i][j]=='#'&&!vis[j]){  \n                        vis[j]=1;    \n                        dfs(i+1,b+1);\n                        vis[j]=0;\n                    }\n}\nint main(){\n\twhile(scanf(\"%d %d\",&n,&k),n!=-1){\n\t\tmemset(a,0,sizeof(a));\n\t\tgetchar();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t\ta[i][j]=getchar();\n\t\t\tgetchar();\n\t\t}\n\t\tmemset(vis,0,sizeof(vis));\n\t\tcnt=0;\n\t\tdfs(0,0);\n\t\tcout<<cnt<<endl;\n\t}\n\treturn 0;\n}\n```\n\n已AC....by edxuanlen\n\n","source":"_posts/棋盘问题.md","raw":"---\ntitle: 棋盘问题\ndate: 2018-03-31 20:17:15\ntags: \n    - DFS\ncategories: C/C++\ndescription: 简单的深度搜索(DFS)问题：在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。\n---\n[原题链接](http://poj.org/problem?id=1321)\n### 题目内容\n>**Description**\n在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。\n<br>\n**Input**\n输入含有多组测试数据。 \n每组数据的第一行是两个正整数，n k，用一个空格隔开，表示了将在一个n*n的矩阵内描述棋盘，以及摆放棋子的数目。 n <= 8 , k <= n \n当为-1 -1时表示输入结束。 \n随后的n行描述了棋盘的形状：每行有n个字符，其中 # 表示棋盘区域， . 表示空白区域（数据保证不出现多余的空白行或者空白列）。 \n<br>\n**Output**\n对于每一组数据，给出一行输出，输出摆放的方案数目C （数据保证C<2^31）。\n\n>**Sample Input**\n<br>\n2 1\n\\#.\n.#\n4 4\n...#\n..#.\n.#..\n\\#.\\..\n-1 -1\n\n>**Sample Output**\n<br>\n2\n1\n\n题解:\n```C++\n#include<iostream>\n#include<stdio.h>\n#include<string.h>\nusing namespace std;\nint n,k,cnt;\nchar a[9][9];\nint vis[9]; \nvoid dfs(int r,int b){\n\tif(b==k)\n\t\tcnt++;\n\tfor(int i=r;i<n;i++)\n\t\tfor(int j=0;j<n;j++)\n                //判断是否在棋盘中且同列是否已经存在棋子\n                    if(a[i][j]=='#'&&!vis[j]){  \n                        vis[j]=1;    \n                        dfs(i+1,b+1);\n                        vis[j]=0;\n                    }\n}\nint main(){\n\twhile(scanf(\"%d %d\",&n,&k),n!=-1){\n\t\tmemset(a,0,sizeof(a));\n\t\tgetchar();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t\ta[i][j]=getchar();\n\t\t\tgetchar();\n\t\t}\n\t\tmemset(vis,0,sizeof(vis));\n\t\tcnt=0;\n\t\tdfs(0,0);\n\t\tcout<<cnt<<endl;\n\t}\n\treturn 0;\n}\n```\n\n已AC....by edxuanlen\n\n","slug":"棋盘问题","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hc50029a7s19x8gicvs","content":"<p><a href=\"http://poj.org/problem?id=1321\" target=\"_blank\" rel=\"noopener\">原题链接</a></p>\n<h3 id=\"题目内容\"><a href=\"#题目内容\" class=\"headerlink\" title=\"题目内容\"></a>题目内容</h3><blockquote>\n<p><strong>Description</strong><br>在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。<br><br><br><strong>Input</strong><br>输入含有多组测试数据。<br>每组数据的第一行是两个正整数，n k，用一个空格隔开，表示了将在一个n*n的矩阵内描述棋盘，以及摆放棋子的数目。 n &lt;= 8 , k &lt;= n<br>当为-1 -1时表示输入结束。<br>随后的n行描述了棋盘的形状：每行有n个字符，其中 # 表示棋盘区域， . 表示空白区域（数据保证不出现多余的空白行或者空白列）。<br><br><br><strong>Output</strong><br>对于每一组数据，给出一行输出，输出摆放的方案数目C （数据保证C&lt;2^31）。</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Input</strong><br><br><br>2 1<br>#.<br>.#<br>4 4<br>…#<br>..#.<br>.#..<br>#...<br>-1 -1</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Output</strong><br><br><br>2<br>1</p>\n</blockquote>\n<p>题解:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k,cnt;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> vis[<span class=\"number\">9</span>]; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(b==k)</span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=r;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)</span><br><span class=\"line\">                <span class=\"comment\">//判断是否在棋盘中且同列是否已经存在棋子</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[i][j]==<span class=\"string\">'#'</span>&amp;&amp;!vis[j])&#123;  </span><br><span class=\"line\">                        vis[j]=<span class=\"number\">1</span>;    </span><br><span class=\"line\">                        dfs(i+<span class=\"number\">1</span>,b+<span class=\"number\">1</span>);</span><br><span class=\"line\">                        vis[j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d\"</span>,&amp;n,&amp;k),n!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">\t\tgetchar();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)</span><br><span class=\"line\">\t\t\t\ta[i][j]=getchar();</span><br><span class=\"line\">\t\t\tgetchar();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">\t\tcnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tdfs(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;cnt&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>已AC….by edxuanlen</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://poj.org/problem?id=1321\" target=\"_blank\" rel=\"noopener\">原题链接</a></p>\n<h3 id=\"题目内容\"><a href=\"#题目内容\" class=\"headerlink\" title=\"题目内容\"></a>题目内容</h3><blockquote>\n<p><strong>Description</strong><br>在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。<br><br><br><strong>Input</strong><br>输入含有多组测试数据。<br>每组数据的第一行是两个正整数，n k，用一个空格隔开，表示了将在一个n*n的矩阵内描述棋盘，以及摆放棋子的数目。 n &lt;= 8 , k &lt;= n<br>当为-1 -1时表示输入结束。<br>随后的n行描述了棋盘的形状：每行有n个字符，其中 # 表示棋盘区域， . 表示空白区域（数据保证不出现多余的空白行或者空白列）。<br><br><br><strong>Output</strong><br>对于每一组数据，给出一行输出，输出摆放的方案数目C （数据保证C&lt;2^31）。</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Input</strong><br><br><br>2 1<br>#.<br>.#<br>4 4<br>…#<br>..#.<br>.#..<br>#...<br>-1 -1</p>\n</blockquote>\n<blockquote>\n<p><strong>Sample Output</strong><br><br><br>2<br>1</p>\n</blockquote>\n<p>题解:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k,cnt;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> vis[<span class=\"number\">9</span>]; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> r,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(b==k)</span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=r;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)</span><br><span class=\"line\">                <span class=\"comment\">//判断是否在棋盘中且同列是否已经存在棋子</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[i][j]==<span class=\"string\">'#'</span>&amp;&amp;!vis[j])&#123;  </span><br><span class=\"line\">                        vis[j]=<span class=\"number\">1</span>;    </span><br><span class=\"line\">                        dfs(i+<span class=\"number\">1</span>,b+<span class=\"number\">1</span>);</span><br><span class=\"line\">                        vis[j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d\"</span>,&amp;n,&amp;k),n!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">\t\tgetchar();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)</span><br><span class=\"line\">\t\t\t\ta[i][j]=getchar();</span><br><span class=\"line\">\t\t\tgetchar();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">\t\tcnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tdfs(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;cnt&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>已AC….by edxuanlen</p>\n"},{"title":"网站搭建","date":"2018-03-20T05:18:37.000Z","description":"某公司的官网搭建，对于一些网站建设的坑的一些解决办法。","_content":"\n\n# MySQL的坑\n\n1. 新版本安装无提示设 root 用户密码。\n\n```\nsudo mysql -u root --skip-password\nmysql > alter user 'root'@'localhost' identified by 'xxxxxxxxx'; // xx is new password\n```\n\n2. 忘了 root 密码\n先find mysql 的 .cnf 配置文件\n找到[mysqld] 的下一行写入\n\n```\nskip -grant -tables\nmysql\nmysql > alter ....\nmysql > flush privaileges;\n```\n记得要重启mysql服务\n\n\n# Apache2的坑\n\n1. 开多端口多路径\n\nports.conf 文件中添加 \"Listen + 端口号\"。\nsites-availabe/000-default-conf文件中添加如下代码\n```\n<VirtualHost *:61212>\n     ServerAdmin webmaster@localhost:61212\n     DocumentRoot /home/edxuanlen/Documents/ftp\n     ServerName localhost\n     ErrorLog ${APACHE_LOG_DIR}/error.log\n     CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n```\napache2.conf 文件中加入\n\n```\n<Directory /home/edxuanlen/Documents/ftp >\n\tOptions Indexes FollowSymLinks\n    AllowOverride None\n    Require all granted\n</Directory>\n```\n\nservice apache2 restart\n\n3. Phpstorm 的使用\n\n提示mysqli为定义类，其实是因为没有下载 php-mysql 这个文件\n```\napt-get install php-mysql\n```\n\n端口问题，一直无法通过浏览器显示。报cgi错误。\n```\napt-get install php7.2-cgi\n```\n4. Php 的使用\n\nphp-bcmath\nphp-mysqli\nlibapache2-mod-php7\n\n","source":"_posts/网站.md","raw":"---\ntitle: 网站搭建\ndate: 2018-03-20 13:18:37\ntags: 网站\ncategories: 网站\ndescription: 某公司的官网搭建，对于一些网站建设的坑的一些解决办法。\n\n---\n\n\n# MySQL的坑\n\n1. 新版本安装无提示设 root 用户密码。\n\n```\nsudo mysql -u root --skip-password\nmysql > alter user 'root'@'localhost' identified by 'xxxxxxxxx'; // xx is new password\n```\n\n2. 忘了 root 密码\n先find mysql 的 .cnf 配置文件\n找到[mysqld] 的下一行写入\n\n```\nskip -grant -tables\nmysql\nmysql > alter ....\nmysql > flush privaileges;\n```\n记得要重启mysql服务\n\n\n# Apache2的坑\n\n1. 开多端口多路径\n\nports.conf 文件中添加 \"Listen + 端口号\"。\nsites-availabe/000-default-conf文件中添加如下代码\n```\n<VirtualHost *:61212>\n     ServerAdmin webmaster@localhost:61212\n     DocumentRoot /home/edxuanlen/Documents/ftp\n     ServerName localhost\n     ErrorLog ${APACHE_LOG_DIR}/error.log\n     CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n```\napache2.conf 文件中加入\n\n```\n<Directory /home/edxuanlen/Documents/ftp >\n\tOptions Indexes FollowSymLinks\n    AllowOverride None\n    Require all granted\n</Directory>\n```\n\nservice apache2 restart\n\n3. Phpstorm 的使用\n\n提示mysqli为定义类，其实是因为没有下载 php-mysql 这个文件\n```\napt-get install php-mysql\n```\n\n端口问题，一直无法通过浏览器显示。报cgi错误。\n```\napt-get install php7.2-cgi\n```\n4. Php 的使用\n\nphp-bcmath\nphp-mysqli\nlibapache2-mod-php7\n\n","slug":"网站","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hc6002da7s1upglixj3","content":"<h1 id=\"MySQL的坑\"><a href=\"#MySQL的坑\" class=\"headerlink\" title=\"MySQL的坑\"></a>MySQL的坑</h1><ol>\n<li>新版本安装无提示设 root 用户密码。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mysql -u root --skip-password</span><br><span class=\"line\">mysql &gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;xxxxxxxxx&apos;; // xx is new password</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>忘了 root 密码<br>先find mysql 的 .cnf 配置文件<br>找到[mysqld] 的下一行写入</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip -grant -tables</span><br><span class=\"line\">mysql</span><br><span class=\"line\">mysql &gt; alter ....</span><br><span class=\"line\">mysql &gt; flush privaileges;</span><br></pre></td></tr></table></figure>\n<p>记得要重启mysql服务</p>\n<h1 id=\"Apache2的坑\"><a href=\"#Apache2的坑\" class=\"headerlink\" title=\"Apache2的坑\"></a>Apache2的坑</h1><ol>\n<li>开多端口多路径</li>\n</ol>\n<p>ports.conf 文件中添加 “Listen + 端口号”。<br>sites-availabe/000-default-conf文件中添加如下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:61212&gt;</span><br><span class=\"line\">     ServerAdmin webmaster@localhost:61212</span><br><span class=\"line\">     DocumentRoot /home/edxuanlen/Documents/ftp</span><br><span class=\"line\">     ServerName localhost</span><br><span class=\"line\">     ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log</span><br><span class=\"line\">     CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p>\n<p>apache2.conf 文件中加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Directory /home/edxuanlen/Documents/ftp &gt;</span><br><span class=\"line\">\tOptions Indexes FollowSymLinks</span><br><span class=\"line\">    AllowOverride None</span><br><span class=\"line\">    Require all granted</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>\n<p>service apache2 restart</p>\n<ol start=\"3\">\n<li>Phpstorm 的使用</li>\n</ol>\n<p>提示mysqli为定义类，其实是因为没有下载 php-mysql 这个文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install php-mysql</span><br></pre></td></tr></table></figure></p>\n<p>端口问题，一直无法通过浏览器显示。报cgi错误。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install php7.2-cgi</span><br></pre></td></tr></table></figure></p>\n<ol start=\"4\">\n<li>Php 的使用</li>\n</ol>\n<p>php-bcmath<br>php-mysqli<br>libapache2-mod-php7</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"MySQL的坑\"><a href=\"#MySQL的坑\" class=\"headerlink\" title=\"MySQL的坑\"></a>MySQL的坑</h1><ol>\n<li>新版本安装无提示设 root 用户密码。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mysql -u root --skip-password</span><br><span class=\"line\">mysql &gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;xxxxxxxxx&apos;; // xx is new password</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>忘了 root 密码<br>先find mysql 的 .cnf 配置文件<br>找到[mysqld] 的下一行写入</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip -grant -tables</span><br><span class=\"line\">mysql</span><br><span class=\"line\">mysql &gt; alter ....</span><br><span class=\"line\">mysql &gt; flush privaileges;</span><br></pre></td></tr></table></figure>\n<p>记得要重启mysql服务</p>\n<h1 id=\"Apache2的坑\"><a href=\"#Apache2的坑\" class=\"headerlink\" title=\"Apache2的坑\"></a>Apache2的坑</h1><ol>\n<li>开多端口多路径</li>\n</ol>\n<p>ports.conf 文件中添加 “Listen + 端口号”。<br>sites-availabe/000-default-conf文件中添加如下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:61212&gt;</span><br><span class=\"line\">     ServerAdmin webmaster@localhost:61212</span><br><span class=\"line\">     DocumentRoot /home/edxuanlen/Documents/ftp</span><br><span class=\"line\">     ServerName localhost</span><br><span class=\"line\">     ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log</span><br><span class=\"line\">     CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p>\n<p>apache2.conf 文件中加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Directory /home/edxuanlen/Documents/ftp &gt;</span><br><span class=\"line\">\tOptions Indexes FollowSymLinks</span><br><span class=\"line\">    AllowOverride None</span><br><span class=\"line\">    Require all granted</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>\n<p>service apache2 restart</p>\n<ol start=\"3\">\n<li>Phpstorm 的使用</li>\n</ol>\n<p>提示mysqli为定义类，其实是因为没有下载 php-mysql 这个文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install php-mysql</span><br></pre></td></tr></table></figure></p>\n<p>端口问题，一直无法通过浏览器显示。报cgi错误。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install php7.2-cgi</span><br></pre></td></tr></table></figure></p>\n<ol start=\"4\">\n<li>Php 的使用</li>\n</ol>\n<p>php-bcmath<br>php-mysqli<br>libapache2-mod-php7</p>\n"},{"title":"背包","date":"2018-03-20T05:18:37.000Z","description":"给定n种物品和一个容量为C的背包，物品i的重量是wi,其价值为vi。应该如何选择装入背包的物品，使得装入背包中的物品的总价值最大？","_content":"\n**题目大意**\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使价值总和最大。\n\n\n**状态转化方程  dp[i][j]=max[dp[i-1][j],a[i-1][j-w[i]]+v[i]]**\n\n### 一维解法\n```C++\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 5000*2+5;\nint f[maxn],n,m,w,v;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(f,0,sizeof f);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&w,&v);\n\t\tfor(int j=m;j>=w;j--)\n\t\t\tf[j]=max(f[j],f[j-w]+v);\n\t\tfor(int i=1;i<=m;i++)printf(\"%d \",f[i]);\n\t}\n\tprintf(\"%d\\n\",f[m]);\n\treturn 0;\n}\n```\n### 二维解法\n```C++\n#include<stdio.h>\n#include<iostream>\n#include<string.h>\nusing namespace std;\nint a[201][5001];\nint main()\n{\tint n,m,i,j;\n\tint w[201],v[201];\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(a,0,sizeof(a));\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&w[i],&v[i]);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t\tif(j>=w[i])\n\t\t\t\ta[i][j]=max(a[i-1][j],a[i-1][j-w[i]]+v[i]);\n\t\t\telse\n\t \t\t\ta[i][j]=a[i-1][j];\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tcout<<a[i][j]<<' ';\n\t\tcout<<endl;\n\t}\n\tprintf(\"%d\",a[i-1][j-1]);\n\treturn 0;\n}\n\n```","source":"_posts/背包.md","raw":"---\ntitle: 背包\ndate: 2018-03-20 13:18:37\ntags: 动态规划\ncategories: C/C++\ndescription: 给定n种物品和一个容量为C的背包，物品i的重量是wi,其价值为vi。应该如何选择装入背包的物品，使得装入背包中的物品的总价值最大？\n---\n\n**题目大意**\n有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使价值总和最大。\n\n\n**状态转化方程  dp[i][j]=max[dp[i-1][j],a[i-1][j-w[i]]+v[i]]**\n\n### 一维解法\n```C++\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 5000*2+5;\nint f[maxn],n,m,w,v;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(f,0,sizeof f);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&w,&v);\n\t\tfor(int j=m;j>=w;j--)\n\t\t\tf[j]=max(f[j],f[j-w]+v);\n\t\tfor(int i=1;i<=m;i++)printf(\"%d \",f[i]);\n\t}\n\tprintf(\"%d\\n\",f[m]);\n\treturn 0;\n}\n```\n### 二维解法\n```C++\n#include<stdio.h>\n#include<iostream>\n#include<string.h>\nusing namespace std;\nint a[201][5001];\nint main()\n{\tint n,m,i,j;\n\tint w[201],v[201];\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(a,0,sizeof(a));\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&w[i],&v[i]);\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=m;j++)\n\t\t\tif(j>=w[i])\n\t\t\t\ta[i][j]=max(a[i-1][j],a[i-1][j-w[i]]+v[i]);\n\t\t\telse\n\t \t\t\ta[i][j]=a[i-1][j];\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tcout<<a[i][j]<<' ';\n\t\tcout<<endl;\n\t}\n\tprintf(\"%d\",a[i-1][j-1]);\n\treturn 0;\n}\n\n```","slug":"背包","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hc7002ga7s1xixc4cn6","content":"<p><strong>题目大意</strong><br>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使价值总和最大。</p>\n<p><strong>状态转化方程  dp[i][j]=max[dp[i-1][j],a[i-1][j-w[i]]+v[i]]</strong></p>\n<h3 id=\"一维解法\"><a href=\"#一维解法\" class=\"headerlink\" title=\"一维解法\"></a>一维解法</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">5000</span>*<span class=\"number\">2</span>+<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[maxn],n,m,w,v;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(f,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> f);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;w,&amp;v);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=m;j&gt;=w;j--)</span><br><span class=\"line\">\t\t\tf[j]=max(f[j],f[j-w]+v);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,f[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,f[m]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二维解法\"><a href=\"#二维解法\" class=\"headerlink\" title=\"二维解法\"></a>二维解法</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">201</span>][<span class=\"number\">5001</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;\t<span class=\"keyword\">int</span> n,m,i,j;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> w[<span class=\"number\">201</span>],v[<span class=\"number\">201</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;w[i],&amp;v[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=m;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(j&gt;=w[i])</span><br><span class=\"line\">\t\t\t\ta[i][j]=max(a[i<span class=\"number\">-1</span>][j],a[i<span class=\"number\">-1</span>][j-w[i]]+v[i]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t \t\t\ta[i][j]=a[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;j++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;a[i][j]&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,a[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><strong>题目大意</strong><br>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。求解将哪些物品装入背包可使价值总和最大。</p>\n<p><strong>状态转化方程  dp[i][j]=max[dp[i-1][j],a[i-1][j-w[i]]+v[i]]</strong></p>\n<h3 id=\"一维解法\"><a href=\"#一维解法\" class=\"headerlink\" title=\"一维解法\"></a>一维解法</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">5000</span>*<span class=\"number\">2</span>+<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[maxn],n,m,w,v;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(f,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> f);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;w,&amp;v);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=m;j&gt;=w;j--)</span><br><span class=\"line\">\t\t\tf[j]=max(f[j],f[j-w]+v);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,f[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,f[m]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二维解法\"><a href=\"#二维解法\" class=\"headerlink\" title=\"二维解法\"></a>二维解法</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">201</span>][<span class=\"number\">5001</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;\t<span class=\"keyword\">int</span> n,m,i,j;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> w[<span class=\"number\">201</span>],v[<span class=\"number\">201</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;w[i],&amp;v[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=m;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(j&gt;=w[i])</span><br><span class=\"line\">\t\t\t\ta[i][j]=max(a[i<span class=\"number\">-1</span>][j],a[i<span class=\"number\">-1</span>][j-w[i]]+v[i]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t \t\t\ta[i][j]=a[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;j++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;a[i][j]&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,a[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"蓝桥杯试题集_入门训练","date":"2019-02-19T18:02:11.000Z","description":"入门。","_content":"\n\n[蓝桥杯入门训练](http://lx.lanqiao.cn/problemsets.page)\n\n## BEGIN 1:\n[A+B问题](http://lx.lanqiao.cn/problem.page?gpid=T1)\n### 问题描述\n```\n输入A、B，输出A+B。\n说明：在“问题描述”这部分，会给出试题的意思，以及所要求的目标。\n```\n**输入格式**\n```\n输入的第一行包括两个整数，由空格分隔，分别表示A、B。\n说明：“输入格式”是描述在测试你的程序时，所给的输入一定满足的格式。\n\n做题时你应该假设所给的输入是一定满足输入格式的要求的，所以你不需要对输入的格式进行检查。\n多余的格式检查可能会适得其反，使用你的程序错误。\n\n在测试的时候，系统会自动将输入数据输入到你的程序中，你不能给任何提示。比如，你在输入的时候提示“请输入A、B”之类的话是不需要的，这些多余的输出会使得你的程序被判定为错误。\n```\n**输出格式**\n```\n输出一行，包括一个整数，表示A+B的值。\n说明：“输出格式”是要求你的程序在输出结果的时候必须满足的格式。\n\n在输出时，你的程序必须满足这个格式的要求，不能少任何内容，也不能多任何内容。如果你的内容和输出格式要求的不一样，你的程序会被判断为错误，包括你输出了提示信息、中间调试信息、计时或者统计的信息等。\n```\n**样例输入**\n```\n12 45\n说明：“样例输入”给出了一组满足“输入格式”要求的输入的例子。\n\n这里给出的输入只是可能用来测试你的程序的一个输入，在测试的时候，还会有更多的输入用来测试你的程序。\n```\n**样例输出**\n```\n 57\n说明：“样例输出”给出了一组满足“输出格式”要求的输出的例子。\n\n样例输出中的结果是和样例输入中的是对应的，因此，你可以使用样例的输入输出简单的检查你的程序。\n\n要特别指出的是，能够通过样例输入输出的程序并不一定是正确的程序，在测试的时候，会用很多组数据进行测试，而不局限于样例数据。有可能一个程序通过了样例数据，但测试的时候仍只能得0分，可能因为这个程序只在一些类似样例的特例中正确，而不具有通用性，再测试更多数据时会出现错误。\n\n比如，对于本题，如果你写一个程序不管输入是什么都输入57，则样例数据是对的，但是测试其他数据，哪怕输入是1和2，这个程序也输出57，则对于其他数据这个程序都不正确。\n\n数据规模与约定\n-10000 <= A, B <= 10000。\n说明：“数据规模与约定”中给出了试题中主要参数的范围。\n\n这个范围对于解题非常重要，不同的数据范围会导致试题需要使用不同的解法来解决。比如本题中给的A、B范围不大，可以使用整型(int)来保存，如果范围更大，超过int的范围，则要考虑其他方法来保存大数。\n\n有一些范围在方便的时候是在“问题描述”中直接给的，所以在做题时不仅要看这个范围，还要注意问题描述。\n```\n### 问题分析\n略\n\n### AC代码\n**本题的C++源代码如下：**\n\n```C++\n#include <iostream>\n \nusing namespace std;\n \nint main()\n{\n    int a, b;\n    cin >> a >> b;\n    cout << a + b;\n    return 0;\n}\n```\n\n**本题的C源代码如下：**\n\n```C\n#include <stdio.h>\n \nint main()\n{\n    int a, b;\n    scanf(\"%d%d\", &a, &b);\n    printf(\"%d\", a+b);\n    return 0;\n}\n```\n\n**本题的Java源代码如下：**\n\n```JAVA\nimport java.util.*;\n \npublic class Main\n{\n    public static void main(String args[])\n    {\n        Scanner sc = new Scanner(System.in);\n        Integer a = sc.nextInt();\n        Integer b = sc.nextInt();\n        System.out.println(a + b);\n    }\n}\n```\n\n## BEGIN 2:\n[ 序列求和](http://lx.lanqiao.cn/problem.page?gpid=T2)\n### 问题描述\n```\n求1+2+3+...+n的值。\n输入包括一个整数n。\n\n```\n```\n样例输入\n\n```\n```\n样例输出\n\n```\n### 问题分析\n略\n\n### AC代码\n\n```C++\n#include <iostream>\n \nusing namespace std;\n \nint main()\n{\n    int a, b;\n    cin >> a >> b;\n    cout << a + b;\n    return 0;\n}\n```\n\n\n## BEGIN 2:\n[序列求和](http://lx.lanqiao.cn/problem.page?gpid=T2)\n### 问题描述\n```\n求1+2+3+...+n的值。\n```\n**输入格式**\n```\n输入包括一个整数n。\n```\n**输出格式**\n```\n输出一行，包括一个整数，表示1+2+3+...+n的值。\n```\n**样例输入**\n```\n4\n```\n**样例输出**\n```\n10\n```\n**样例输入**\n```\n100\n```\n**样例输出**\n```\n5050\n```\n**数据规模与约定**\n```\n1 <= n <= 1,000,000,000\n```\n### 问题分析\n数据范围比较大如果累加会超时如下代码:\n\n```C++\nwhile (n) ans += n --;\n```\n所以应该使用求和公式\n\n\n### AC代码\n```C++\n# include <stdio.h>\ntype long long ll;\nint main() {\n\tll n;\n\tscanf(\"%d\", &n);\n \tprintf(\"%I64d\", (1 + n) * n / 2);\n \treturn 0;\n}\n```\n\n## BEGIN 3:\n[圆的面积](http://lx.lanqiao.cn/problem.page?gpid=T3)\n### 问题描述\n```\n给定圆的半径r，求圆的面积。\n```\n**输入格式**\n```\n输入包含一个整数r，表示圆的半径。\n```\n**输出格式**\n\n```\n输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。\n\n说明：在本题中，输入是一个整数，但是输出是一个实数。\n对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。\n实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。\n```\n**样例输入**\n```\n4\n```\n**样例输出**\n```\n50.2654825\n```\n**数据规模与约定**\n```\n1 <= r <= 100000\n本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。\n```\n### 问题分析\n使用浮点数计算\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\ndouble PI=3.14159265358979323;\nint main(){\n\tint r;\n\tscanf (\"%d\", &r);\n\tprintf (\"%.7lf\", PI * r * r);\n\treturn 0;\n}\n```\n\n## BEGIN 4:\n[Fibonacci数列](http://lx.lanqiao.cn/problem.page?gpid=T4)\n### 问题描述\n```\nFibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。\n当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。\n```\n**输入格式**\n```\n输入包含一个整数n。\n```\n**输出格式**\n```\n输出一行，包含一个整数，表示Fn除以10007的余数。\n说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。\n```\n**样例输入**\n```\n10\n```\n**样例输出**\n```\n55\n```\n**样例输入**\n```\n22\n```\n**样例输出**\n```\n7704\n```\n**数据规模与约定**\n```\n1 <= n <= 1,000,000\n```\n### 问题分析\n略\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint MOD = 10007;\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tint a = 1, b = 1;\n\t\tif (n <= 2){  \t\t\t\t// n <= 2时都是1\n\t\t\tcout << \"1\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\twhile (-- n){\n\t\t\tswap(a, b);\n\t\t\tb = (a + b) % MOD;\n\t\t}\n\t\tcout << a << endl;\n\t}\n\treturn 0;\n}\n```\n\n","source":"_posts/蓝桥杯试题集-入门训练.md","raw":"---\ntitle: 蓝桥杯试题集_入门训练\ndate: 2019-02-20 02:02:11\ntags: 蓝桥杯\ncategories: C/C++\ndescription: 入门。\n---\n\n\n[蓝桥杯入门训练](http://lx.lanqiao.cn/problemsets.page)\n\n## BEGIN 1:\n[A+B问题](http://lx.lanqiao.cn/problem.page?gpid=T1)\n### 问题描述\n```\n输入A、B，输出A+B。\n说明：在“问题描述”这部分，会给出试题的意思，以及所要求的目标。\n```\n**输入格式**\n```\n输入的第一行包括两个整数，由空格分隔，分别表示A、B。\n说明：“输入格式”是描述在测试你的程序时，所给的输入一定满足的格式。\n\n做题时你应该假设所给的输入是一定满足输入格式的要求的，所以你不需要对输入的格式进行检查。\n多余的格式检查可能会适得其反，使用你的程序错误。\n\n在测试的时候，系统会自动将输入数据输入到你的程序中，你不能给任何提示。比如，你在输入的时候提示“请输入A、B”之类的话是不需要的，这些多余的输出会使得你的程序被判定为错误。\n```\n**输出格式**\n```\n输出一行，包括一个整数，表示A+B的值。\n说明：“输出格式”是要求你的程序在输出结果的时候必须满足的格式。\n\n在输出时，你的程序必须满足这个格式的要求，不能少任何内容，也不能多任何内容。如果你的内容和输出格式要求的不一样，你的程序会被判断为错误，包括你输出了提示信息、中间调试信息、计时或者统计的信息等。\n```\n**样例输入**\n```\n12 45\n说明：“样例输入”给出了一组满足“输入格式”要求的输入的例子。\n\n这里给出的输入只是可能用来测试你的程序的一个输入，在测试的时候，还会有更多的输入用来测试你的程序。\n```\n**样例输出**\n```\n 57\n说明：“样例输出”给出了一组满足“输出格式”要求的输出的例子。\n\n样例输出中的结果是和样例输入中的是对应的，因此，你可以使用样例的输入输出简单的检查你的程序。\n\n要特别指出的是，能够通过样例输入输出的程序并不一定是正确的程序，在测试的时候，会用很多组数据进行测试，而不局限于样例数据。有可能一个程序通过了样例数据，但测试的时候仍只能得0分，可能因为这个程序只在一些类似样例的特例中正确，而不具有通用性，再测试更多数据时会出现错误。\n\n比如，对于本题，如果你写一个程序不管输入是什么都输入57，则样例数据是对的，但是测试其他数据，哪怕输入是1和2，这个程序也输出57，则对于其他数据这个程序都不正确。\n\n数据规模与约定\n-10000 <= A, B <= 10000。\n说明：“数据规模与约定”中给出了试题中主要参数的范围。\n\n这个范围对于解题非常重要，不同的数据范围会导致试题需要使用不同的解法来解决。比如本题中给的A、B范围不大，可以使用整型(int)来保存，如果范围更大，超过int的范围，则要考虑其他方法来保存大数。\n\n有一些范围在方便的时候是在“问题描述”中直接给的，所以在做题时不仅要看这个范围，还要注意问题描述。\n```\n### 问题分析\n略\n\n### AC代码\n**本题的C++源代码如下：**\n\n```C++\n#include <iostream>\n \nusing namespace std;\n \nint main()\n{\n    int a, b;\n    cin >> a >> b;\n    cout << a + b;\n    return 0;\n}\n```\n\n**本题的C源代码如下：**\n\n```C\n#include <stdio.h>\n \nint main()\n{\n    int a, b;\n    scanf(\"%d%d\", &a, &b);\n    printf(\"%d\", a+b);\n    return 0;\n}\n```\n\n**本题的Java源代码如下：**\n\n```JAVA\nimport java.util.*;\n \npublic class Main\n{\n    public static void main(String args[])\n    {\n        Scanner sc = new Scanner(System.in);\n        Integer a = sc.nextInt();\n        Integer b = sc.nextInt();\n        System.out.println(a + b);\n    }\n}\n```\n\n## BEGIN 2:\n[ 序列求和](http://lx.lanqiao.cn/problem.page?gpid=T2)\n### 问题描述\n```\n求1+2+3+...+n的值。\n输入包括一个整数n。\n\n```\n```\n样例输入\n\n```\n```\n样例输出\n\n```\n### 问题分析\n略\n\n### AC代码\n\n```C++\n#include <iostream>\n \nusing namespace std;\n \nint main()\n{\n    int a, b;\n    cin >> a >> b;\n    cout << a + b;\n    return 0;\n}\n```\n\n\n## BEGIN 2:\n[序列求和](http://lx.lanqiao.cn/problem.page?gpid=T2)\n### 问题描述\n```\n求1+2+3+...+n的值。\n```\n**输入格式**\n```\n输入包括一个整数n。\n```\n**输出格式**\n```\n输出一行，包括一个整数，表示1+2+3+...+n的值。\n```\n**样例输入**\n```\n4\n```\n**样例输出**\n```\n10\n```\n**样例输入**\n```\n100\n```\n**样例输出**\n```\n5050\n```\n**数据规模与约定**\n```\n1 <= n <= 1,000,000,000\n```\n### 问题分析\n数据范围比较大如果累加会超时如下代码:\n\n```C++\nwhile (n) ans += n --;\n```\n所以应该使用求和公式\n\n\n### AC代码\n```C++\n# include <stdio.h>\ntype long long ll;\nint main() {\n\tll n;\n\tscanf(\"%d\", &n);\n \tprintf(\"%I64d\", (1 + n) * n / 2);\n \treturn 0;\n}\n```\n\n## BEGIN 3:\n[圆的面积](http://lx.lanqiao.cn/problem.page?gpid=T3)\n### 问题描述\n```\n给定圆的半径r，求圆的面积。\n```\n**输入格式**\n```\n输入包含一个整数r，表示圆的半径。\n```\n**输出格式**\n\n```\n输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。\n\n说明：在本题中，输入是一个整数，但是输出是一个实数。\n对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。\n实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。\n```\n**样例输入**\n```\n4\n```\n**样例输出**\n```\n50.2654825\n```\n**数据规模与约定**\n```\n1 <= r <= 100000\n本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。\n```\n### 问题分析\n使用浮点数计算\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\ndouble PI=3.14159265358979323;\nint main(){\n\tint r;\n\tscanf (\"%d\", &r);\n\tprintf (\"%.7lf\", PI * r * r);\n\treturn 0;\n}\n```\n\n## BEGIN 4:\n[Fibonacci数列](http://lx.lanqiao.cn/problem.page?gpid=T4)\n### 问题描述\n```\nFibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。\n当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。\n```\n**输入格式**\n```\n输入包含一个整数n。\n```\n**输出格式**\n```\n输出一行，包含一个整数，表示Fn除以10007的余数。\n说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。\n```\n**样例输入**\n```\n10\n```\n**样例输出**\n```\n55\n```\n**样例输入**\n```\n22\n```\n**样例输出**\n```\n7704\n```\n**数据规模与约定**\n```\n1 <= n <= 1,000,000\n```\n### 问题分析\n略\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint MOD = 10007;\nint main(){\n\tint n;\n\twhile (cin >> n){\n\t\tint a = 1, b = 1;\n\t\tif (n <= 2){  \t\t\t\t// n <= 2时都是1\n\t\t\tcout << \"1\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\twhile (-- n){\n\t\t\tswap(a, b);\n\t\t\tb = (a + b) % MOD;\n\t\t}\n\t\tcout << a << endl;\n\t}\n\treturn 0;\n}\n```\n\n","slug":"蓝桥杯试题集-入门训练","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hc8002ka7s1ij757v63","content":"<p><a href=\"http://lx.lanqiao.cn/problemsets.page\" target=\"_blank\" rel=\"noopener\">蓝桥杯入门训练</a></p>\n<h2 id=\"BEGIN-1\"><a href=\"#BEGIN-1\" class=\"headerlink\" title=\"BEGIN 1:\"></a>BEGIN 1:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T1\" target=\"_blank\" rel=\"noopener\">A+B问题</a></p>\n<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入A、B，输出A+B。</span><br><span class=\"line\">说明：在“问题描述”这部分，会给出试题的意思，以及所要求的目标。</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入的第一行包括两个整数，由空格分隔，分别表示A、B。</span><br><span class=\"line\">说明：“输入格式”是描述在测试你的程序时，所给的输入一定满足的格式。</span><br><span class=\"line\"></span><br><span class=\"line\">做题时你应该假设所给的输入是一定满足输入格式的要求的，所以你不需要对输入的格式进行检查。</span><br><span class=\"line\">多余的格式检查可能会适得其反，使用你的程序错误。</span><br><span class=\"line\"></span><br><span class=\"line\">在测试的时候，系统会自动将输入数据输入到你的程序中，你不能给任何提示。比如，你在输入的时候提示“请输入A、B”之类的话是不需要的，这些多余的输出会使得你的程序被判定为错误。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，包括一个整数，表示A+B的值。</span><br><span class=\"line\">说明：“输出格式”是要求你的程序在输出结果的时候必须满足的格式。</span><br><span class=\"line\"></span><br><span class=\"line\">在输出时，你的程序必须满足这个格式的要求，不能少任何内容，也不能多任何内容。如果你的内容和输出格式要求的不一样，你的程序会被判断为错误，包括你输出了提示信息、中间调试信息、计时或者统计的信息等。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12 45</span><br><span class=\"line\">说明：“样例输入”给出了一组满足“输入格式”要求的输入的例子。</span><br><span class=\"line\"></span><br><span class=\"line\">这里给出的输入只是可能用来测试你的程序的一个输入，在测试的时候，还会有更多的输入用来测试你的程序。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 57</span><br><span class=\"line\">说明：“样例输出”给出了一组满足“输出格式”要求的输出的例子。</span><br><span class=\"line\"></span><br><span class=\"line\">样例输出中的结果是和样例输入中的是对应的，因此，你可以使用样例的输入输出简单的检查你的程序。</span><br><span class=\"line\"></span><br><span class=\"line\">要特别指出的是，能够通过样例输入输出的程序并不一定是正确的程序，在测试的时候，会用很多组数据进行测试，而不局限于样例数据。有可能一个程序通过了样例数据，但测试的时候仍只能得0分，可能因为这个程序只在一些类似样例的特例中正确，而不具有通用性，再测试更多数据时会出现错误。</span><br><span class=\"line\"></span><br><span class=\"line\">比如，对于本题，如果你写一个程序不管输入是什么都输入57，则样例数据是对的，但是测试其他数据，哪怕输入是1和2，这个程序也输出57，则对于其他数据这个程序都不正确。</span><br><span class=\"line\"></span><br><span class=\"line\">数据规模与约定</span><br><span class=\"line\">-10000 &lt;= A, B &lt;= 10000。</span><br><span class=\"line\">说明：“数据规模与约定”中给出了试题中主要参数的范围。</span><br><span class=\"line\"></span><br><span class=\"line\">这个范围对于解题非常重要，不同的数据范围会导致试题需要使用不同的解法来解决。比如本题中给的A、B范围不大，可以使用整型(int)来保存，如果范围更大，超过int的范围，则要考虑其他方法来保存大数。</span><br><span class=\"line\"></span><br><span class=\"line\">有一些范围在方便的时候是在“问题描述”中直接给的，所以在做题时不仅要看这个范围，还要注意问题描述。</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>略</p>\n<h3 id=\"AC代码\"><a href=\"#AC代码\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><p><strong>本题的C++源代码如下：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a + b;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>本题的C源代码如下：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;a, &amp;b);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>, a+b);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>本题的Java源代码如下：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        Integer a = sc.nextInt();</span><br><span class=\"line\">        Integer b = sc.nextInt();</span><br><span class=\"line\">        System.out.println(a + b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-2\"><a href=\"#BEGIN-2\" class=\"headerlink\" title=\"BEGIN 2:\"></a>BEGIN 2:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T2\" target=\"_blank\" rel=\"noopener\"> 序列求和</a></p>\n<h3 id=\"问题描述-1\"><a href=\"#问题描述-1\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">求1+2+3+...+n的值。</span><br><span class=\"line\">输入包括一个整数n。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">样例输入</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">样例输出</span><br></pre></td></tr></table></figure>\n<h3 id=\"问题分析-1\"><a href=\"#问题分析-1\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>略</p>\n<h3 id=\"AC代码-1\"><a href=\"#AC代码-1\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a + b;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-2-1\"><a href=\"#BEGIN-2-1\" class=\"headerlink\" title=\"BEGIN 2:\"></a>BEGIN 2:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T2\" target=\"_blank\" rel=\"noopener\">序列求和</a></p>\n<h3 id=\"问题描述-2\"><a href=\"#问题描述-2\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">求1+2+3+...+n的值。</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包括一个整数n。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，包括一个整数，表示1+2+3+...+n的值。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5050</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= n &lt;= 1,000,000,000</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"问题分析-2\"><a href=\"#问题分析-2\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>数据范围比较大如果累加会超时如下代码:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (n) ans += n --;</span><br></pre></td></tr></table></figure>\n<p>所以应该使用求和公式</p>\n<h3 id=\"AC代码-2\"><a href=\"#AC代码-2\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\">type <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tll n;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\"> \t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%I64d\"</span>, (<span class=\"number\">1</span> + n) * n / <span class=\"number\">2</span>);</span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-3\"><a href=\"#BEGIN-3\" class=\"headerlink\" title=\"BEGIN 3:\"></a>BEGIN 3:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T3\" target=\"_blank\" rel=\"noopener\">圆的面积</a></p>\n<h3 id=\"问题描述-3\"><a href=\"#问题描述-3\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定圆的半径r，求圆的面积。</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个整数r，表示圆的半径。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。</span><br><span class=\"line\"></span><br><span class=\"line\">说明：在本题中，输入是一个整数，但是输出是一个实数。</span><br><span class=\"line\">对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。</span><br><span class=\"line\">实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。</span><br></pre></td></tr></table></figure>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">50.2654825</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= r &lt;= 100000</span><br><span class=\"line\">本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"问题分析-3\"><a href=\"#问题分析-3\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>使用浮点数计算</p>\n<h3 id=\"AC代码-3\"><a href=\"#AC代码-3\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">double</span> PI=<span class=\"number\">3.14159265358979323</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> r;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span> (<span class=\"string\">\"%d\"</span>, &amp;r);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> (<span class=\"string\">\"%.7lf\"</span>, PI * r * r);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-4\"><a href=\"#BEGIN-4\" class=\"headerlink\" title=\"BEGIN 4:\"></a>BEGIN 4:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T4\" target=\"_blank\" rel=\"noopener\">Fibonacci数列</a></p>\n<h3 id=\"问题描述-4\"><a href=\"#问题描述-4\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。</span><br><span class=\"line\">当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个整数n。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，包含一个整数，表示Fn除以10007的余数。</span><br><span class=\"line\">说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">55</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">22</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">7704</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= n &lt;= 1,000,000</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"问题分析-4\"><a href=\"#问题分析-4\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>略</p>\n<h3 id=\"AC代码-4\"><a href=\"#AC代码-4\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> MOD = <span class=\"number\">10007</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">cin</span> &gt;&gt; n)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">2</span>)&#123;  \t\t\t\t<span class=\"comment\">// n &lt;= 2时都是1</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"1\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (-- n)&#123;</span><br><span class=\"line\">\t\t\tswap(a, b);</span><br><span class=\"line\">\t\t\tb = (a + b) % MOD;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; a &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://lx.lanqiao.cn/problemsets.page\" target=\"_blank\" rel=\"noopener\">蓝桥杯入门训练</a></p>\n<h2 id=\"BEGIN-1\"><a href=\"#BEGIN-1\" class=\"headerlink\" title=\"BEGIN 1:\"></a>BEGIN 1:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T1\" target=\"_blank\" rel=\"noopener\">A+B问题</a></p>\n<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入A、B，输出A+B。</span><br><span class=\"line\">说明：在“问题描述”这部分，会给出试题的意思，以及所要求的目标。</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入的第一行包括两个整数，由空格分隔，分别表示A、B。</span><br><span class=\"line\">说明：“输入格式”是描述在测试你的程序时，所给的输入一定满足的格式。</span><br><span class=\"line\"></span><br><span class=\"line\">做题时你应该假设所给的输入是一定满足输入格式的要求的，所以你不需要对输入的格式进行检查。</span><br><span class=\"line\">多余的格式检查可能会适得其反，使用你的程序错误。</span><br><span class=\"line\"></span><br><span class=\"line\">在测试的时候，系统会自动将输入数据输入到你的程序中，你不能给任何提示。比如，你在输入的时候提示“请输入A、B”之类的话是不需要的，这些多余的输出会使得你的程序被判定为错误。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，包括一个整数，表示A+B的值。</span><br><span class=\"line\">说明：“输出格式”是要求你的程序在输出结果的时候必须满足的格式。</span><br><span class=\"line\"></span><br><span class=\"line\">在输出时，你的程序必须满足这个格式的要求，不能少任何内容，也不能多任何内容。如果你的内容和输出格式要求的不一样，你的程序会被判断为错误，包括你输出了提示信息、中间调试信息、计时或者统计的信息等。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12 45</span><br><span class=\"line\">说明：“样例输入”给出了一组满足“输入格式”要求的输入的例子。</span><br><span class=\"line\"></span><br><span class=\"line\">这里给出的输入只是可能用来测试你的程序的一个输入，在测试的时候，还会有更多的输入用来测试你的程序。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 57</span><br><span class=\"line\">说明：“样例输出”给出了一组满足“输出格式”要求的输出的例子。</span><br><span class=\"line\"></span><br><span class=\"line\">样例输出中的结果是和样例输入中的是对应的，因此，你可以使用样例的输入输出简单的检查你的程序。</span><br><span class=\"line\"></span><br><span class=\"line\">要特别指出的是，能够通过样例输入输出的程序并不一定是正确的程序，在测试的时候，会用很多组数据进行测试，而不局限于样例数据。有可能一个程序通过了样例数据，但测试的时候仍只能得0分，可能因为这个程序只在一些类似样例的特例中正确，而不具有通用性，再测试更多数据时会出现错误。</span><br><span class=\"line\"></span><br><span class=\"line\">比如，对于本题，如果你写一个程序不管输入是什么都输入57，则样例数据是对的，但是测试其他数据，哪怕输入是1和2，这个程序也输出57，则对于其他数据这个程序都不正确。</span><br><span class=\"line\"></span><br><span class=\"line\">数据规模与约定</span><br><span class=\"line\">-10000 &lt;= A, B &lt;= 10000。</span><br><span class=\"line\">说明：“数据规模与约定”中给出了试题中主要参数的范围。</span><br><span class=\"line\"></span><br><span class=\"line\">这个范围对于解题非常重要，不同的数据范围会导致试题需要使用不同的解法来解决。比如本题中给的A、B范围不大，可以使用整型(int)来保存，如果范围更大，超过int的范围，则要考虑其他方法来保存大数。</span><br><span class=\"line\"></span><br><span class=\"line\">有一些范围在方便的时候是在“问题描述”中直接给的，所以在做题时不仅要看这个范围，还要注意问题描述。</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>略</p>\n<h3 id=\"AC代码\"><a href=\"#AC代码\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><p><strong>本题的C++源代码如下：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a + b;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>本题的C源代码如下：</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;a, &amp;b);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>, a+b);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>本题的Java源代码如下：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        Integer a = sc.nextInt();</span><br><span class=\"line\">        Integer b = sc.nextInt();</span><br><span class=\"line\">        System.out.println(a + b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-2\"><a href=\"#BEGIN-2\" class=\"headerlink\" title=\"BEGIN 2:\"></a>BEGIN 2:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T2\" target=\"_blank\" rel=\"noopener\"> 序列求和</a></p>\n<h3 id=\"问题描述-1\"><a href=\"#问题描述-1\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">求1+2+3+...+n的值。</span><br><span class=\"line\">输入包括一个整数n。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">样例输入</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">样例输出</span><br></pre></td></tr></table></figure>\n<h3 id=\"问题分析-1\"><a href=\"#问题分析-1\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>略</p>\n<h3 id=\"AC代码-1\"><a href=\"#AC代码-1\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a + b;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-2-1\"><a href=\"#BEGIN-2-1\" class=\"headerlink\" title=\"BEGIN 2:\"></a>BEGIN 2:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T2\" target=\"_blank\" rel=\"noopener\">序列求和</a></p>\n<h3 id=\"问题描述-2\"><a href=\"#问题描述-2\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">求1+2+3+...+n的值。</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包括一个整数n。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，包括一个整数，表示1+2+3+...+n的值。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5050</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= n &lt;= 1,000,000,000</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"问题分析-2\"><a href=\"#问题分析-2\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>数据范围比较大如果累加会超时如下代码:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (n) ans += n --;</span><br></pre></td></tr></table></figure>\n<p>所以应该使用求和公式</p>\n<h3 id=\"AC代码-2\"><a href=\"#AC代码-2\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\">type <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tll n;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\"> \t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%I64d\"</span>, (<span class=\"number\">1</span> + n) * n / <span class=\"number\">2</span>);</span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-3\"><a href=\"#BEGIN-3\" class=\"headerlink\" title=\"BEGIN 3:\"></a>BEGIN 3:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T3\" target=\"_blank\" rel=\"noopener\">圆的面积</a></p>\n<h3 id=\"问题描述-3\"><a href=\"#问题描述-3\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定圆的半径r，求圆的面积。</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个整数r，表示圆的半径。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。</span><br><span class=\"line\"></span><br><span class=\"line\">说明：在本题中，输入是一个整数，但是输出是一个实数。</span><br><span class=\"line\">对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。</span><br><span class=\"line\">实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。</span><br></pre></td></tr></table></figure>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">50.2654825</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= r &lt;= 100000</span><br><span class=\"line\">本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"问题分析-3\"><a href=\"#问题分析-3\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>使用浮点数计算</p>\n<h3 id=\"AC代码-3\"><a href=\"#AC代码-3\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">double</span> PI=<span class=\"number\">3.14159265358979323</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> r;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span> (<span class=\"string\">\"%d\"</span>, &amp;r);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span> (<span class=\"string\">\"%.7lf\"</span>, PI * r * r);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-4\"><a href=\"#BEGIN-4\" class=\"headerlink\" title=\"BEGIN 4:\"></a>BEGIN 4:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?gpid=T4\" target=\"_blank\" rel=\"noopener\">Fibonacci数列</a></p>\n<h3 id=\"问题描述-4\"><a href=\"#问题描述-4\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。</span><br><span class=\"line\">当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个整数n。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，包含一个整数，表示Fn除以10007的余数。</span><br><span class=\"line\">说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">55</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">22</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">7704</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= n &lt;= 1,000,000</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"问题分析-4\"><a href=\"#问题分析-4\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>略</p>\n<h3 id=\"AC代码-4\"><a href=\"#AC代码-4\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> MOD = <span class=\"number\">10007</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">cin</span> &gt;&gt; n)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">2</span>)&#123;  \t\t\t\t<span class=\"comment\">// n &lt;= 2时都是1</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"1\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (-- n)&#123;</span><br><span class=\"line\">\t\t\tswap(a, b);</span><br><span class=\"line\">\t\t\tb = (a + b) % MOD;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; a &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"蓝桥杯试题集_历届试题","date":"2019-02-20T07:03:04.000Z","description":null,"_content":"","source":"_posts/蓝桥杯试题集-历届试题.md","raw":"---\ntitle: 蓝桥杯试题集_历届试题\ndate: 2019-02-20 15:03:04\ntags:\ncategories:\ndescription:\n---\n","slug":"蓝桥杯试题集-历届试题","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hca002na7s1tyxjre3z","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"蓝桥杯试题集_算法提高","date":"2019-02-20T07:16:59.000Z","description":null,"_content":"","source":"_posts/蓝桥杯试题集-算法提高.md","raw":"---\ntitle: 蓝桥杯试题集_算法提高\ndate: 2019-02-20 15:16:59\ntags:\ncategories:\ndescription:\n---\n","slug":"蓝桥杯试题集-算法提高","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hcb002pa7s1lkohhh45","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"蓝桥杯试题集_算法训练","date":"2019-02-20T07:17:07.000Z","description":null,"_content":"","source":"_posts/蓝桥杯试题集-算法训练.md","raw":"---\ntitle: 蓝桥杯试题集_算法训练\ndate: 2019-02-20 15:17:07\ntags:\ncategories:\ndescription:\n---\n","slug":"蓝桥杯试题集-算法训练","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hcd002ta7s1swz18p23","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"蓝桥杯试题集","date":"2019-02-20T07:17:12.000Z","description":"目录。","top":true,"_content":"\n[蓝桥杯试题集_入门训练](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83/)\n\n[蓝桥杯试题集_基础训练](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/)\n\n[蓝桥杯试题集_算法训练](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83/)\n\n[蓝桥杯试题集_算法提高](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/)\n\n[蓝桥杯试题集_历届试题](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%8E%86%E5%B1%8A%E8%AF%95%E9%A2%98/)\n\n\n","source":"_posts/蓝桥杯试题集.md","raw":"---\ntitle: 蓝桥杯试题集\ndate: 2019-02-20 15:17:12\ntags: 蓝桥杯\ncategories: C/C++\ndescription: 目录。\ntop: true\n---\n\n[蓝桥杯试题集_入门训练](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83/)\n\n[蓝桥杯试题集_基础训练](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/)\n\n[蓝桥杯试题集_算法训练](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83/)\n\n[蓝桥杯试题集_算法提高](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/)\n\n[蓝桥杯试题集_历届试题](https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%8E%86%E5%B1%8A%E8%AF%95%E9%A2%98/)\n\n\n","slug":"蓝桥杯试题集","published":1,"updated":"2019-09-22T08:59:42.022Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hce002va7s1p6ujpem2","content":"<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_入门训练</a></p>\n<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_基础训练</a></p>\n<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_算法训练</a></p>\n<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_算法提高</a></p>\n<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%8E%86%E5%B1%8A%E8%AF%95%E9%A2%98/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_历届试题</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_入门训练</a></p>\n<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_基础训练</a></p>\n<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_算法训练</a></p>\n<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_算法提高</a></p>\n<p><a href=\"https://edxuanlen.github.io/2019/02/20/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%AF%95%E9%A2%98%E9%9B%86-%E5%8E%86%E5%B1%8A%E8%AF%95%E9%A2%98/\" target=\"_blank\" rel=\"noopener\">蓝桥杯试题集_历届试题</a></p>\n"},{"title":"补蓝桥杯国赛","date":"2018-09-03T00:00:57.000Z","description":"第九届蓝桥杯复赛。","_content":"\n时间:2018年5月\n地点：首都经济贸易大学\n事件：第九届蓝桥杯国赛\n\n# 换零钞\nx星球的钞票的面额只有：100元，5元，2元，1元，共4种。\n小明去x星旅游，他手里只有2张100元的x星币，太不方便，恰好路过x星银行就去换零钱。\n小明有点强迫症，他坚持要求200元换出的零钞中2元的张数刚好是1元的张数的10倍，\n剩下的当然都是5元面额的。\n银行的工作人员有点为难，你能帮助算出：在满足小明要求的前提下，最少要换给他多少张钞票吗？\n（5元，2元，1元面额的必须都有，不能是0）\n\n## 分析\n这个题目手算都可以算出来，编程的话  也行， 像我懒得算直接写个循环给他跑一下就行了。\n\n## 题解\n\n```C++\n\n# include <bits/stdc++.h>\nusing namespace std;\nint main(){\n    int $1 , $2 , $5;\n    for ($1 = 5; $1 < 200; $1 = $1 + 5){\n        $2 = 10 * $1;\n        if((200 - $1 - $2 * 2) % 5 == 0){\n            $5 = (200 - $1 - $2 * 2) / 5;\n            break;\n        }\n    }\n    cout << $1 + $2 + $5 << endl;\n    return 0;\n}\n\n```\n\n答案 ：　74\n\n\n# 激光样式\nx星球的盛大节日为增加气氛，用30台机光器一字排开，向太空中打出光柱。\n安装调试的时候才发现，不知什么原因，相邻的两台激光器不能同时打开！\n国王很想知道，在目前这种bug存在的情况下，一共能打出多少种激光效果？\n显然，如果只有3台机器，一共可以成5种样式，即：\n全都关上（sorry, 此时无声胜有声，这也算一种）\n开一台，共3种\n开两台，只1种\n30台就不好算了，国王只好请你帮忙了。\n要求提交一个整数，表示30台激光器能形成的样式种数。\n\n## 分析\n这道题一开始拿上手，好的写个dfs\n完了，怎么写来着　\n写了两次，　不熟啊，　bfs比较熟，但怎么写。。。\n卡了好久，　要不先写后面的吧\n瞅了眼格雷码　。。　题目难度是有个梯度的吧　　\n哇，我不会卡在这么简单的第二题吧\n然后就开始列出数据找规律了(我也不知道我怎么就觉得会有规律)\n估计也是到了绝境\n\n好的，出来了　激动的一匹！\n｀｀｀\n台数　　　开的样式\n 1　　　　　2\n 2　　　　　3\n 3　　　　　5\n 4　　　　　8\n 5　　　　　13\n\n｀｀｀\n这是个什么？　　看着它总觉得特别亲切！　哈哈哈\n\n对的　就是个斐波那契数列。\n\n那就是求fib的第　(30 + 2) 项的值就行了 （因为一台是从第三项开始）\n\n## 题解\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\nint main(){\n    int a = 1, b = 1;\n    for (int i= 0; i < 30 ; i ++)\n        swap(a , b) , a = a + b;\n    cout << a << endl;\n    return 0;\n}\n```\n\n答案 ：2178309\n\n当然  dfs 也是可以的:\n```C++\n#include <iostream>\nusing namespace std;\nint cnt = 0;\nvoid dfs(int t,bool status){\n    if( t == 30){\n        cnt++;\n        return;\n    }\n    if(status==0){\n        dfs( t + 1 , 1);\n        dfs( t + 1 , 0);\n    }\n    else dfs( t + 1 , 0);\n}\nint main(){\n    dfs(0 , 0);\n    cout << cnt;\n    return 0;\n}\n\n```\n\n# 格雷码\n\n格雷码是以n位的二进制来表示数。\n与普通的二进制表示不同的是，它要求相邻两个数字只能有1个数位不同。\n首尾两个数字也要求只有1位之差。\n有很多算法来生成格雷码。以下是较常见的一种：\n从编码全0开始生成。\n当产生第奇数个数时，只把当前数字最末位改变（0变1，1变0）\n当产生第偶数个数时，先找到最右边的一个1，把它左边的数字改变。\n用这个规则产生的4位格雷码序列如下：\n0000\n0001\n0011\n0010\n0110\n0111\n0101\n0100\n1100\n1101\n1111\n1110\n1010\n1011\n1001\n1000\n以下是实现代码，仔细分析其中逻辑，并填写划线部分缺少的代码。\n\n```C++\n#include <stdio.h>  \nvoid show(int a,int n)  \n{  \n    int i;  \n    int msk = 1;  \n    for(i=0; i<n-1; i++) msk = msk << 1;  \n    for(i=0; i<n; i++){  \n        printf((a & msk)? \"1\" : \"0\");  \n        msk = msk >> 1;  \n    }  \n    printf(\"\\n\");  \n}   \n\nvoid f(int n)  \n{  \n    int i;  \n    int num = 1;  \n    for(i=0; i<n; i++) num = num<<1;  \n\n    int a = 0;  \n    for(i=0; i<num; i++){  \n        show(a,n);  \n\n        if(i%2==0){  \n            a = a ^ 1;  \n        }  \n        else{  \n            a = _________________________ ; //填空  \n        }  \n    }  \n}  \n\nint main()  \n{  \n    f(4);  \n    return 0;  \n}  \n```\n\n## 分析\n分析不来啊， 没见过 ， 直接上  ，  一个空 ， 我感觉得几行啊\n想想几行应该怎么合成一行呢 ， 三目运算！\n可是一个也不够用啊 ，  那就用几个呗\n23333  丧心病狂的我  就这样交了上去（还以为是对的，就是想让我们用三目运算符）\n见识短浅啊  后来问郭佬才知道是 lowbit（树状数组）的解法去解\n具体lowbit 是什么 ， 详见百度吧\nhttps://zh.wikipedia.org/wiki/树状数组\n```C++\nint lowbit(int x)\n{\n    return x&(-x);\n}\n```\n\n答案：a^((a&(-a))<<1)\n","source":"_posts/补蓝桥杯国赛.md","raw":"---\ntitle: 补蓝桥杯国赛\ndate: 2018-09-03 08:00:57\ntags:\n    - 经历\n    - C/C++题目\ncategories: C/C++\ndescription: 第九届蓝桥杯复赛。\n---\n\n时间:2018年5月\n地点：首都经济贸易大学\n事件：第九届蓝桥杯国赛\n\n# 换零钞\nx星球的钞票的面额只有：100元，5元，2元，1元，共4种。\n小明去x星旅游，他手里只有2张100元的x星币，太不方便，恰好路过x星银行就去换零钱。\n小明有点强迫症，他坚持要求200元换出的零钞中2元的张数刚好是1元的张数的10倍，\n剩下的当然都是5元面额的。\n银行的工作人员有点为难，你能帮助算出：在满足小明要求的前提下，最少要换给他多少张钞票吗？\n（5元，2元，1元面额的必须都有，不能是0）\n\n## 分析\n这个题目手算都可以算出来，编程的话  也行， 像我懒得算直接写个循环给他跑一下就行了。\n\n## 题解\n\n```C++\n\n# include <bits/stdc++.h>\nusing namespace std;\nint main(){\n    int $1 , $2 , $5;\n    for ($1 = 5; $1 < 200; $1 = $1 + 5){\n        $2 = 10 * $1;\n        if((200 - $1 - $2 * 2) % 5 == 0){\n            $5 = (200 - $1 - $2 * 2) / 5;\n            break;\n        }\n    }\n    cout << $1 + $2 + $5 << endl;\n    return 0;\n}\n\n```\n\n答案 ：　74\n\n\n# 激光样式\nx星球的盛大节日为增加气氛，用30台机光器一字排开，向太空中打出光柱。\n安装调试的时候才发现，不知什么原因，相邻的两台激光器不能同时打开！\n国王很想知道，在目前这种bug存在的情况下，一共能打出多少种激光效果？\n显然，如果只有3台机器，一共可以成5种样式，即：\n全都关上（sorry, 此时无声胜有声，这也算一种）\n开一台，共3种\n开两台，只1种\n30台就不好算了，国王只好请你帮忙了。\n要求提交一个整数，表示30台激光器能形成的样式种数。\n\n## 分析\n这道题一开始拿上手，好的写个dfs\n完了，怎么写来着　\n写了两次，　不熟啊，　bfs比较熟，但怎么写。。。\n卡了好久，　要不先写后面的吧\n瞅了眼格雷码　。。　题目难度是有个梯度的吧　　\n哇，我不会卡在这么简单的第二题吧\n然后就开始列出数据找规律了(我也不知道我怎么就觉得会有规律)\n估计也是到了绝境\n\n好的，出来了　激动的一匹！\n｀｀｀\n台数　　　开的样式\n 1　　　　　2\n 2　　　　　3\n 3　　　　　5\n 4　　　　　8\n 5　　　　　13\n\n｀｀｀\n这是个什么？　　看着它总觉得特别亲切！　哈哈哈\n\n对的　就是个斐波那契数列。\n\n那就是求fib的第　(30 + 2) 项的值就行了 （因为一台是从第三项开始）\n\n## 题解\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\nint main(){\n    int a = 1, b = 1;\n    for (int i= 0; i < 30 ; i ++)\n        swap(a , b) , a = a + b;\n    cout << a << endl;\n    return 0;\n}\n```\n\n答案 ：2178309\n\n当然  dfs 也是可以的:\n```C++\n#include <iostream>\nusing namespace std;\nint cnt = 0;\nvoid dfs(int t,bool status){\n    if( t == 30){\n        cnt++;\n        return;\n    }\n    if(status==0){\n        dfs( t + 1 , 1);\n        dfs( t + 1 , 0);\n    }\n    else dfs( t + 1 , 0);\n}\nint main(){\n    dfs(0 , 0);\n    cout << cnt;\n    return 0;\n}\n\n```\n\n# 格雷码\n\n格雷码是以n位的二进制来表示数。\n与普通的二进制表示不同的是，它要求相邻两个数字只能有1个数位不同。\n首尾两个数字也要求只有1位之差。\n有很多算法来生成格雷码。以下是较常见的一种：\n从编码全0开始生成。\n当产生第奇数个数时，只把当前数字最末位改变（0变1，1变0）\n当产生第偶数个数时，先找到最右边的一个1，把它左边的数字改变。\n用这个规则产生的4位格雷码序列如下：\n0000\n0001\n0011\n0010\n0110\n0111\n0101\n0100\n1100\n1101\n1111\n1110\n1010\n1011\n1001\n1000\n以下是实现代码，仔细分析其中逻辑，并填写划线部分缺少的代码。\n\n```C++\n#include <stdio.h>  \nvoid show(int a,int n)  \n{  \n    int i;  \n    int msk = 1;  \n    for(i=0; i<n-1; i++) msk = msk << 1;  \n    for(i=0; i<n; i++){  \n        printf((a & msk)? \"1\" : \"0\");  \n        msk = msk >> 1;  \n    }  \n    printf(\"\\n\");  \n}   \n\nvoid f(int n)  \n{  \n    int i;  \n    int num = 1;  \n    for(i=0; i<n; i++) num = num<<1;  \n\n    int a = 0;  \n    for(i=0; i<num; i++){  \n        show(a,n);  \n\n        if(i%2==0){  \n            a = a ^ 1;  \n        }  \n        else{  \n            a = _________________________ ; //填空  \n        }  \n    }  \n}  \n\nint main()  \n{  \n    f(4);  \n    return 0;  \n}  \n```\n\n## 分析\n分析不来啊， 没见过 ， 直接上  ，  一个空 ， 我感觉得几行啊\n想想几行应该怎么合成一行呢 ， 三目运算！\n可是一个也不够用啊 ，  那就用几个呗\n23333  丧心病狂的我  就这样交了上去（还以为是对的，就是想让我们用三目运算符）\n见识短浅啊  后来问郭佬才知道是 lowbit（树状数组）的解法去解\n具体lowbit 是什么 ， 详见百度吧\nhttps://zh.wikipedia.org/wiki/树状数组\n```C++\nint lowbit(int x)\n{\n    return x&(-x);\n}\n```\n\n答案：a^((a&(-a))<<1)\n","slug":"补蓝桥杯国赛","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hcf002ya7s182joorr3","content":"<p>时间:2018年5月<br>地点：首都经济贸易大学<br>事件：第九届蓝桥杯国赛</p>\n<h1 id=\"换零钞\"><a href=\"#换零钞\" class=\"headerlink\" title=\"换零钞\"></a>换零钞</h1><p>x星球的钞票的面额只有：100元，5元，2元，1元，共4种。<br>小明去x星旅游，他手里只有2张100元的x星币，太不方便，恰好路过x星银行就去换零钱。<br>小明有点强迫症，他坚持要求200元换出的零钞中2元的张数刚好是1元的张数的10倍，<br>剩下的当然都是5元面额的。<br>银行的工作人员有点为难，你能帮助算出：在满足小明要求的前提下，最少要换给他多少张钞票吗？<br>（5元，2元，1元面额的必须都有，不能是0）</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这个题目手算都可以算出来，编程的话  也行， 像我懒得算直接写个循环给他跑一下就行了。</p>\n<h2 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> $<span class=\"number\">1</span> , $<span class=\"number\">2</span> , $<span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($<span class=\"number\">1</span> = <span class=\"number\">5</span>; $<span class=\"number\">1</span> &lt; <span class=\"number\">200</span>; $<span class=\"number\">1</span> = $<span class=\"number\">1</span> + <span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">        $<span class=\"number\">2</span> = <span class=\"number\">10</span> * $<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((<span class=\"number\">200</span> - $<span class=\"number\">1</span> - $<span class=\"number\">2</span> * <span class=\"number\">2</span>) % <span class=\"number\">5</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            $<span class=\"number\">5</span> = (<span class=\"number\">200</span> - $<span class=\"number\">1</span> - $<span class=\"number\">2</span> * <span class=\"number\">2</span>) / <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; $<span class=\"number\">1</span> + $<span class=\"number\">2</span> + $<span class=\"number\">5</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>答案 ：　74</p>\n<h1 id=\"激光样式\"><a href=\"#激光样式\" class=\"headerlink\" title=\"激光样式\"></a>激光样式</h1><p>x星球的盛大节日为增加气氛，用30台机光器一字排开，向太空中打出光柱。<br>安装调试的时候才发现，不知什么原因，相邻的两台激光器不能同时打开！<br>国王很想知道，在目前这种bug存在的情况下，一共能打出多少种激光效果？<br>显然，如果只有3台机器，一共可以成5种样式，即：<br>全都关上（sorry, 此时无声胜有声，这也算一种）<br>开一台，共3种<br>开两台，只1种<br>30台就不好算了，国王只好请你帮忙了。<br>要求提交一个整数，表示30台激光器能形成的样式种数。</p>\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这道题一开始拿上手，好的写个dfs<br>完了，怎么写来着　<br>写了两次，　不熟啊，　bfs比较熟，但怎么写。。。<br>卡了好久，　要不先写后面的吧<br>瞅了眼格雷码　。。　题目难度是有个梯度的吧　　<br>哇，我不会卡在这么简单的第二题吧<br>然后就开始列出数据找规律了(我也不知道我怎么就觉得会有规律)<br>估计也是到了绝境</p>\n<p>好的，出来了　激动的一匹！<br>｀｀｀<br>台数　　　开的样式<br> 1　　　　　2<br> 2　　　　　3<br> 3　　　　　5<br> 4　　　　　8<br> 5　　　　　13</p>\n<p>｀｀｀<br>这是个什么？　　看着它总觉得特别亲切！　哈哈哈</p>\n<p>对的　就是个斐波那契数列。</p>\n<p>那就是求fib的第　(30 + 2) 项的值就行了 （因为一台是从第三项开始）</p>\n<h2 id=\"题解-1\"><a href=\"#题解-1\" class=\"headerlink\" title=\"题解\"></a>题解</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i= <span class=\"number\">0</span>; i &lt; <span class=\"number\">30</span> ; i ++)</span><br><span class=\"line\">        swap(a , b) , a = a + b;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>答案 ：2178309</p>\n<p>当然  dfs 也是可以的:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> t,<span class=\"keyword\">bool</span> status)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( t == <span class=\"number\">30</span>)&#123;</span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(status==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        dfs( t + <span class=\"number\">1</span> , <span class=\"number\">1</span>);</span><br><span class=\"line\">        dfs( t + <span class=\"number\">1</span> , <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> dfs( t + <span class=\"number\">1</span> , <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    dfs(<span class=\"number\">0</span> , <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; cnt;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"格雷码\"><a href=\"#格雷码\" class=\"headerlink\" title=\"格雷码\"></a>格雷码</h1><p>格雷码是以n位的二进制来表示数。<br>与普通的二进制表示不同的是，它要求相邻两个数字只能有1个数位不同。<br>首尾两个数字也要求只有1位之差。<br>有很多算法来生成格雷码。以下是较常见的一种：<br>从编码全0开始生成。<br>当产生第奇数个数时，只把当前数字最末位改变（0变1，1变0）<br>当产生第偶数个数时，先找到最右边的一个1，把它左边的数字改变。<br>用这个规则产生的4位格雷码序列如下：<br>0000<br>0001<br>0011<br>0010<br>0110<br>0111<br>0101<br>0100<br>1100<br>1101<br>1111<br>1110<br>1010<br>1011<br>1001<br>1000<br>以下是实现代码，仔细分析其中逻辑，并填写划线部分缺少的代码。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> n)</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> msk = <span class=\"number\">1</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;n<span class=\"number\">-1</span>; i++) msk = msk &lt;&lt; <span class=\"number\">1</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;n; i++)&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>((a &amp; msk)? <span class=\"string\">\"1\"</span> : <span class=\"string\">\"0\"</span>);  </span><br><span class=\"line\">        msk = msk &gt;&gt; <span class=\"number\">1</span>;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">&#125;   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> num = <span class=\"number\">1</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;n; i++) num = num&lt;&lt;<span class=\"number\">1</span>;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;num; i++)&#123;  </span><br><span class=\"line\">        show(a,n);  </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;  </span><br><span class=\"line\">            a = a ^ <span class=\"number\">1</span>;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">            a = _________________________ ; <span class=\"comment\">//填空  </span></span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    f(<span class=\"number\">4</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"分析-2\"><a href=\"#分析-2\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>分析不来啊， 没见过 ， 直接上  ，  一个空 ， 我感觉得几行啊<br>想想几行应该怎么合成一行呢 ， 三目运算！<br>可是一个也不够用啊 ，  那就用几个呗<br>23333  丧心病狂的我  就这样交了上去（还以为是对的，就是想让我们用三目运算符）<br>见识短浅啊  后来问郭佬才知道是 lowbit（树状数组）的解法去解<br>具体lowbit 是什么 ， 详见百度吧<br><a href=\"https://zh.wikipedia.org/wiki/树状数组\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/树状数组</a><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lowbit</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x&amp;(-x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>答案：a^((a&amp;(-a))&lt;&lt;1)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>时间:2018年5月<br>地点：首都经济贸易大学<br>事件：第九届蓝桥杯国赛</p>\n<h1 id=\"换零钞\"><a href=\"#换零钞\" class=\"headerlink\" title=\"换零钞\"></a>换零钞</h1><p>x星球的钞票的面额只有：100元，5元，2元，1元，共4种。<br>小明去x星旅游，他手里只有2张100元的x星币，太不方便，恰好路过x星银行就去换零钱。<br>小明有点强迫症，他坚持要求200元换出的零钞中2元的张数刚好是1元的张数的10倍，<br>剩下的当然都是5元面额的。<br>银行的工作人员有点为难，你能帮助算出：在满足小明要求的前提下，最少要换给他多少张钞票吗？<br>（5元，2元，1元面额的必须都有，不能是0）</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这个题目手算都可以算出来，编程的话  也行， 像我懒得算直接写个循环给他跑一下就行了。</p>\n<h2 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> $<span class=\"number\">1</span> , $<span class=\"number\">2</span> , $<span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($<span class=\"number\">1</span> = <span class=\"number\">5</span>; $<span class=\"number\">1</span> &lt; <span class=\"number\">200</span>; $<span class=\"number\">1</span> = $<span class=\"number\">1</span> + <span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">        $<span class=\"number\">2</span> = <span class=\"number\">10</span> * $<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((<span class=\"number\">200</span> - $<span class=\"number\">1</span> - $<span class=\"number\">2</span> * <span class=\"number\">2</span>) % <span class=\"number\">5</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            $<span class=\"number\">5</span> = (<span class=\"number\">200</span> - $<span class=\"number\">1</span> - $<span class=\"number\">2</span> * <span class=\"number\">2</span>) / <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; $<span class=\"number\">1</span> + $<span class=\"number\">2</span> + $<span class=\"number\">5</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>答案 ：　74</p>\n<h1 id=\"激光样式\"><a href=\"#激光样式\" class=\"headerlink\" title=\"激光样式\"></a>激光样式</h1><p>x星球的盛大节日为增加气氛，用30台机光器一字排开，向太空中打出光柱。<br>安装调试的时候才发现，不知什么原因，相邻的两台激光器不能同时打开！<br>国王很想知道，在目前这种bug存在的情况下，一共能打出多少种激光效果？<br>显然，如果只有3台机器，一共可以成5种样式，即：<br>全都关上（sorry, 此时无声胜有声，这也算一种）<br>开一台，共3种<br>开两台，只1种<br>30台就不好算了，国王只好请你帮忙了。<br>要求提交一个整数，表示30台激光器能形成的样式种数。</p>\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这道题一开始拿上手，好的写个dfs<br>完了，怎么写来着　<br>写了两次，　不熟啊，　bfs比较熟，但怎么写。。。<br>卡了好久，　要不先写后面的吧<br>瞅了眼格雷码　。。　题目难度是有个梯度的吧　　<br>哇，我不会卡在这么简单的第二题吧<br>然后就开始列出数据找规律了(我也不知道我怎么就觉得会有规律)<br>估计也是到了绝境</p>\n<p>好的，出来了　激动的一匹！<br>｀｀｀<br>台数　　　开的样式<br> 1　　　　　2<br> 2　　　　　3<br> 3　　　　　5<br> 4　　　　　8<br> 5　　　　　13</p>\n<p>｀｀｀<br>这是个什么？　　看着它总觉得特别亲切！　哈哈哈</p>\n<p>对的　就是个斐波那契数列。</p>\n<p>那就是求fib的第　(30 + 2) 项的值就行了 （因为一台是从第三项开始）</p>\n<h2 id=\"题解-1\"><a href=\"#题解-1\" class=\"headerlink\" title=\"题解\"></a>题解</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i= <span class=\"number\">0</span>; i &lt; <span class=\"number\">30</span> ; i ++)</span><br><span class=\"line\">        swap(a , b) , a = a + b;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>答案 ：2178309</p>\n<p>当然  dfs 也是可以的:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> t,<span class=\"keyword\">bool</span> status)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( t == <span class=\"number\">30</span>)&#123;</span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(status==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        dfs( t + <span class=\"number\">1</span> , <span class=\"number\">1</span>);</span><br><span class=\"line\">        dfs( t + <span class=\"number\">1</span> , <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> dfs( t + <span class=\"number\">1</span> , <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    dfs(<span class=\"number\">0</span> , <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; cnt;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"格雷码\"><a href=\"#格雷码\" class=\"headerlink\" title=\"格雷码\"></a>格雷码</h1><p>格雷码是以n位的二进制来表示数。<br>与普通的二进制表示不同的是，它要求相邻两个数字只能有1个数位不同。<br>首尾两个数字也要求只有1位之差。<br>有很多算法来生成格雷码。以下是较常见的一种：<br>从编码全0开始生成。<br>当产生第奇数个数时，只把当前数字最末位改变（0变1，1变0）<br>当产生第偶数个数时，先找到最右边的一个1，把它左边的数字改变。<br>用这个规则产生的4位格雷码序列如下：<br>0000<br>0001<br>0011<br>0010<br>0110<br>0111<br>0101<br>0100<br>1100<br>1101<br>1111<br>1110<br>1010<br>1011<br>1001<br>1000<br>以下是实现代码，仔细分析其中逻辑，并填写划线部分缺少的代码。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> n)</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> msk = <span class=\"number\">1</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;n<span class=\"number\">-1</span>; i++) msk = msk &lt;&lt; <span class=\"number\">1</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;n; i++)&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>((a &amp; msk)? <span class=\"string\">\"1\"</span> : <span class=\"string\">\"0\"</span>);  </span><br><span class=\"line\">        msk = msk &gt;&gt; <span class=\"number\">1</span>;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">&#125;   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> num = <span class=\"number\">1</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;n; i++) num = num&lt;&lt;<span class=\"number\">1</span>;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;num; i++)&#123;  </span><br><span class=\"line\">        show(a,n);  </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;  </span><br><span class=\"line\">            a = a ^ <span class=\"number\">1</span>;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">            a = _________________________ ; <span class=\"comment\">//填空  </span></span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    f(<span class=\"number\">4</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"分析-2\"><a href=\"#分析-2\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>分析不来啊， 没见过 ， 直接上  ，  一个空 ， 我感觉得几行啊<br>想想几行应该怎么合成一行呢 ， 三目运算！<br>可是一个也不够用啊 ，  那就用几个呗<br>23333  丧心病狂的我  就这样交了上去（还以为是对的，就是想让我们用三目运算符）<br>见识短浅啊  后来问郭佬才知道是 lowbit（树状数组）的解法去解<br>具体lowbit 是什么 ， 详见百度吧<br><a href=\"https://zh.wikipedia.org/wiki/树状数组\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/树状数组</a><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">lowbit</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x&amp;(-x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>答案：a^((a&amp;(-a))&lt;&lt;1)</p>\n"},{"title":"解决写wyh的矩阵出现内存占用超过限制的问题","date":"2018-04-06T08:58:13.000Z","description":"有时候在提交的时候总是会出现内存占用超过限制的问题，很多时候刚上手也不知道为什么会超过内存限制！而这篇文章将用一个例子讲述怎么查看内存使用。","_content":"\n[原题链接](https://www.nowcoder.com/acm/contest/93/B)\n题目如下：\n给你一个n*n矩阵，按照顺序填入1到n*n的数，例如n=5，该矩阵如下\n1  2  3  4  5\n6  7  8  9  10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n现在让你连接相邻两条边的中点，然后只保留他们围成封闭图形区域的数字，那么这个矩阵变为\n      3\n   7  8  9 \n11 12 13 14 15\n   17 18 19 \n      23\n      \n现在你们涵哥让你求变化后的矩阵的所有元素的和为多少\n\n内存超过限制的代码:\n```C++\n#include<bits/stdc++.h>//数字\nusing namespace std;\ntypedef long long ll;\nint a[9000][9000];\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    while(n--){\n        int num=0,m;\n        scanf(\"%d\",&m);\n        for(int i=0;i<m;i++)\n            for(int j=0;j<m;j++)\n                a[i][j]=++num;\n        int l=(m+1)/2-1;\n        ll sum=0;\n        for(int i=0;i<m;i++)\n            for(int j=abs(l-i);j<m-abs(i-l);j++)\n                sum+=a[i][j];\n        printf(\"%lld\\n\",sum);\n    }\n    return 0;\n}\n```\n**占用内存262145K**\n题目对空间的限制是262144K，所以是没跑完的。\n几次修改无果。。放弃了二维数组的做法\nAC代码如下：\n```C++\n#include<bits/stdc++.h>//数字 \nusing namespace std;\ntypedef long long ll;\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint num=0,m;\n\t\tscanf(\"%d\",&m);\n\t\tint l=(m+1)/2-1;\n\t\tint h=l+1;\n\t\tll sum=0;\n\t\tfor(int i=0;i<m;i++){\n\t\t\tif(i<=l){\n\t\t\t\tif(i)\th=h+(m-1);\n\t\t\t\tfor(int j=h;j<h+2*(l-abs(i-l))+1;j++)\n\t\t\t\t\tsum+=j;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(i)\th=h+(m+1);\n\t\t\t\tfor(int j=h;j<h+2*(l-abs(i-l))+1;j++)\n\t\t\t\t\tsum+=j;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",sum);\n//\t\n//\tint availmb;\n//    int totalmb;\n// \n//    MEMORYSTATUS memstatus; \n// \n//    GlobalMemoryStatus(&memstatus);  \n// \n//    availmb = memstatus.dwAvailPhys/1024/1024;      //可用物理内存总量\n//    totalmb = memstatus.dwTotalPhys/1024/1024;      //物理内存总量\n//    printf(\"可用内存为:%d MB，物理内存总量:%d MB\\n\",availmb,totalmb);\n\t}\n\treturn 0;\n}\n```\n**占用内存352K**\n注释中的代码可以查看当前运行使用的内存大小！！！","source":"_posts/解决写wyh的矩阵出现内存占用超过限制的问题.md","raw":"---\ntitle: 解决写wyh的矩阵出现内存占用超过限制的问题\ndate: 2018-04-06 16:58:13\ntags: \n    - C/C++题目\ncategories: C/C++\ndescription: 有时候在提交的时候总是会出现内存占用超过限制的问题，很多时候刚上手也不知道为什么会超过内存限制！而这篇文章将用一个例子讲述怎么查看内存使用。\n---\n\n[原题链接](https://www.nowcoder.com/acm/contest/93/B)\n题目如下：\n给你一个n*n矩阵，按照顺序填入1到n*n的数，例如n=5，该矩阵如下\n1  2  3  4  5\n6  7  8  9  10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n现在让你连接相邻两条边的中点，然后只保留他们围成封闭图形区域的数字，那么这个矩阵变为\n      3\n   7  8  9 \n11 12 13 14 15\n   17 18 19 \n      23\n      \n现在你们涵哥让你求变化后的矩阵的所有元素的和为多少\n\n内存超过限制的代码:\n```C++\n#include<bits/stdc++.h>//数字\nusing namespace std;\ntypedef long long ll;\nint a[9000][9000];\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    while(n--){\n        int num=0,m;\n        scanf(\"%d\",&m);\n        for(int i=0;i<m;i++)\n            for(int j=0;j<m;j++)\n                a[i][j]=++num;\n        int l=(m+1)/2-1;\n        ll sum=0;\n        for(int i=0;i<m;i++)\n            for(int j=abs(l-i);j<m-abs(i-l);j++)\n                sum+=a[i][j];\n        printf(\"%lld\\n\",sum);\n    }\n    return 0;\n}\n```\n**占用内存262145K**\n题目对空间的限制是262144K，所以是没跑完的。\n几次修改无果。。放弃了二维数组的做法\nAC代码如下：\n```C++\n#include<bits/stdc++.h>//数字 \nusing namespace std;\ntypedef long long ll;\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tint num=0,m;\n\t\tscanf(\"%d\",&m);\n\t\tint l=(m+1)/2-1;\n\t\tint h=l+1;\n\t\tll sum=0;\n\t\tfor(int i=0;i<m;i++){\n\t\t\tif(i<=l){\n\t\t\t\tif(i)\th=h+(m-1);\n\t\t\t\tfor(int j=h;j<h+2*(l-abs(i-l))+1;j++)\n\t\t\t\t\tsum+=j;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(i)\th=h+(m+1);\n\t\t\t\tfor(int j=h;j<h+2*(l-abs(i-l))+1;j++)\n\t\t\t\t\tsum+=j;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",sum);\n//\t\n//\tint availmb;\n//    int totalmb;\n// \n//    MEMORYSTATUS memstatus; \n// \n//    GlobalMemoryStatus(&memstatus);  \n// \n//    availmb = memstatus.dwAvailPhys/1024/1024;      //可用物理内存总量\n//    totalmb = memstatus.dwTotalPhys/1024/1024;      //物理内存总量\n//    printf(\"可用内存为:%d MB，物理内存总量:%d MB\\n\",availmb,totalmb);\n\t}\n\treturn 0;\n}\n```\n**占用内存352K**\n注释中的代码可以查看当前运行使用的内存大小！！！","slug":"解决写wyh的矩阵出现内存占用超过限制的问题","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hch0031a7s14d8yb8i9","content":"<p><a href=\"https://www.nowcoder.com/acm/contest/93/B\" target=\"_blank\" rel=\"noopener\">原题链接</a><br>题目如下：<br>给你一个n<em>n矩阵，按照顺序填入1到n</em>n的数，例如n=5，该矩阵如下<br>1  2  3  4  5<br>6  7  8  9  10<br>11 12 13 14 15<br>16 17 18 19 20<br>21 22 23 24 25<br>现在让你连接相邻两条边的中点，然后只保留他们围成封闭图形区域的数字，那么这个矩阵变为<br>      3<br>   7  8  9<br>11 12 13 14 15<br>   17 18 19<br>      23</p>\n<p>现在你们涵哥让你求变化后的矩阵的所有元素的和为多少</p>\n<p>内存超过限制的代码:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;//数字</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">9000</span>][<span class=\"number\">9000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num=<span class=\"number\">0</span>,m;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)</span><br><span class=\"line\">                a[i][j]=++num;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> l=(m+<span class=\"number\">1</span>)/<span class=\"number\">2</span><span class=\"number\">-1</span>;</span><br><span class=\"line\">        ll sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"built_in\">abs</span>(l-i);j&lt;m-<span class=\"built_in\">abs</span>(i-l);j++)</span><br><span class=\"line\">                sum+=a[i][j];</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>占用内存262145K</strong><br>题目对空间的限制是262144K，所以是没跑完的。<br>几次修改无果。。放弃了二维数组的做法<br>AC代码如下：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;//数字 </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> num=<span class=\"number\">0</span>,m;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=(m+<span class=\"number\">1</span>)/<span class=\"number\">2</span><span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> h=l+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tll sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i&lt;=l)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(i)\th=h+(m<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=h;j&lt;h+<span class=\"number\">2</span>*(l-<span class=\"built_in\">abs</span>(i-l))+<span class=\"number\">1</span>;j++)</span><br><span class=\"line\">\t\t\t\t\tsum+=j;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(i)\th=h+(m+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=h;j&lt;h+<span class=\"number\">2</span>*(l-<span class=\"built_in\">abs</span>(i-l))+<span class=\"number\">1</span>;j++)</span><br><span class=\"line\">\t\t\t\t\tsum+=j;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,sum);</span><br><span class=\"line\"><span class=\"comment\">//\t</span></span><br><span class=\"line\"><span class=\"comment\">//\tint availmb;</span></span><br><span class=\"line\"><span class=\"comment\">//    int totalmb;</span></span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"comment\">//    MEMORYSTATUS memstatus; </span></span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"comment\">//    GlobalMemoryStatus(&amp;memstatus);  </span></span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"comment\">//    availmb = memstatus.dwAvailPhys/1024/1024;      //可用物理内存总量</span></span><br><span class=\"line\"><span class=\"comment\">//    totalmb = memstatus.dwTotalPhys/1024/1024;      //物理内存总量</span></span><br><span class=\"line\"><span class=\"comment\">//    printf(\"可用内存为:%d MB，物理内存总量:%d MB\\n\",availmb,totalmb);</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>占用内存352K</strong><br>注释中的代码可以查看当前运行使用的内存大小！！！</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.nowcoder.com/acm/contest/93/B\" target=\"_blank\" rel=\"noopener\">原题链接</a><br>题目如下：<br>给你一个n<em>n矩阵，按照顺序填入1到n</em>n的数，例如n=5，该矩阵如下<br>1  2  3  4  5<br>6  7  8  9  10<br>11 12 13 14 15<br>16 17 18 19 20<br>21 22 23 24 25<br>现在让你连接相邻两条边的中点，然后只保留他们围成封闭图形区域的数字，那么这个矩阵变为<br>      3<br>   7  8  9<br>11 12 13 14 15<br>   17 18 19<br>      23</p>\n<p>现在你们涵哥让你求变化后的矩阵的所有元素的和为多少</p>\n<p>内存超过限制的代码:<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;//数字</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">9000</span>][<span class=\"number\">9000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num=<span class=\"number\">0</span>,m;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)</span><br><span class=\"line\">                a[i][j]=++num;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> l=(m+<span class=\"number\">1</span>)/<span class=\"number\">2</span><span class=\"number\">-1</span>;</span><br><span class=\"line\">        ll sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"built_in\">abs</span>(l-i);j&lt;m-<span class=\"built_in\">abs</span>(i-l);j++)</span><br><span class=\"line\">                sum+=a[i][j];</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>占用内存262145K</strong><br>题目对空间的限制是262144K，所以是没跑完的。<br>几次修改无果。。放弃了二维数组的做法<br>AC代码如下：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;//数字 </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> num=<span class=\"number\">0</span>,m;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=(m+<span class=\"number\">1</span>)/<span class=\"number\">2</span><span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> h=l+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tll sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i&lt;=l)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(i)\th=h+(m<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=h;j&lt;h+<span class=\"number\">2</span>*(l-<span class=\"built_in\">abs</span>(i-l))+<span class=\"number\">1</span>;j++)</span><br><span class=\"line\">\t\t\t\t\tsum+=j;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(i)\th=h+(m+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=h;j&lt;h+<span class=\"number\">2</span>*(l-<span class=\"built_in\">abs</span>(i-l))+<span class=\"number\">1</span>;j++)</span><br><span class=\"line\">\t\t\t\t\tsum+=j;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,sum);</span><br><span class=\"line\"><span class=\"comment\">//\t</span></span><br><span class=\"line\"><span class=\"comment\">//\tint availmb;</span></span><br><span class=\"line\"><span class=\"comment\">//    int totalmb;</span></span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"comment\">//    MEMORYSTATUS memstatus; </span></span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"comment\">//    GlobalMemoryStatus(&amp;memstatus);  </span></span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"comment\">//    availmb = memstatus.dwAvailPhys/1024/1024;      //可用物理内存总量</span></span><br><span class=\"line\"><span class=\"comment\">//    totalmb = memstatus.dwTotalPhys/1024/1024;      //物理内存总量</span></span><br><span class=\"line\"><span class=\"comment\">//    printf(\"可用内存为:%d MB，物理内存总量:%d MB\\n\",availmb,totalmb);</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>占用内存352K</strong><br>注释中的代码可以查看当前运行使用的内存大小！！！</p>\n"},{"title":"配置apache-tomcat","date":"2018-09-22T01:28:13.000Z","description":null,"_content":"\n\n官网下载\n然后解压\n# 问题1\nCannot find /usr/local/apache-tomcat-6.0.30//bin/setclasspath.sh\nThis file is needed to run this program\n\n\n\n# 问题2\n运行setclasspath.sh报错  找不到jdk\n方法：\n编辑setclasspath.sh  在文件开始添加jdk的位置\n\nCATALINA_HOME=/usr/local/apache-tomcat/\nJAVA_HOME= JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\n这两个加在文件前面  目录一定要正确\n\n\njava -verbose 可以查看jdk位置\n/usr/lib/jvm/java-11-openjdk-amd64/lib/modules\n","source":"_posts/配置apache-tomcat.md","raw":"---\ntitle: 配置apache-tomcat\ndate: 2018-09-22 09:28:13\ntags:\ncategories:\ndescription:\n---\n\n\n官网下载\n然后解压\n# 问题1\nCannot find /usr/local/apache-tomcat-6.0.30//bin/setclasspath.sh\nThis file is needed to run this program\n\n\n\n# 问题2\n运行setclasspath.sh报错  找不到jdk\n方法：\n编辑setclasspath.sh  在文件开始添加jdk的位置\n\nCATALINA_HOME=/usr/local/apache-tomcat/\nJAVA_HOME= JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\n这两个加在文件前面  目录一定要正确\n\n\njava -verbose 可以查看jdk位置\n/usr/lib/jvm/java-11-openjdk-amd64/lib/modules\n","slug":"配置apache-tomcat","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hci0034a7s10gt9jpyl","content":"<p>官网下载<br>然后解压</p>\n<h1 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h1><p>Cannot find /usr/local/apache-tomcat-6.0.30//bin/setclasspath.sh<br>This file is needed to run this program</p>\n<h1 id=\"问题2\"><a href=\"#问题2\" class=\"headerlink\" title=\"问题2\"></a>问题2</h1><p>运行setclasspath.sh报错  找不到jdk<br>方法：<br>编辑setclasspath.sh  在文件开始添加jdk的位置</p>\n<p>CATALINA_HOME=/usr/local/apache-tomcat/<br>JAVA_HOME= JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64<br>这两个加在文件前面  目录一定要正确</p>\n<p>java -verbose 可以查看jdk位置<br>/usr/lib/jvm/java-11-openjdk-amd64/lib/modules</p>\n","site":{"data":{}},"excerpt":"","more":"<p>官网下载<br>然后解压</p>\n<h1 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h1><p>Cannot find /usr/local/apache-tomcat-6.0.30//bin/setclasspath.sh<br>This file is needed to run this program</p>\n<h1 id=\"问题2\"><a href=\"#问题2\" class=\"headerlink\" title=\"问题2\"></a>问题2</h1><p>运行setclasspath.sh报错  找不到jdk<br>方法：<br>编辑setclasspath.sh  在文件开始添加jdk的位置</p>\n<p>CATALINA_HOME=/usr/local/apache-tomcat/<br>JAVA_HOME= JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64<br>这两个加在文件前面  目录一定要正确</p>\n<p>java -verbose 可以查看jdk位置<br>/usr/lib/jvm/java-11-openjdk-amd64/lib/modules</p>\n"},{"title":"蓝桥杯试题集_基础练习","date":"2019-02-20T08:22:50.000Z","description":"基础。","_content":"\n[蓝桥杯基础练习](http://lx.lanqiao.cn/problemset.page?code=BASIC-)\n\n## BASIC 1 [闰年判断 ](http://lx.lanqiao.cn/problem.page?gpid=T5)\n\n**问题描述**\n```\n给定一个年份，判断这一年是不是闰年。\n当以下情况之一满足时，这一年是闰年：\n1. 年份是4的倍数而不是100的倍数；\n2. 年份是400的倍数。\n其他的年份都不是闰年。\n```\n**输入格式**\n```\n输入包含一个整数y，表示当前的年份。\n```\n**输出格式**\n```\n输出一行，如果给定的年份是闰年，则输出yes，否则输出no。\n说明：当试题指定你输出一个字符串作为结果（比如本题的yes或者no，你需要严格按照试题中给定的大小写，写错大小写将不得分。\n```\n**样例输入**\n```\n2013\n```\n**样例输出**\n```\nno\n```\n**样例输入**\n```\n2016\n```\n**样例输出**\n```\nyes\n```\n**数据规模与约定**\n```\n1990 <= y <= 2050\n```\n\n**问题分析**\n略\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint y;\n\tcin >> y;\n\tif( y % 4 == 0 && ( y % 400 == 0 || y % 100 != 0) )\n\t\tputs(\"yes\");\n\telse puts(\"no\");\n\treturn 0;\n}\n```\n\n## BASIC 2 [01字串](http://lx.lanqiao.cn/problem.page?gpid=T6)\n\n**问题描述**\n```\n对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：\n00000\n00001\n00010\n00011\n00100\n请按从小到大的顺序输出这32种01串。\n```\n\n**输入格式**\n```\n本试题没有输入。\n```\n**输出格式**\n```\n输出32行，按从小到大的顺序每行一个长度为5的01串。\n```\n**样例输出**\n```markdown\n00000\n00001\n00010\n00011\n<以下部分省略>\n```\n\n**问题分析**\n1. 可以循环嵌套实现\n2. 可以模拟二进制直接从低位到高位逢2进位\n3. 也可以直接使用STL的容器bitset\n\n### AC代码\n```C++\n// 循环嵌套\n# include <bits/stdc++.h>\nusing namespace std;\nint main(){\n\tfor(int i1 = 0; i1 < 2; i1 ++)\n\t\tfor(int i2 = 0; i2 < 2; i2 ++)\n\t\t\tfor(int i3 = 0; i3 < 2; i3 ++)\n\t\t\t\tfor(int i4 = 0; i4 < 2; i4 ++)\n\t\t\t\t\tfor(int i5 = 0; i5 < 2; i5 ++)\n\t\t\t\t\t\tcout << i1<< i2 << i3 << i4 << i5 << endl;\n\treturn 0;\n}\n```\n\n```C++\n// 模拟二进制\n# include <bits/stdc++.h>\nusing namespace std;\nint main(){\n\tstring a = \"00000\";\n\tfor(int i = 0; i < 32 ; i ++){\n\t\tcout << a << endl;\n\t\ta[4] += 1;\n\t\tfor(int j = 4 ; j >= 0 ; j --)\n\t\t\tif(a[j] == '2'){\n\t\t\t\ta[j - 1] += 1;\n\t\t\t\ta[j] = '0';\n\t\t\t}\n\t}\n\treturn 0;\n}\n```\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tfor (int i = 0; i < 32; i ++){\n\t\tbitset<5> b(i);   // 头文件 <bitset>\n\t\tcout << b << endl;\n\t} \n\treturn 0;\n}\n\n// bitset 容器每个位置存储值只能为0和1\n// 用在这里正好合适\n```\n[bitset文档](http://www.cplusplus.com/reference/bitset/bitset/)\n\n\n## BASIC 3 [字母图形](http://lx.lanqiao.cn/problem.page?gpid=T7)\n\n**问题描述**\n```\n利用字母可以组成一些美丽的图形，下面给出了一个例子：\nABCDEFG\nBABCDEF\nCBABCDE\nDCBABCD\nEDCBABC\n这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。\n```\n**输入格式**\n```\n输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。\n```\n**输出格式**\n```\n输出n行，每个m个字符，为你的图形。\n```\n**样例输入**\n```\n5 7\n```\n**样例输出**\n```markdown\nABCDEFG\nBABCDEF\nCBABCDE\nDCBABCD\nEDCBABC\n```\n**数据规模与约定**\n```\n1 <= n, m <= 26\n```\n\n**问题分析**\n可以直接两层循环直接输出ASCII码\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i ++){\n\t\tfor (int j = 0; j < m; j ++)\n\t\t\tputchar( abs(j - i) + 65 );  \n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n\n## BASIC 4 [数列特征](http://lx.lanqiao.cn/problem.page?gpid=T8)\n\n**问题描述**\n```\n给出n个数，找出这n个数的最大值，最小值，和。\n```\n**输入格式**\n```\n第一行为整数n，表示数的个数\n第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。\n```\n**输出格式**\n```\n输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。\n```\n**样例输入**\n```\n5\n1  3  -2  4  5\n```\n**样例输出**\n```markdown\n5\n-2\n11\n```\n**数据规模与约定**\n```\n1 <= n <= 10000\n```\n\n**问题分析**\n在读入的过程中判断是否是最小和最大值，并加进总和中\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n, x, Min = 10000, Max = -10000, sum = 0;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i ++){\n\t\tscanf(\"%d\", &x);\n\t\tMin = min(Min, x);\n\t\tMax = max(Max, x);\n\t\tsum += x;\n\t}\n\tprintf(\"%d\\n%d\\n%d\\n\", Max, Min, sum);\n\treturn 0;\n}\n```\n\n## BASIC 5 [查找整数](http://lx.lanqiao.cn/problem.page?gpid=T9)\n\n**问题描述**\n```markdown\n给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。\n```\n**输入格式**\n```markdown\n第一行包含一个整数n。\n第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。\n第三行包含一个整数a，为待查找的数。\n```\n**输出格式**\n```markdown\n如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。\n```\n**样例输入**\n```markdown\n6\n1 9 4 8 3 9\n9\n```\n**样例输出**\n```markdown\n2\n```\n**数据规模与约定**\n```markdown\n1 <= n <= 1000\n```\n\n**问题分析**\n读取数组, 然后使用find函数\t\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n, x;\n\tint a[1001];\n\tscanf (\"%d\", &n);\n\tfor (int i = 0; i < n; i ++)\n\t\tscanf(\"%d\", a + i);\n\tscanf (\"%d\", &x);\n\tint ans = find(a, a + n, x) - a;\n\tif( ans != n ) cout << ans + 1;\n\telse puts(\"-1\");\n\treturn 0;\n}\n```\n　　\n给出n，输出它的前n行。\n\n## BASIC 6 [杨辉三角形](http://lx.lanqiao.cn/problem.page?gpid=T10)\n\n**问题描述**\n```markdown\n杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。\n它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。\n下面给出了杨辉三角形的前4行：　\n   1\n  1 1\n 1 2 1　　\n1 3 3 1\n```\n**输入格式**\n```markdown\n输入包含一个数n。\n```\n**输出格式**\n```markdown\n输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。\n```\n**样例输入**\n```markdown\n4\n```\n**样例输出**\n```markdown\n1\n1 1\n1 2 1\n1 3 3 1\n```\n**数据规模与约定**\n```markdown\n1 <= n <= 34\n```\n\n**问题分析**\n略\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint a[35];\n\tmemset(a, 0, sizeof(a));\n\ta[0] = 1;\n\tfor (int i = 1; i <= n; i ++){\n\t\tfor (int j = 0; j < i; j ++)\n\t\t\tprintf (\"%d \", a[j]);\n\t\tint temp = 1;\n\t\tfor (int j = 1; j <= i + 1; j ++){\n\t\t\ttemp = a[j] + temp;\n\t\t\tswap(temp, a[j]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n\n\n## BASIC 7 [特殊的数字](http://lx.lanqiao.cn/problem.page?gpid=T46)\n**问题描述**\n```markdown\n153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1*1*1+5*5*5+3*3*3。编程求所有满足这种条件的三位十进制数。\n```\n**输出格式**\n```markdown\n按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。\n```\n**问题分析**\n循环跑一遍，公式都给了，范围是三位数\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h> \nusing namespace std;\n\nint main(){\n\tint i,a,b,c; \n\tfor(i = 100; i < 1000; i ++){\n\t\ta = i  /100;\t// 百位\t\n\t\tb = ( i % 100 ) / 10;\t// 十位 \n\t\tc = i % 10;\t\t// 个位 \n\t\tif(i == a * a * a + b * b * b + c * c * c)\n\t\t\tcout << i << endl; \n\t} \n\treturn 0;\n}\n```\n## BASIC 8 [回文数](http://lx.lanqiao.cn/problem.page?gpid=T47)\n**问题描述**\n```markdown\n1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。\n```\n**输出格式**\n```markdown\n按从小到大的顺序输出满足条件的四位十进制数。\n```\n**问题分析**\n直接循环找到千位和个位相等，百位和十位相等。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tfor (int i = 1001; i < 10000; i ++){\n\t\tif( i % 10 == i / 1000 && i % 100 / 10 == i / 100 % 10)\n\t\t\tcout << i << endl;\n\t}\t\n\treturn 0;\n}\n```\n\n## BASIC 9 [特殊回文数](http://lx.lanqiao.cn/problem.page?gpid=T48)\n**问题描述**\n```markdown\n123321是一个非常特殊的数，它从左边读和从右边读是一样的。\n输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。\n```\n**输入格式**\n```markdown\n输入一行，包含一个正整数n。\n```\n**输出格式**\n```markdown\n按从小到大的顺序输出满足条件的整数，每个整数占一行。\n```\n**样例输入**\n```markdown\n52\n```\n**样例输出**\n```markdown\n899998\n989989\n998899\n```\n**数据规模与约定**\n```markdown\n1 <= n <= 54\n```\n**问题分析**\n六位数是回文数，且六个数总和是n。\n取高三位，总和为n / 2。因此如果为奇数则一定没有解。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\tif( n % 2 != 0 )\n\t\tfor (int i = 1; i < 10; i ++)\n\t\t\tfor (int j = 0; j < 10; j ++)\n\t\t\t\tfor (int k = 0; k < 10; k ++)\n\t\t\t\t\tif( i + j + k == n / 2)\n\t\t\t\t\t\tcout << i << j << k << k << j << i << endl;\n\treturn 0;\n}\n```\n\n## BASIC 10 [十进制转十六进制](http://lx.lanqiao.cn/problem.page?gpid=T49)\n**问题描述**\n```markdown\n十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。\n十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。\n给出一个非负整数，将它表示成十六进制的形式。\n```\n**输入格式**\n```markdown\n输入包含一个非负整数a，表示要转换的数。0<=a<=2147483647\n```\n**输出格式**\n```markdown\n输出这个整数的16进制表示\n```\n**样例输入**\n```markdown\n30\n```\n**样例输出**\n```markdown\n1E\n```\n**问题分析**\n这类问题模仿十进制转二进制的过程即可，使用了STL的string\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nstring Turn(int n, int d){\n\tstring ans;\n\tif( !n ) puts(\"0\");\n\twhile ( n ){\n\t\tint x = n % d;\n\t\tif( x < 10 ) ans += x + 48;\n\t\telse ans += 55 + x;\n\t\tn /= d;\n\t}\n\treverse(ans.begin(), ans.end());\n\treturn ans;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << Turn(n, 16);\n\treturn 0;\n}\n```\n\n## BASIC 11 [十六进制转十进制](http://lx.lanqiao.cn/problem.page?gpid=T50)\n**问题描述**\n```markdown\n从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。\n注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。\n```\n**样例输入**\n```markdown\nFFFF\n```\n**样例输出**\n```markdown\n65535\n```\n**问题分析**\n(FFFF)<sub>H</sub> => (65535)<sub>D</sub>\n也就是 F * 16 <sup>0</sup> + F * 16 <sup>1</sup> + F * 16 <sup>2</sup> + F * 16 <sup>3</sup> = 65535.\n这里F代表的是数字15\n需要注意的是不能用int，FFFFFFFF会爆int。\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nunsigned int Pow(int d, int p){\n\tunsigned int mul = 1;\n\twhile ( -- p ) mul *= d;\n\treturn mul;\n}\n\nunsigned int Turn(string str, int d){\n\tunsigned int sum = 0;\n\tfor (int i = str.size() - 1; i >= 0; i --)\n\t\tif( str[i] < 57 )\n\t\t\tsum += (str[i] - 48) * Pow(d, str.size() - i);\n\t\telse\n\t\t\tsum += (str[i] - 55) * Pow(d, str.size() - i);\n\treturn sum;\n}\n\nint main(){\n\tstring str;\n\tcin >> str;\n\tcout << Turn(str, 16);\n\treturn 0;\n}\n```\n\n\n## BASIC 12 [十六进制转八进制](http://lx.lanqiao.cn/problem.page?gpid=T51)\n**问题描述**\n```markdown\n给定n个十六进制正整数，输出它们对应的八进制数。\n```\n**输入格式**\n```\n输入的第一行为一个正整数n （1<=n<=10）。\n接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。\n```\n**输出格式**\n```\n输出n行，每行为输入对应的八进制正整数。\n【注意】\n输入的十六进制数不会有前导0，比如012A。\n输出的八进制数也不能有前导0。\n```\n**样例输入**\n```markdown\n2\n39\n123ABC\n```\n**样例输出**\n```markdown\n71\n4435274\n```\n**提示**\n先将十六进制数转换成某进制数，再由某进制数转换成八进制。\n\n**问题分析**\n很多人第一眼看到这题，十六进制转十进制再转八进制即可，思路同上两题。但这题要注意到的是数据范围，每个十六进制数长度不超过100000。\n我的做法是转成二进制，而不是十进制。\n这个对上题的代码需要进行改动。\n但to_string函数编译不通过手写一个To_string。\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nstring hexTurnbin(string str){\n\tstring bin;\n\tfor (int i = 0; i < str.size(); i ++){\n\t\tint hex = str[i] < 65 ? str[i] - 48 : str[i] - 55;\n\t\tstring t;\n\t\twhile( hex ){\n\t\t\tt += hex % 2 + 48;\n\t\t\thex /= 2;\n\t\t}\n\t\treverse(t.begin(), t.end());\n\t\tfor (int i = t.size(); i < 4; i ++) bin += '0';  // 二进制补前置0\n\t\tbin += t;\n\t}\n\treturn bin;\n}\n\nstring To_string(int n){\n\tstring str;\n\tif( n )\n\t\twhile( n ){\n\t\t\tstr += (n % 10 + 48);\n\t\t\tn /= 10;\n\t\t}\n\telse str = \"0\";\n\treverse(str.begin(), str.end());\n\treturn str;\n}\n\nstring binTurnoct(string str){\n\tstring oct;\n\tint M = 1, mul = 0;\n\tfor (int i = str.size() - 1; i >= 0; i --){\n\t\tmul += M * (str[i] - 48);\n\t\tM *= 2;\n\t\tif( M == 8 ){\n\t\t\tM = 1;\n\t\t\toct += To_string(mul);  // to_string 用于int 转成 string\n\t\t\tmul = 0;\n\t\t}\n\t}\n\tif( mul ) oct += To_string(mul);\n\treverse(oct.begin(), oct.end());\n\treturn oct;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\twhile ( n -- ){\n\t\tstring str;\n\t\tcin >> str;\n\t\tstr = hexTurnbin(str);\n\t\tstr = binTurnoct(str);\n\t\tint i = 0;\n\t\tfor (; i < str.size(); i ++) if( str[i] != 48 ) break;\n\t\tfor (; i < str.size(); i ++) putchar(str[i]);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n\n## BASIC 13 [数列排序](http://lx.lanqiao.cn/problem.page?gpid=T52)\n**问题描述**\n```markdown\n给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1<=n<=200\n```\n**输入格式**\n```markdown\n第一行为一个整数n。\n第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。\n```\n**输出格式**\n```markdown\n输出一行，按从小到大的顺序输出排序后的数列。\n```\n**样例输入**\n```markdown\n5\n8 3 6 4 9\n```\n**样例输出**\n```markdown\n3 4 6 8 9\n```\n**问题分析**\n直接使用algorithm里面的sort函数即可(有兴趣可以自己了解sort实现的方法)\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint a[201];\nint main(){\n\tint n;\n\tcin >> n;\n\tfor(int i = 0; i < n; i ++)\n\t\tscanf(\"%d\", &a[i]);\n\tsort(a, a + n);\n\tfor(int i = 0; i < n; i ++)\n\t\tprintf(\"%d \", a[i]);\n\treturn 0;\n}\n```\n\n\n## BASIC 14 [时间转换](http://lx.lanqiao.cn/problem.page?gpid=T54)\n**问题描述**\n```markdown\n给定一个以秒为单位的时间t，要求用“<H>:<M>:<S>”的格式来表示这个时间。<H>表示时间，<M>表示分钟，而<S>表示秒，它们都是整数且没有前导的“0”。例如，若t=0，则应输出是“0:0:0”；若t=3661，则输出“1:1:1”。\n```\n**输入格式**\n```markdown\n输入只有一行，是一个整数t（0<=t<=86399）。\n```\n**输出格式**\n```markdown\n输出只有一行，是以“<H>:<M>:<S>”的格式所表示的时间，不包括引号。\n```\n**样例输入**\n```markdown\n0\n```\n**样例输出**\n```markdown\n0:0:0\n```\n**样例输入**\n```markdown\n5436\n```\n**样例输出**\n```markdown\n1:30:36\n```\n**问题分析**\n略\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint t;\n\tcin >> t;\n\tprintf(\"%d:%d:%d\", t / 3600 , (t / 60 % 60), t % 60);\n\treturn 0;\n}\n```\n\n## BASIC 15 [字符串对比](http://lx.lanqiao.cn/problem.page?gpid=T56)\n**问题描述**\n```markdown\n　　给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一：\n　　1：两个字符串长度不等。比如 Beijing 和 Hebei\n　　2：两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如 Beijing 和 Beijing\n　　3：两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如 beijing 和 BEIjing\n　　4：两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如 Beijing 和 Nanjing\n　　编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。\n```\n**输入格式**\n```markdown\n包括两行，每行都是一个字符串\n```\n**输出格式**\n```markdown\n仅有一个数字，表明这两个字符串的关系编号\n```\n**样例输入**\n```markdown\nBEIjing\nbeiJing \n```\n**样例输出**\n```markdown\n3\n```\n**问题分析**\n使用transform 函数使string 整个转大写或小写。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tstring str1, str2;\n\tcin >> str1 >> str2;\n\tif ( str1.size() != str2.size() ) cout << \"1\";\n\telse if ( str1 == str2 ) cout << \"2\";\n\telse{\n\t\ttransform(str1.begin(), str1.end(), str1.begin(), ::toupper);\n\t\ttransform(str2.begin(), str2.end(), str2.begin(), ::toupper);\n\t\tif( str1 == str2 ) cout << \"3\";\n\t\telse cout << \"4\";\n\t}\n\treturn 0;\n}\n```\n\n## BASIC 16 [分解质因数 ](http://lx.lanqiao.cn/problem.page?gpid=T57)\n**问题描述**\n```markdown\n求出区间[a,b]中所有整数的质因数分解。\n```\n**输入格式**\n```markdown\n输入两个整数a，b。\n```\n**输出格式**\n```markdown\n每行输出一个数的分解，形如k=a1*a2*a3...(a1<=a2<=a3...，k也是从小到大的)(具体可看样例)\n```\n**样例输入**\n```markdown\n3 10\n```\n**样例输出**\n```markdown\n3=3\n4=2*2\n5=5\n6=2*3\n7=7\n8=2*2*2\n9=3*3\n10=2*5\n```\n**提示**\n先筛出所有素数，然后再分解。\n\n**数据规模与约定**\n```markdown\n1 <= n <= 1,000,000\n```\n**问题分析**\n打出素数表，然后按素数表顺序用 2 3 5 7 9，依次选择。\n若可以整除，则除以这个素数。\n\n例如 18 = 2， 3， 3。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint a, b, k = 0;\nint p[10001];\nint P[5000];\nvoid init(){\n\tmemset(p, 0, sizeof(p));\n\tp[0] = p[1] = 1;\n\tfor (int i = 2; i <= b; i ++)\n\t\tif( !p[i] ){\n\t\t\tP[k ++] = i;\n\t\t\tfor (int j = 2; i * j <= b; j ++)\n\t\t\t\tp[i * j] = 1;\n\t\t}\t\n}\n\nint main(){\n\tcin >> a >> b;\n\tinit();\n\tfor(int i = a; i <= b; i ++){\n\t\tint j = i, h = 0;\n\t\tprintf(\"%d=\", i);\n\t\tif( !p[i] )\t{\n\t\t\tprintf(\"%d\\n\", i);\n\t\t\tcontinue;\n\t\t}\n\t\twhile ( j > 1 ){\n\t\t\twhile ( j % P[h] == 0 ){\n\t\t\t\tif( j == P[h] )\n\t\t\t\t\tcout << P[h];\n\t\t\t\telse\n\t\t\t\t\tcout << P[h] << \"*\";\n\t\t\t\tj /= P[h];\n\t\t\t}\n\t\t\th ++;\n\t\t}\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n## BEGIN 17:\n[矩阵乘法](http://lx.lanqiao.cn/problem.page?58)\n### 问题描述\n```\n给定一个N阶矩阵A，输出A的M次幂（M是非负整数）\n例如：\n　　A =\n　　1 2\n　　3 4\n　　A的2次幂\n　　7 10\n　　15 22\n```\n**输入格式**\n```\n第一行是一个正整数N、M（1<=N<=30, 0<=M<=5），表示矩阵A的阶数和要求的幂数\n接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值\n```\n**输出格式**\n```\n输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开\n```\n**样例输入**\n```\n2 2\n1 2\n3 4\n```\n**样例输出**\n```\n7 10\n15 22\n```\n\n**问题分析**\n直接对矩阵进行乘法运算，但要注意一点的是，数组开int类型会爆。\n也可以学习矩阵快速幂。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nint n;\ntypedef struct matnode{\n\tll a[31][31];\n\tvoid reset (){\n\t\tfor (int i = 0; i < n; i ++)\n\t\t\ta[i][i] = 1;\n\t}\n\tvoid print(){\n\t\tfor (int i = 0; i < n; i ++){\n\t\t\tfor (int j = 0; j < n; j ++)\n\t\t\t\tprintf(\"%lld \", a[i][j]);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n}mat;\n\nmat operator * ( mat a, mat b ){  // 重载乘法\n\tmat ans;\n\tfor (int i = 0; i < n; i ++)\n\t\tfor (int j = 0; j < n; j ++){\n\t\t\tans.a[i][j] = 0;\n\t\t\tfor (int k = 0; k < n; k ++)\n\t\t\t\tans.a[i][j] += a.a[i][k] * b.a[k][j];\n\t}\n\treturn ans;\n}\n\nmat qpow( mat a, int m ){   //快速幂\n\tmat ans;\n\tans.reset();\n\twhile ( m ){\n\t\tif( m & 1 )\n\t\t\tans = ans * a;\n\t\ta = a * a;\n\t\tm /= 2;\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint  m;\n\tcin >> n >> m;\n\tmat a;\n\tfor (int i = 0; i < n; i ++)\n\t\tfor (int j = 0; j < n; j ++)\n\t\t\tscanf (\"%lld\", &a.a[i][j]);\n\ta = qpow( a, m );\n\ta.print();\n\t\n\treturn 0;\n}\n\n```\n\n\n\n\n","source":"_posts/蓝桥杯试题集-基础练习.md","raw":"---\ntitle: 蓝桥杯试题集_基础练习\ndate: 2019-02-20 16:22:50\ntags: 蓝桥杯\ncategories: C/C++\ndescription: 基础。\n---\n\n[蓝桥杯基础练习](http://lx.lanqiao.cn/problemset.page?code=BASIC-)\n\n## BASIC 1 [闰年判断 ](http://lx.lanqiao.cn/problem.page?gpid=T5)\n\n**问题描述**\n```\n给定一个年份，判断这一年是不是闰年。\n当以下情况之一满足时，这一年是闰年：\n1. 年份是4的倍数而不是100的倍数；\n2. 年份是400的倍数。\n其他的年份都不是闰年。\n```\n**输入格式**\n```\n输入包含一个整数y，表示当前的年份。\n```\n**输出格式**\n```\n输出一行，如果给定的年份是闰年，则输出yes，否则输出no。\n说明：当试题指定你输出一个字符串作为结果（比如本题的yes或者no，你需要严格按照试题中给定的大小写，写错大小写将不得分。\n```\n**样例输入**\n```\n2013\n```\n**样例输出**\n```\nno\n```\n**样例输入**\n```\n2016\n```\n**样例输出**\n```\nyes\n```\n**数据规模与约定**\n```\n1990 <= y <= 2050\n```\n\n**问题分析**\n略\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint y;\n\tcin >> y;\n\tif( y % 4 == 0 && ( y % 400 == 0 || y % 100 != 0) )\n\t\tputs(\"yes\");\n\telse puts(\"no\");\n\treturn 0;\n}\n```\n\n## BASIC 2 [01字串](http://lx.lanqiao.cn/problem.page?gpid=T6)\n\n**问题描述**\n```\n对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：\n00000\n00001\n00010\n00011\n00100\n请按从小到大的顺序输出这32种01串。\n```\n\n**输入格式**\n```\n本试题没有输入。\n```\n**输出格式**\n```\n输出32行，按从小到大的顺序每行一个长度为5的01串。\n```\n**样例输出**\n```markdown\n00000\n00001\n00010\n00011\n<以下部分省略>\n```\n\n**问题分析**\n1. 可以循环嵌套实现\n2. 可以模拟二进制直接从低位到高位逢2进位\n3. 也可以直接使用STL的容器bitset\n\n### AC代码\n```C++\n// 循环嵌套\n# include <bits/stdc++.h>\nusing namespace std;\nint main(){\n\tfor(int i1 = 0; i1 < 2; i1 ++)\n\t\tfor(int i2 = 0; i2 < 2; i2 ++)\n\t\t\tfor(int i3 = 0; i3 < 2; i3 ++)\n\t\t\t\tfor(int i4 = 0; i4 < 2; i4 ++)\n\t\t\t\t\tfor(int i5 = 0; i5 < 2; i5 ++)\n\t\t\t\t\t\tcout << i1<< i2 << i3 << i4 << i5 << endl;\n\treturn 0;\n}\n```\n\n```C++\n// 模拟二进制\n# include <bits/stdc++.h>\nusing namespace std;\nint main(){\n\tstring a = \"00000\";\n\tfor(int i = 0; i < 32 ; i ++){\n\t\tcout << a << endl;\n\t\ta[4] += 1;\n\t\tfor(int j = 4 ; j >= 0 ; j --)\n\t\t\tif(a[j] == '2'){\n\t\t\t\ta[j - 1] += 1;\n\t\t\t\ta[j] = '0';\n\t\t\t}\n\t}\n\treturn 0;\n}\n```\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tfor (int i = 0; i < 32; i ++){\n\t\tbitset<5> b(i);   // 头文件 <bitset>\n\t\tcout << b << endl;\n\t} \n\treturn 0;\n}\n\n// bitset 容器每个位置存储值只能为0和1\n// 用在这里正好合适\n```\n[bitset文档](http://www.cplusplus.com/reference/bitset/bitset/)\n\n\n## BASIC 3 [字母图形](http://lx.lanqiao.cn/problem.page?gpid=T7)\n\n**问题描述**\n```\n利用字母可以组成一些美丽的图形，下面给出了一个例子：\nABCDEFG\nBABCDEF\nCBABCDE\nDCBABCD\nEDCBABC\n这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。\n```\n**输入格式**\n```\n输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。\n```\n**输出格式**\n```\n输出n行，每个m个字符，为你的图形。\n```\n**样例输入**\n```\n5 7\n```\n**样例输出**\n```markdown\nABCDEFG\nBABCDEF\nCBABCDE\nDCBABCD\nEDCBABC\n```\n**数据规模与约定**\n```\n1 <= n, m <= 26\n```\n\n**问题分析**\n可以直接两层循环直接输出ASCII码\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i ++){\n\t\tfor (int j = 0; j < m; j ++)\n\t\t\tputchar( abs(j - i) + 65 );  \n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n\n## BASIC 4 [数列特征](http://lx.lanqiao.cn/problem.page?gpid=T8)\n\n**问题描述**\n```\n给出n个数，找出这n个数的最大值，最小值，和。\n```\n**输入格式**\n```\n第一行为整数n，表示数的个数\n第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。\n```\n**输出格式**\n```\n输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。\n```\n**样例输入**\n```\n5\n1  3  -2  4  5\n```\n**样例输出**\n```markdown\n5\n-2\n11\n```\n**数据规模与约定**\n```\n1 <= n <= 10000\n```\n\n**问题分析**\n在读入的过程中判断是否是最小和最大值，并加进总和中\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n, x, Min = 10000, Max = -10000, sum = 0;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i ++){\n\t\tscanf(\"%d\", &x);\n\t\tMin = min(Min, x);\n\t\tMax = max(Max, x);\n\t\tsum += x;\n\t}\n\tprintf(\"%d\\n%d\\n%d\\n\", Max, Min, sum);\n\treturn 0;\n}\n```\n\n## BASIC 5 [查找整数](http://lx.lanqiao.cn/problem.page?gpid=T9)\n\n**问题描述**\n```markdown\n给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。\n```\n**输入格式**\n```markdown\n第一行包含一个整数n。\n第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。\n第三行包含一个整数a，为待查找的数。\n```\n**输出格式**\n```markdown\n如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。\n```\n**样例输入**\n```markdown\n6\n1 9 4 8 3 9\n9\n```\n**样例输出**\n```markdown\n2\n```\n**数据规模与约定**\n```markdown\n1 <= n <= 1000\n```\n\n**问题分析**\n读取数组, 然后使用find函数\t\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n, x;\n\tint a[1001];\n\tscanf (\"%d\", &n);\n\tfor (int i = 0; i < n; i ++)\n\t\tscanf(\"%d\", a + i);\n\tscanf (\"%d\", &x);\n\tint ans = find(a, a + n, x) - a;\n\tif( ans != n ) cout << ans + 1;\n\telse puts(\"-1\");\n\treturn 0;\n}\n```\n　　\n给出n，输出它的前n行。\n\n## BASIC 6 [杨辉三角形](http://lx.lanqiao.cn/problem.page?gpid=T10)\n\n**问题描述**\n```markdown\n杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。\n它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。\n下面给出了杨辉三角形的前4行：　\n   1\n  1 1\n 1 2 1　　\n1 3 3 1\n```\n**输入格式**\n```markdown\n输入包含一个数n。\n```\n**输出格式**\n```markdown\n输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。\n```\n**样例输入**\n```markdown\n4\n```\n**样例输出**\n```markdown\n1\n1 1\n1 2 1\n1 3 3 1\n```\n**数据规模与约定**\n```markdown\n1 <= n <= 34\n```\n\n**问题分析**\n略\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\tint a[35];\n\tmemset(a, 0, sizeof(a));\n\ta[0] = 1;\n\tfor (int i = 1; i <= n; i ++){\n\t\tfor (int j = 0; j < i; j ++)\n\t\t\tprintf (\"%d \", a[j]);\n\t\tint temp = 1;\n\t\tfor (int j = 1; j <= i + 1; j ++){\n\t\t\ttemp = a[j] + temp;\n\t\t\tswap(temp, a[j]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n\n\n## BASIC 7 [特殊的数字](http://lx.lanqiao.cn/problem.page?gpid=T46)\n**问题描述**\n```markdown\n153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1*1*1+5*5*5+3*3*3。编程求所有满足这种条件的三位十进制数。\n```\n**输出格式**\n```markdown\n按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。\n```\n**问题分析**\n循环跑一遍，公式都给了，范围是三位数\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h> \nusing namespace std;\n\nint main(){\n\tint i,a,b,c; \n\tfor(i = 100; i < 1000; i ++){\n\t\ta = i  /100;\t// 百位\t\n\t\tb = ( i % 100 ) / 10;\t// 十位 \n\t\tc = i % 10;\t\t// 个位 \n\t\tif(i == a * a * a + b * b * b + c * c * c)\n\t\t\tcout << i << endl; \n\t} \n\treturn 0;\n}\n```\n## BASIC 8 [回文数](http://lx.lanqiao.cn/problem.page?gpid=T47)\n**问题描述**\n```markdown\n1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。\n```\n**输出格式**\n```markdown\n按从小到大的顺序输出满足条件的四位十进制数。\n```\n**问题分析**\n直接循环找到千位和个位相等，百位和十位相等。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tfor (int i = 1001; i < 10000; i ++){\n\t\tif( i % 10 == i / 1000 && i % 100 / 10 == i / 100 % 10)\n\t\t\tcout << i << endl;\n\t}\t\n\treturn 0;\n}\n```\n\n## BASIC 9 [特殊回文数](http://lx.lanqiao.cn/problem.page?gpid=T48)\n**问题描述**\n```markdown\n123321是一个非常特殊的数，它从左边读和从右边读是一样的。\n输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。\n```\n**输入格式**\n```markdown\n输入一行，包含一个正整数n。\n```\n**输出格式**\n```markdown\n按从小到大的顺序输出满足条件的整数，每个整数占一行。\n```\n**样例输入**\n```markdown\n52\n```\n**样例输出**\n```markdown\n899998\n989989\n998899\n```\n**数据规模与约定**\n```markdown\n1 <= n <= 54\n```\n**问题分析**\n六位数是回文数，且六个数总和是n。\n取高三位，总和为n / 2。因此如果为奇数则一定没有解。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin >> n;\n\tif( n % 2 != 0 )\n\t\tfor (int i = 1; i < 10; i ++)\n\t\t\tfor (int j = 0; j < 10; j ++)\n\t\t\t\tfor (int k = 0; k < 10; k ++)\n\t\t\t\t\tif( i + j + k == n / 2)\n\t\t\t\t\t\tcout << i << j << k << k << j << i << endl;\n\treturn 0;\n}\n```\n\n## BASIC 10 [十进制转十六进制](http://lx.lanqiao.cn/problem.page?gpid=T49)\n**问题描述**\n```markdown\n十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。\n十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。\n给出一个非负整数，将它表示成十六进制的形式。\n```\n**输入格式**\n```markdown\n输入包含一个非负整数a，表示要转换的数。0<=a<=2147483647\n```\n**输出格式**\n```markdown\n输出这个整数的16进制表示\n```\n**样例输入**\n```markdown\n30\n```\n**样例输出**\n```markdown\n1E\n```\n**问题分析**\n这类问题模仿十进制转二进制的过程即可，使用了STL的string\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nstring Turn(int n, int d){\n\tstring ans;\n\tif( !n ) puts(\"0\");\n\twhile ( n ){\n\t\tint x = n % d;\n\t\tif( x < 10 ) ans += x + 48;\n\t\telse ans += 55 + x;\n\t\tn /= d;\n\t}\n\treverse(ans.begin(), ans.end());\n\treturn ans;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\tcout << Turn(n, 16);\n\treturn 0;\n}\n```\n\n## BASIC 11 [十六进制转十进制](http://lx.lanqiao.cn/problem.page?gpid=T50)\n**问题描述**\n```markdown\n从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。\n注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。\n```\n**样例输入**\n```markdown\nFFFF\n```\n**样例输出**\n```markdown\n65535\n```\n**问题分析**\n(FFFF)<sub>H</sub> => (65535)<sub>D</sub>\n也就是 F * 16 <sup>0</sup> + F * 16 <sup>1</sup> + F * 16 <sup>2</sup> + F * 16 <sup>3</sup> = 65535.\n这里F代表的是数字15\n需要注意的是不能用int，FFFFFFFF会爆int。\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nunsigned int Pow(int d, int p){\n\tunsigned int mul = 1;\n\twhile ( -- p ) mul *= d;\n\treturn mul;\n}\n\nunsigned int Turn(string str, int d){\n\tunsigned int sum = 0;\n\tfor (int i = str.size() - 1; i >= 0; i --)\n\t\tif( str[i] < 57 )\n\t\t\tsum += (str[i] - 48) * Pow(d, str.size() - i);\n\t\telse\n\t\t\tsum += (str[i] - 55) * Pow(d, str.size() - i);\n\treturn sum;\n}\n\nint main(){\n\tstring str;\n\tcin >> str;\n\tcout << Turn(str, 16);\n\treturn 0;\n}\n```\n\n\n## BASIC 12 [十六进制转八进制](http://lx.lanqiao.cn/problem.page?gpid=T51)\n**问题描述**\n```markdown\n给定n个十六进制正整数，输出它们对应的八进制数。\n```\n**输入格式**\n```\n输入的第一行为一个正整数n （1<=n<=10）。\n接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。\n```\n**输出格式**\n```\n输出n行，每行为输入对应的八进制正整数。\n【注意】\n输入的十六进制数不会有前导0，比如012A。\n输出的八进制数也不能有前导0。\n```\n**样例输入**\n```markdown\n2\n39\n123ABC\n```\n**样例输出**\n```markdown\n71\n4435274\n```\n**提示**\n先将十六进制数转换成某进制数，再由某进制数转换成八进制。\n\n**问题分析**\n很多人第一眼看到这题，十六进制转十进制再转八进制即可，思路同上两题。但这题要注意到的是数据范围，每个十六进制数长度不超过100000。\n我的做法是转成二进制，而不是十进制。\n这个对上题的代码需要进行改动。\n但to_string函数编译不通过手写一个To_string。\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nstring hexTurnbin(string str){\n\tstring bin;\n\tfor (int i = 0; i < str.size(); i ++){\n\t\tint hex = str[i] < 65 ? str[i] - 48 : str[i] - 55;\n\t\tstring t;\n\t\twhile( hex ){\n\t\t\tt += hex % 2 + 48;\n\t\t\thex /= 2;\n\t\t}\n\t\treverse(t.begin(), t.end());\n\t\tfor (int i = t.size(); i < 4; i ++) bin += '0';  // 二进制补前置0\n\t\tbin += t;\n\t}\n\treturn bin;\n}\n\nstring To_string(int n){\n\tstring str;\n\tif( n )\n\t\twhile( n ){\n\t\t\tstr += (n % 10 + 48);\n\t\t\tn /= 10;\n\t\t}\n\telse str = \"0\";\n\treverse(str.begin(), str.end());\n\treturn str;\n}\n\nstring binTurnoct(string str){\n\tstring oct;\n\tint M = 1, mul = 0;\n\tfor (int i = str.size() - 1; i >= 0; i --){\n\t\tmul += M * (str[i] - 48);\n\t\tM *= 2;\n\t\tif( M == 8 ){\n\t\t\tM = 1;\n\t\t\toct += To_string(mul);  // to_string 用于int 转成 string\n\t\t\tmul = 0;\n\t\t}\n\t}\n\tif( mul ) oct += To_string(mul);\n\treverse(oct.begin(), oct.end());\n\treturn oct;\n}\n\nint main(){\n\tint n;\n\tcin >> n;\n\twhile ( n -- ){\n\t\tstring str;\n\t\tcin >> str;\n\t\tstr = hexTurnbin(str);\n\t\tstr = binTurnoct(str);\n\t\tint i = 0;\n\t\tfor (; i < str.size(); i ++) if( str[i] != 48 ) break;\n\t\tfor (; i < str.size(); i ++) putchar(str[i]);\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n\n## BASIC 13 [数列排序](http://lx.lanqiao.cn/problem.page?gpid=T52)\n**问题描述**\n```markdown\n给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1<=n<=200\n```\n**输入格式**\n```markdown\n第一行为一个整数n。\n第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。\n```\n**输出格式**\n```markdown\n输出一行，按从小到大的顺序输出排序后的数列。\n```\n**样例输入**\n```markdown\n5\n8 3 6 4 9\n```\n**样例输出**\n```markdown\n3 4 6 8 9\n```\n**问题分析**\n直接使用algorithm里面的sort函数即可(有兴趣可以自己了解sort实现的方法)\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint a[201];\nint main(){\n\tint n;\n\tcin >> n;\n\tfor(int i = 0; i < n; i ++)\n\t\tscanf(\"%d\", &a[i]);\n\tsort(a, a + n);\n\tfor(int i = 0; i < n; i ++)\n\t\tprintf(\"%d \", a[i]);\n\treturn 0;\n}\n```\n\n\n## BASIC 14 [时间转换](http://lx.lanqiao.cn/problem.page?gpid=T54)\n**问题描述**\n```markdown\n给定一个以秒为单位的时间t，要求用“<H>:<M>:<S>”的格式来表示这个时间。<H>表示时间，<M>表示分钟，而<S>表示秒，它们都是整数且没有前导的“0”。例如，若t=0，则应输出是“0:0:0”；若t=3661，则输出“1:1:1”。\n```\n**输入格式**\n```markdown\n输入只有一行，是一个整数t（0<=t<=86399）。\n```\n**输出格式**\n```markdown\n输出只有一行，是以“<H>:<M>:<S>”的格式所表示的时间，不包括引号。\n```\n**样例输入**\n```markdown\n0\n```\n**样例输出**\n```markdown\n0:0:0\n```\n**样例输入**\n```markdown\n5436\n```\n**样例输出**\n```markdown\n1:30:36\n```\n**问题分析**\n略\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tint t;\n\tcin >> t;\n\tprintf(\"%d:%d:%d\", t / 3600 , (t / 60 % 60), t % 60);\n\treturn 0;\n}\n```\n\n## BASIC 15 [字符串对比](http://lx.lanqiao.cn/problem.page?gpid=T56)\n**问题描述**\n```markdown\n　　给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一：\n　　1：两个字符串长度不等。比如 Beijing 和 Hebei\n　　2：两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如 Beijing 和 Beijing\n　　3：两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如 beijing 和 BEIjing\n　　4：两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如 Beijing 和 Nanjing\n　　编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。\n```\n**输入格式**\n```markdown\n包括两行，每行都是一个字符串\n```\n**输出格式**\n```markdown\n仅有一个数字，表明这两个字符串的关系编号\n```\n**样例输入**\n```markdown\nBEIjing\nbeiJing \n```\n**样例输出**\n```markdown\n3\n```\n**问题分析**\n使用transform 函数使string 整个转大写或小写。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tstring str1, str2;\n\tcin >> str1 >> str2;\n\tif ( str1.size() != str2.size() ) cout << \"1\";\n\telse if ( str1 == str2 ) cout << \"2\";\n\telse{\n\t\ttransform(str1.begin(), str1.end(), str1.begin(), ::toupper);\n\t\ttransform(str2.begin(), str2.end(), str2.begin(), ::toupper);\n\t\tif( str1 == str2 ) cout << \"3\";\n\t\telse cout << \"4\";\n\t}\n\treturn 0;\n}\n```\n\n## BASIC 16 [分解质因数 ](http://lx.lanqiao.cn/problem.page?gpid=T57)\n**问题描述**\n```markdown\n求出区间[a,b]中所有整数的质因数分解。\n```\n**输入格式**\n```markdown\n输入两个整数a，b。\n```\n**输出格式**\n```markdown\n每行输出一个数的分解，形如k=a1*a2*a3...(a1<=a2<=a3...，k也是从小到大的)(具体可看样例)\n```\n**样例输入**\n```markdown\n3 10\n```\n**样例输出**\n```markdown\n3=3\n4=2*2\n5=5\n6=2*3\n7=7\n8=2*2*2\n9=3*3\n10=2*5\n```\n**提示**\n先筛出所有素数，然后再分解。\n\n**数据规模与约定**\n```markdown\n1 <= n <= 1,000,000\n```\n**问题分析**\n打出素数表，然后按素数表顺序用 2 3 5 7 9，依次选择。\n若可以整除，则除以这个素数。\n\n例如 18 = 2， 3， 3。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\nint a, b, k = 0;\nint p[10001];\nint P[5000];\nvoid init(){\n\tmemset(p, 0, sizeof(p));\n\tp[0] = p[1] = 1;\n\tfor (int i = 2; i <= b; i ++)\n\t\tif( !p[i] ){\n\t\t\tP[k ++] = i;\n\t\t\tfor (int j = 2; i * j <= b; j ++)\n\t\t\t\tp[i * j] = 1;\n\t\t}\t\n}\n\nint main(){\n\tcin >> a >> b;\n\tinit();\n\tfor(int i = a; i <= b; i ++){\n\t\tint j = i, h = 0;\n\t\tprintf(\"%d=\", i);\n\t\tif( !p[i] )\t{\n\t\t\tprintf(\"%d\\n\", i);\n\t\t\tcontinue;\n\t\t}\n\t\twhile ( j > 1 ){\n\t\t\twhile ( j % P[h] == 0 ){\n\t\t\t\tif( j == P[h] )\n\t\t\t\t\tcout << P[h];\n\t\t\t\telse\n\t\t\t\t\tcout << P[h] << \"*\";\n\t\t\t\tj /= P[h];\n\t\t\t}\n\t\t\th ++;\n\t\t}\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```\n## BEGIN 17:\n[矩阵乘法](http://lx.lanqiao.cn/problem.page?58)\n### 问题描述\n```\n给定一个N阶矩阵A，输出A的M次幂（M是非负整数）\n例如：\n　　A =\n　　1 2\n　　3 4\n　　A的2次幂\n　　7 10\n　　15 22\n```\n**输入格式**\n```\n第一行是一个正整数N、M（1<=N<=30, 0<=M<=5），表示矩阵A的阶数和要求的幂数\n接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值\n```\n**输出格式**\n```\n输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开\n```\n**样例输入**\n```\n2 2\n1 2\n3 4\n```\n**样例输出**\n```\n7 10\n15 22\n```\n\n**问题分析**\n直接对矩阵进行乘法运算，但要注意一点的是，数组开int类型会爆。\n也可以学习矩阵快速幂。\n\n### AC代码\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nint n;\ntypedef struct matnode{\n\tll a[31][31];\n\tvoid reset (){\n\t\tfor (int i = 0; i < n; i ++)\n\t\t\ta[i][i] = 1;\n\t}\n\tvoid print(){\n\t\tfor (int i = 0; i < n; i ++){\n\t\t\tfor (int j = 0; j < n; j ++)\n\t\t\t\tprintf(\"%lld \", a[i][j]);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n}mat;\n\nmat operator * ( mat a, mat b ){  // 重载乘法\n\tmat ans;\n\tfor (int i = 0; i < n; i ++)\n\t\tfor (int j = 0; j < n; j ++){\n\t\t\tans.a[i][j] = 0;\n\t\t\tfor (int k = 0; k < n; k ++)\n\t\t\t\tans.a[i][j] += a.a[i][k] * b.a[k][j];\n\t}\n\treturn ans;\n}\n\nmat qpow( mat a, int m ){   //快速幂\n\tmat ans;\n\tans.reset();\n\twhile ( m ){\n\t\tif( m & 1 )\n\t\t\tans = ans * a;\n\t\ta = a * a;\n\t\tm /= 2;\n\t}\n\treturn ans;\n}\n\nint main(){\n\tint  m;\n\tcin >> n >> m;\n\tmat a;\n\tfor (int i = 0; i < n; i ++)\n\t\tfor (int j = 0; j < n; j ++)\n\t\t\tscanf (\"%lld\", &a.a[i][j]);\n\ta = qpow( a, m );\n\ta.print();\n\t\n\treturn 0;\n}\n\n```\n\n\n\n\n","slug":"蓝桥杯试题集-基础练习","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hhh003ya7s1pqhf8p24","content":"<p><a href=\"http://lx.lanqiao.cn/problemset.page?code=BASIC-\" target=\"_blank\" rel=\"noopener\">蓝桥杯基础练习</a></p>\n<h2 id=\"BASIC-1-闰年判断\"><a href=\"#BASIC-1-闰年判断\" class=\"headerlink\" title=\"BASIC 1 闰年判断 \"></a>BASIC 1 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T5\" target=\"_blank\" rel=\"noopener\">闰年判断 </a></h2><p><strong>问题描述</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定一个年份，判断这一年是不是闰年。</span><br><span class=\"line\">当以下情况之一满足时，这一年是闰年：</span><br><span class=\"line\">1. 年份是4的倍数而不是100的倍数；</span><br><span class=\"line\">2. 年份是400的倍数。</span><br><span class=\"line\">其他的年份都不是闰年。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个整数y，表示当前的年份。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，如果给定的年份是闰年，则输出yes，否则输出no。</span><br><span class=\"line\">说明：当试题指定你输出一个字符串作为结果（比如本题的yes或者no，你需要严格按照试题中给定的大小写，写错大小写将不得分。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2013</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2016</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yes</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1990 &lt;= y &lt;= 2050</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>略</p>\n<h3 id=\"AC代码\"><a href=\"#AC代码\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> y;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; y;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( y % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; ( y % <span class=\"number\">400</span> == <span class=\"number\">0</span> || y % <span class=\"number\">100</span> != <span class=\"number\">0</span>) )</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"yes\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">\"no\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-2-01字串\"><a href=\"#BASIC-2-01字串\" class=\"headerlink\" title=\"BASIC 2 01字串\"></a>BASIC 2 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T6\" target=\"_blank\" rel=\"noopener\">01字串</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：</span><br><span class=\"line\">00000</span><br><span class=\"line\">00001</span><br><span class=\"line\">00010</span><br><span class=\"line\">00011</span><br><span class=\"line\">00100</span><br><span class=\"line\">请按从小到大的顺序输出这32种01串。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本试题没有输入。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出32行，按从小到大的顺序每行一个长度为5的01串。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">00000</span><br><span class=\"line\">00001</span><br><span class=\"line\">00010</span><br><span class=\"line\">00011</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">以下部分省略</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong></p>\n<ol>\n<li>可以循环嵌套实现</li>\n<li>可以模拟二进制直接从低位到高位逢2进位</li>\n<li>也可以直接使用STL的容器bitset</li>\n</ol>\n<h3 id=\"AC代码-1\"><a href=\"#AC代码-1\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 循环嵌套</span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i1 = <span class=\"number\">0</span>; i1 &lt; <span class=\"number\">2</span>; i1 ++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i2 = <span class=\"number\">0</span>; i2 &lt; <span class=\"number\">2</span>; i2 ++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i3 = <span class=\"number\">0</span>; i3 &lt; <span class=\"number\">2</span>; i3 ++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i4 = <span class=\"number\">0</span>; i4 &lt; <span class=\"number\">2</span>; i4 ++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i5 = <span class=\"number\">0</span>; i5 &lt; <span class=\"number\">2</span>; i5 ++)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; i1&lt;&lt; i2 &lt;&lt; i3 &lt;&lt; i4 &lt;&lt; i5 &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 模拟二进制</span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> a = <span class=\"string\">\"00000\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">32</span> ; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; a &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\ta[<span class=\"number\">4</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">4</span> ; j &gt;= <span class=\"number\">0</span> ; j --)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a[j] == <span class=\"string\">'2'</span>)&#123;</span><br><span class=\"line\">\t\t\t\ta[j - <span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\ta[j] = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">32</span>; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">bitset</span>&lt;5&gt; b(i);   <span class=\"comment\">// 头文件 &lt;bitset&gt;</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; b &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bitset 容器每个位置存储值只能为0和1</span></span><br><span class=\"line\"><span class=\"comment\">// 用在这里正好合适</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://www.cplusplus.com/reference/bitset/bitset/\" target=\"_blank\" rel=\"noopener\">bitset文档</a></p>\n<h2 id=\"BASIC-3-字母图形\"><a href=\"#BASIC-3-字母图形\" class=\"headerlink\" title=\"BASIC 3 字母图形\"></a>BASIC 3 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T7\" target=\"_blank\" rel=\"noopener\">字母图形</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用字母可以组成一些美丽的图形，下面给出了一个例子：</span><br><span class=\"line\">ABCDEFG</span><br><span class=\"line\">BABCDEF</span><br><span class=\"line\">CBABCDE</span><br><span class=\"line\">DCBABCD</span><br><span class=\"line\">EDCBABC</span><br><span class=\"line\">这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出n行，每个m个字符，为你的图形。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5 7</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ABCDEFG</span><br><span class=\"line\">BABCDEF</span><br><span class=\"line\">CBABCDE</span><br><span class=\"line\">DCBABCD</span><br><span class=\"line\">EDCBABC</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= n, m &lt;= 26</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>可以直接两层循环直接输出ASCII码</p>\n<h3 id=\"AC代码-2\"><a href=\"#AC代码-2\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j ++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">putchar</span>( <span class=\"built_in\">abs</span>(j - i) + <span class=\"number\">65</span> );  </span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-4-数列特征\"><a href=\"#BASIC-4-数列特征\" class=\"headerlink\" title=\"BASIC 4 数列特征\"></a>BASIC 4 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T8\" target=\"_blank\" rel=\"noopener\">数列特征</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给出n个数，找出这n个数的最大值，最小值，和。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一行为整数n，表示数的个数</span><br><span class=\"line\">第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">1  3  -2  4  5</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">-2</span><br><span class=\"line\">11</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= n &lt;= 10000</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>在读入的过程中判断是否是最小和最大值，并加进总和中</p>\n<h3 id=\"AC代码-3\"><a href=\"#AC代码-3\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, x, Min = <span class=\"number\">10000</span>, Max = <span class=\"number\">-10000</span>, sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;x);</span><br><span class=\"line\">\t\tMin = min(Min, x);</span><br><span class=\"line\">\t\tMax = max(Max, x);</span><br><span class=\"line\">\t\tsum += x;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n%d\\n%d\\n\"</span>, Max, Min, sum);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-5-查找整数\"><a href=\"#BASIC-5-查找整数\" class=\"headerlink\" title=\"BASIC 5 查找整数\"></a>BASIC 5 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T9\" target=\"_blank\" rel=\"noopener\">查找整数</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一行包含一个整数n。</span><br><span class=\"line\">第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。</span><br><span class=\"line\">第三行包含一个整数a，为待查找的数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">1 9 4 8 3 9</span><br><span class=\"line\">9</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">n</span> &lt;= <span class=\"string\">1000</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>读取数组, 然后使用find函数    </p>\n<h3 id=\"AC代码-4\"><a href=\"#AC代码-4\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, x;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">1001</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span> (<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, a + i);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span> (<span class=\"string\">\"%d\"</span>, &amp;x);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans = find(a, a + n, x) - a;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( ans != n ) <span class=\"built_in\">cout</span> &lt;&lt; ans + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">\"-1\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　<br>给出n，输出它的前n行。</p>\n<h2 id=\"BASIC-6-杨辉三角形\"><a href=\"#BASIC-6-杨辉三角形\" class=\"headerlink\" title=\"BASIC 6 杨辉三角形\"></a>BASIC 6 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T10\" target=\"_blank\" rel=\"noopener\">杨辉三角形</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。</span><br><span class=\"line\">它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。</span><br><span class=\"line\">下面给出了杨辉三角形的前4行：　</span><br><span class=\"line\">   1</span><br><span class=\"line\">  1 1</span><br><span class=\"line\"> 1 2 1　　</span><br><span class=\"line\">1 3 3 1</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个数n。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">1 1</span><br><span class=\"line\">1 2 1</span><br><span class=\"line\">1 3 3 1</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">n</span> &lt;= <span class=\"string\">34</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>略</p>\n<h3 id=\"AC代码-5\"><a href=\"#AC代码-5\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">35</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(a, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">\ta[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i; j ++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span> (<span class=\"string\">\"%d \"</span>, a[j]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> temp = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= i + <span class=\"number\">1</span>; j ++)&#123;</span><br><span class=\"line\">\t\t\ttemp = a[j] + temp;</span><br><span class=\"line\">\t\t\tswap(temp, a[j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-7-特殊的数字\"><a href=\"#BASIC-7-特殊的数字\" class=\"headerlink\" title=\"BASIC 7 特殊的数字\"></a>BASIC 7 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T46\" target=\"_blank\" rel=\"noopener\">特殊的数字</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1<span class=\"emphasis\">*1*</span>1+5<span class=\"emphasis\">*5*</span>5+3<span class=\"emphasis\">*3*</span>3。编程求所有满足这种条件的三位十进制数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>循环跑一遍，公式都给了，范围是三位数</p>\n<h3 id=\"AC代码-6\"><a href=\"#AC代码-6\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt; </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,a,b,c; </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">100</span>; i &lt; <span class=\"number\">1000</span>; i ++)&#123;</span><br><span class=\"line\">\t\ta = i  /<span class=\"number\">100</span>;\t<span class=\"comment\">// 百位\t</span></span><br><span class=\"line\">\t\tb = ( i % <span class=\"number\">100</span> ) / <span class=\"number\">10</span>;\t<span class=\"comment\">// 十位 </span></span><br><span class=\"line\">\t\tc = i % <span class=\"number\">10</span>;\t\t<span class=\"comment\">// 个位 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i == a * a * a + b * b * b + c * c * c)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; <span class=\"built_in\">endl</span>; </span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-8-回文数\"><a href=\"#BASIC-8-回文数\" class=\"headerlink\" title=\"BASIC 8 回文数\"></a>BASIC 8 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T47\" target=\"_blank\" rel=\"noopener\">回文数</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按从小到大的顺序输出满足条件的四位十进制数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>直接循环找到千位和个位相等，百位和十位相等。</p>\n<h3 id=\"AC代码-7\"><a href=\"#AC代码-7\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1001</span>; i &lt; <span class=\"number\">10000</span>; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( i % <span class=\"number\">10</span> == i / <span class=\"number\">1000</span> &amp;&amp; i % <span class=\"number\">100</span> / <span class=\"number\">10</span> == i / <span class=\"number\">100</span> % <span class=\"number\">10</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-9-特殊回文数\"><a href=\"#BASIC-9-特殊回文数\" class=\"headerlink\" title=\"BASIC 9 特殊回文数\"></a>BASIC 9 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T48\" target=\"_blank\" rel=\"noopener\">特殊回文数</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">123321是一个非常特殊的数，它从左边读和从右边读是一样的。</span><br><span class=\"line\">输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入一行，包含一个正整数n。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按从小到大的顺序输出满足条件的整数，每个整数占一行。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">52</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">899998</span><br><span class=\"line\">989989</span><br><span class=\"line\">998899</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">n</span> &lt;= <span class=\"string\">54</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>六位数是回文数，且六个数总和是n。<br>取高三位，总和为n / 2。因此如果为奇数则一定没有解。</p>\n<h3 id=\"AC代码-8\"><a href=\"#AC代码-8\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( n % <span class=\"number\">2</span> != <span class=\"number\">0</span> )</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">10</span>; i ++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; j ++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">10</span>; k ++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>( i + j + k == n / <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; j &lt;&lt; k &lt;&lt; k &lt;&lt; j &lt;&lt; i &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-10-十进制转十六进制\"><a href=\"#BASIC-10-十进制转十六进制\" class=\"headerlink\" title=\"BASIC 10 十进制转十六进制\"></a>BASIC 10 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T49\" target=\"_blank\" rel=\"noopener\">十进制转十六进制</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。</span><br><span class=\"line\">十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。</span><br><span class=\"line\">给出一个非负整数，将它表示成十六进制的形式。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个非负整数a，表示要转换的数。0<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=a</span>&lt;=<span class=\"string\">2147483647</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出这个整数的16进制表示</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">30</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1E</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>这类问题模仿十进制转二进制的过程即可，使用了STL的string</p>\n<h3 id=\"AC代码-9\"><a href=\"#AC代码-9\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">Turn</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> ans;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( !n ) <span class=\"built_in\">puts</span>(<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ( n )&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x = n % d;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( x &lt; <span class=\"number\">10</span> ) ans += x + <span class=\"number\">48</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> ans += <span class=\"number\">55</span> + x;</span><br><span class=\"line\">\t\tn /= d;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treverse(ans.begin(), ans.end());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; Turn(n, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-11-十六进制转十进制\"><a href=\"#BASIC-11-十六进制转十进制\" class=\"headerlink\" title=\"BASIC 11 十六进制转十进制\"></a>BASIC 11 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T50\" target=\"_blank\" rel=\"noopener\">十六进制转十进制</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。</span><br><span class=\"line\">注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FFFF</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">65535</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>(FFFF)<sub>H</sub> =&gt; (65535)<sub>D</sub><br>也就是 F <em> 16 <sup>0</sup> + F </em> 16 <sup>1</sup> + F <em> 16 <sup>2</sup> + F </em> 16 <sup>3</sup> = 65535.<br>这里F代表的是数字15<br>需要注意的是不能用int，FFFFFFFF会爆int。</p>\n<h3 id=\"AC代码-10\"><a href=\"#AC代码-10\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> <span class=\"title\">Pow</span><span class=\"params\">(<span class=\"keyword\">int</span> d, <span class=\"keyword\">int</span> p)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> mul = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ( -- p ) mul *= d;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mul;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> <span class=\"title\">Turn</span><span class=\"params\">(<span class=\"built_in\">string</span> str, <span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = str.size() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i --)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( str[i] &lt; <span class=\"number\">57</span> )</span><br><span class=\"line\">\t\t\tsum += (str[i] - <span class=\"number\">48</span>) * Pow(d, str.size() - i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tsum += (str[i] - <span class=\"number\">55</span>) * Pow(d, str.size() - i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> str;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; str;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; Turn(str, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-12-十六进制转八进制\"><a href=\"#BASIC-12-十六进制转八进制\" class=\"headerlink\" title=\"BASIC 12 十六进制转八进制\"></a>BASIC 12 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T51\" target=\"_blank\" rel=\"noopener\">十六进制转八进制</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定n个十六进制正整数，输出它们对应的八进制数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入的第一行为一个正整数n （1&lt;=n&lt;=10）。</span><br><span class=\"line\">接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出n行，每行为输入对应的八进制正整数。</span><br><span class=\"line\">【注意】</span><br><span class=\"line\">输入的十六进制数不会有前导0，比如012A。</span><br><span class=\"line\">输出的八进制数也不能有前导0。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">39</span><br><span class=\"line\">123ABC</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">71</span><br><span class=\"line\">4435274</span><br></pre></td></tr></table></figure></p>\n<p><strong>提示</strong><br>先将十六进制数转换成某进制数，再由某进制数转换成八进制。</p>\n<p><strong>问题分析</strong><br>很多人第一眼看到这题，十六进制转十进制再转八进制即可，思路同上两题。但这题要注意到的是数据范围，每个十六进制数长度不超过100000。<br>我的做法是转成二进制，而不是十进制。<br>这个对上题的代码需要进行改动。<br>但to_string函数编译不通过手写一个To_string。</p>\n<h3 id=\"AC代码-11\"><a href=\"#AC代码-11\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">hexTurnbin</span><span class=\"params\">(<span class=\"built_in\">string</span> str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> bin;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; str.size(); i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> hex = str[i] &lt; <span class=\"number\">65</span> ? str[i] - <span class=\"number\">48</span> : str[i] - <span class=\"number\">55</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">string</span> t;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>( hex )&#123;</span><br><span class=\"line\">\t\t\tt += hex % <span class=\"number\">2</span> + <span class=\"number\">48</span>;</span><br><span class=\"line\">\t\t\thex /= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treverse(t.begin(), t.end());</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = t.size(); i &lt; <span class=\"number\">4</span>; i ++) bin += <span class=\"string\">'0'</span>;  <span class=\"comment\">// 二进制补前置0</span></span><br><span class=\"line\">\t\tbin += t;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> bin;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">To_string</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> str;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( n )</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>( n )&#123;</span><br><span class=\"line\">\t\t\tstr += (n % <span class=\"number\">10</span> + <span class=\"number\">48</span>);</span><br><span class=\"line\">\t\t\tn /= <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> str = <span class=\"string\">\"0\"</span>;</span><br><span class=\"line\">\treverse(str.begin(), str.end());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">binTurnoct</span><span class=\"params\">(<span class=\"built_in\">string</span> str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> oct;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> M = <span class=\"number\">1</span>, mul = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = str.size() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i --)&#123;</span><br><span class=\"line\">\t\tmul += M * (str[i] - <span class=\"number\">48</span>);</span><br><span class=\"line\">\t\tM *= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( M == <span class=\"number\">8</span> )&#123;</span><br><span class=\"line\">\t\t\tM = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\toct += To_string(mul);  <span class=\"comment\">// to_string 用于int 转成 string</span></span><br><span class=\"line\">\t\t\tmul = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( mul ) oct += To_string(mul);</span><br><span class=\"line\">\treverse(oct.begin(), oct.end());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> oct;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ( n -- )&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">string</span> str;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; str;</span><br><span class=\"line\">\t\tstr = hexTurnbin(str);</span><br><span class=\"line\">\t\tstr = binTurnoct(str);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (; i &lt; str.size(); i ++) <span class=\"keyword\">if</span>( str[i] != <span class=\"number\">48</span> ) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (; i &lt; str.size(); i ++) <span class=\"built_in\">putchar</span>(str[i]);</span><br><span class=\"line\">\t\t<span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-13-数列排序\"><a href=\"#BASIC-13-数列排序\" class=\"headerlink\" title=\"BASIC 13 数列排序\"></a>BASIC 13 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T52\" target=\"_blank\" rel=\"noopener\">数列排序</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=n</span>&lt;=<span class=\"string\">200</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一行为一个整数n。</span><br><span class=\"line\">第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，按从小到大的顺序输出排序后的数列。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">8 3 6 4 9</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 4 6 8 9</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>直接使用algorithm里面的sort函数即可(有兴趣可以自己了解sort实现的方法)</p>\n<h3 id=\"AC代码-12\"><a href=\"#AC代码-12\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">201</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;a[i]);</span><br><span class=\"line\">\tsort(a, a + n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, a[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-14-时间转换\"><a href=\"#BASIC-14-时间转换\" class=\"headerlink\" title=\"BASIC 14 时间转换\"></a>BASIC 14 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T54\" target=\"_blank\" rel=\"noopener\">时间转换</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定一个以秒为单位的时间t，要求用“<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">H</span>&gt;</span></span>:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">M</span>&gt;</span></span>:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">S</span>&gt;</span></span>”的格式来表示这个时间。<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">H</span>&gt;</span></span>表示时间，<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">M</span>&gt;</span></span>表示分钟，而<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">S</span>&gt;</span></span>表示秒，它们都是整数且没有前导的“0”。例如，若t=0，则应输出是“0:0:0”；若t=3661，则输出“1:1:1”。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入只有一行，是一个整数t（0<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=t</span>&lt;=<span class=\"string\">86399）。</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出只有一行，是以“<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">H</span>&gt;</span></span>:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">M</span>&gt;</span></span>:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">S</span>&gt;</span></span>”的格式所表示的时间，不包括引号。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:0:0</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5436</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1:30:36</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>略</p>\n<h3 id=\"AC代码-13\"><a href=\"#AC代码-13\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> t;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d:%d:%d\"</span>, t / <span class=\"number\">3600</span> , (t / <span class=\"number\">60</span> % <span class=\"number\">60</span>), t % <span class=\"number\">60</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-15-字符串对比\"><a href=\"#BASIC-15-字符串对比\" class=\"headerlink\" title=\"BASIC 15 字符串对比\"></a>BASIC 15 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T56\" target=\"_blank\" rel=\"noopener\">字符串对比</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一：</span><br><span class=\"line\">　　1：两个字符串长度不等。比如 Beijing 和 Hebei</span><br><span class=\"line\">　　2：两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如 Beijing 和 Beijing</span><br><span class=\"line\">　　3：两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如 beijing 和 BEIjing</span><br><span class=\"line\">　　4：两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如 Beijing 和 Nanjing</span><br><span class=\"line\">　　编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">包括两行，每行都是一个字符串</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">仅有一个数字，表明这两个字符串的关系编号</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BEIjing</span><br><span class=\"line\">beiJing</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>使用transform 函数使string 整个转大写或小写。</p>\n<h3 id=\"AC代码-14\"><a href=\"#AC代码-14\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> str1, str2;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; str1 &gt;&gt; str2;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ( str1.size() != str2.size() ) <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( str1 == str2 ) <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"2\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\ttransform(str1.begin(), str1.end(), str1.begin(), ::<span class=\"built_in\">toupper</span>);</span><br><span class=\"line\">\t\ttransform(str2.begin(), str2.end(), str2.begin(), ::<span class=\"built_in\">toupper</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( str1 == str2 ) <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"3\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"4\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-16-分解质因数\"><a href=\"#BASIC-16-分解质因数\" class=\"headerlink\" title=\"BASIC 16 分解质因数 \"></a>BASIC 16 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T57\" target=\"_blank\" rel=\"noopener\">分解质因数 </a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">求出区间[a,b]中所有整数的质因数分解。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入两个整数a，b。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每行输出一个数的分解，形如k=a1<span class=\"emphasis\">*a2*</span>a3...(a1<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=a2</span>&lt;=<span class=\"string\">a3...，k也是从小到大的)(具体可看样例)</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 10</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3=3</span><br><span class=\"line\">4=2*2</span><br><span class=\"line\">5=5</span><br><span class=\"line\">6=2*3</span><br><span class=\"line\">7=7</span><br><span class=\"line\">8=2<span class=\"emphasis\">*2*</span>2</span><br><span class=\"line\">9=3*3</span><br><span class=\"line\">10=2*5</span><br></pre></td></tr></table></figure></p>\n<p><strong>提示</strong><br>先筛出所有素数，然后再分解。</p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">n</span> &lt;= <span class=\"string\">1,000,000</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>打出素数表，然后按素数表顺序用 2 3 5 7 9，依次选择。<br>若可以整除，则除以这个素数。</p>\n<p>例如 18 = 2， 3， 3。</p>\n<h3 id=\"AC代码-15\"><a href=\"#AC代码-15\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a, b, k = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> p[<span class=\"number\">10001</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> P[<span class=\"number\">5000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(p, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(p));</span><br><span class=\"line\">\tp[<span class=\"number\">0</span>] = p[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= b; i ++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( !p[i] )&#123;</span><br><span class=\"line\">\t\t\tP[k ++] = i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">2</span>; i * j &lt;= b; j ++)</span><br><span class=\"line\">\t\t\t\tp[i * j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a; i &lt;= b; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> j = i, h = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d=\"</span>, i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( !p[i] )\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, i);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> ( j &gt; <span class=\"number\">1</span> )&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> ( j % P[h] == <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>( j == P[h] )</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; P[h];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; P[h] &lt;&lt; <span class=\"string\">\"*\"</span>;</span><br><span class=\"line\">\t\t\t\tj /= P[h];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\th ++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-17\"><a href=\"#BEGIN-17\" class=\"headerlink\" title=\"BEGIN 17:\"></a>BEGIN 17:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?58\" target=\"_blank\" rel=\"noopener\">矩阵乘法</a></p>\n<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定一个N阶矩阵A，输出A的M次幂（M是非负整数）</span><br><span class=\"line\">例如：</span><br><span class=\"line\">　　A =</span><br><span class=\"line\">　　1 2</span><br><span class=\"line\">　　3 4</span><br><span class=\"line\">　　A的2次幂</span><br><span class=\"line\">　　7 10</span><br><span class=\"line\">　　15 22</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一行是一个正整数N、M（1&lt;=N&lt;=30, 0&lt;=M&lt;=5），表示矩阵A的阶数和要求的幂数</span><br><span class=\"line\">接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2 2</span><br><span class=\"line\">1 2</span><br><span class=\"line\">3 4</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">7 10</span><br><span class=\"line\">15 22</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>直接对矩阵进行乘法运算，但要注意一点的是，数组开int类型会爆。<br>也可以学习矩阵快速幂。</p>\n<h3 id=\"AC代码-16\"><a href=\"#AC代码-16\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">matnode</span>&#123;</span></span><br><span class=\"line\">\tll a[<span class=\"number\">31</span>][<span class=\"number\">31</span>];</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">reset</span> <span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t\ta[i][i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld \"</span>, a[i][j]);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;mat;</span><br><span class=\"line\"></span><br><span class=\"line\">mat <span class=\"keyword\">operator</span> * ( mat a, mat b )&#123;  <span class=\"comment\">// 重载乘法</span></span><br><span class=\"line\">\tmat ans;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++)&#123;</span><br><span class=\"line\">\t\t\tans.a[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; n; k ++)</span><br><span class=\"line\">\t\t\t\tans.a[i][j] += a.a[i][k] * b.a[k][j];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">mat <span class=\"title\">qpow</span><span class=\"params\">( mat a, <span class=\"keyword\">int</span> m )</span></span>&#123;   <span class=\"comment\">//快速幂</span></span><br><span class=\"line\">\tmat ans;</span><br><span class=\"line\">\tans.reset();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ( m )&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( m &amp; <span class=\"number\">1</span> )</span><br><span class=\"line\">\t\t\tans = ans * a;</span><br><span class=\"line\">\t\ta = a * a;</span><br><span class=\"line\">\t\tm /= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span>  m;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\tmat a;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span> (<span class=\"string\">\"%lld\"</span>, &amp;a.a[i][j]);</span><br><span class=\"line\">\ta = qpow( a, m );</span><br><span class=\"line\">\ta.print();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://lx.lanqiao.cn/problemset.page?code=BASIC-\" target=\"_blank\" rel=\"noopener\">蓝桥杯基础练习</a></p>\n<h2 id=\"BASIC-1-闰年判断\"><a href=\"#BASIC-1-闰年判断\" class=\"headerlink\" title=\"BASIC 1 闰年判断 \"></a>BASIC 1 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T5\" target=\"_blank\" rel=\"noopener\">闰年判断 </a></h2><p><strong>问题描述</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定一个年份，判断这一年是不是闰年。</span><br><span class=\"line\">当以下情况之一满足时，这一年是闰年：</span><br><span class=\"line\">1. 年份是4的倍数而不是100的倍数；</span><br><span class=\"line\">2. 年份是400的倍数。</span><br><span class=\"line\">其他的年份都不是闰年。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个整数y，表示当前的年份。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，如果给定的年份是闰年，则输出yes，否则输出no。</span><br><span class=\"line\">说明：当试题指定你输出一个字符串作为结果（比如本题的yes或者no，你需要严格按照试题中给定的大小写，写错大小写将不得分。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2013</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2016</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yes</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1990 &lt;= y &lt;= 2050</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>略</p>\n<h3 id=\"AC代码\"><a href=\"#AC代码\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> y;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; y;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( y % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; ( y % <span class=\"number\">400</span> == <span class=\"number\">0</span> || y % <span class=\"number\">100</span> != <span class=\"number\">0</span>) )</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"yes\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">\"no\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-2-01字串\"><a href=\"#BASIC-2-01字串\" class=\"headerlink\" title=\"BASIC 2 01字串\"></a>BASIC 2 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T6\" target=\"_blank\" rel=\"noopener\">01字串</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：</span><br><span class=\"line\">00000</span><br><span class=\"line\">00001</span><br><span class=\"line\">00010</span><br><span class=\"line\">00011</span><br><span class=\"line\">00100</span><br><span class=\"line\">请按从小到大的顺序输出这32种01串。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本试题没有输入。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出32行，按从小到大的顺序每行一个长度为5的01串。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">00000</span><br><span class=\"line\">00001</span><br><span class=\"line\">00010</span><br><span class=\"line\">00011</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">以下部分省略</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong></p>\n<ol>\n<li>可以循环嵌套实现</li>\n<li>可以模拟二进制直接从低位到高位逢2进位</li>\n<li>也可以直接使用STL的容器bitset</li>\n</ol>\n<h3 id=\"AC代码-1\"><a href=\"#AC代码-1\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 循环嵌套</span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i1 = <span class=\"number\">0</span>; i1 &lt; <span class=\"number\">2</span>; i1 ++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i2 = <span class=\"number\">0</span>; i2 &lt; <span class=\"number\">2</span>; i2 ++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i3 = <span class=\"number\">0</span>; i3 &lt; <span class=\"number\">2</span>; i3 ++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i4 = <span class=\"number\">0</span>; i4 &lt; <span class=\"number\">2</span>; i4 ++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i5 = <span class=\"number\">0</span>; i5 &lt; <span class=\"number\">2</span>; i5 ++)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; i1&lt;&lt; i2 &lt;&lt; i3 &lt;&lt; i4 &lt;&lt; i5 &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 模拟二进制</span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> a = <span class=\"string\">\"00000\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">32</span> ; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; a &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\ta[<span class=\"number\">4</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">4</span> ; j &gt;= <span class=\"number\">0</span> ; j --)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a[j] == <span class=\"string\">'2'</span>)&#123;</span><br><span class=\"line\">\t\t\t\ta[j - <span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\ta[j] = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">32</span>; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">bitset</span>&lt;5&gt; b(i);   <span class=\"comment\">// 头文件 &lt;bitset&gt;</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; b &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bitset 容器每个位置存储值只能为0和1</span></span><br><span class=\"line\"><span class=\"comment\">// 用在这里正好合适</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://www.cplusplus.com/reference/bitset/bitset/\" target=\"_blank\" rel=\"noopener\">bitset文档</a></p>\n<h2 id=\"BASIC-3-字母图形\"><a href=\"#BASIC-3-字母图形\" class=\"headerlink\" title=\"BASIC 3 字母图形\"></a>BASIC 3 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T7\" target=\"_blank\" rel=\"noopener\">字母图形</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用字母可以组成一些美丽的图形，下面给出了一个例子：</span><br><span class=\"line\">ABCDEFG</span><br><span class=\"line\">BABCDEF</span><br><span class=\"line\">CBABCDE</span><br><span class=\"line\">DCBABCD</span><br><span class=\"line\">EDCBABC</span><br><span class=\"line\">这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出n行，每个m个字符，为你的图形。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5 7</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ABCDEFG</span><br><span class=\"line\">BABCDEF</span><br><span class=\"line\">CBABCDE</span><br><span class=\"line\">DCBABCD</span><br><span class=\"line\">EDCBABC</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= n, m &lt;= 26</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>可以直接两层循环直接输出ASCII码</p>\n<h3 id=\"AC代码-2\"><a href=\"#AC代码-2\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j ++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">putchar</span>( <span class=\"built_in\">abs</span>(j - i) + <span class=\"number\">65</span> );  </span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-4-数列特征\"><a href=\"#BASIC-4-数列特征\" class=\"headerlink\" title=\"BASIC 4 数列特征\"></a>BASIC 4 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T8\" target=\"_blank\" rel=\"noopener\">数列特征</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给出n个数，找出这n个数的最大值，最小值，和。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一行为整数n，表示数的个数</span><br><span class=\"line\">第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">1  3  -2  4  5</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">-2</span><br><span class=\"line\">11</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= n &lt;= 10000</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>在读入的过程中判断是否是最小和最大值，并加进总和中</p>\n<h3 id=\"AC代码-3\"><a href=\"#AC代码-3\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, x, Min = <span class=\"number\">10000</span>, Max = <span class=\"number\">-10000</span>, sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;x);</span><br><span class=\"line\">\t\tMin = min(Min, x);</span><br><span class=\"line\">\t\tMax = max(Max, x);</span><br><span class=\"line\">\t\tsum += x;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n%d\\n%d\\n\"</span>, Max, Min, sum);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-5-查找整数\"><a href=\"#BASIC-5-查找整数\" class=\"headerlink\" title=\"BASIC 5 查找整数\"></a>BASIC 5 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T9\" target=\"_blank\" rel=\"noopener\">查找整数</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一行包含一个整数n。</span><br><span class=\"line\">第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。</span><br><span class=\"line\">第三行包含一个整数a，为待查找的数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br><span class=\"line\">1 9 4 8 3 9</span><br><span class=\"line\">9</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">n</span> &lt;= <span class=\"string\">1000</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>读取数组, 然后使用find函数    </p>\n<h3 id=\"AC代码-4\"><a href=\"#AC代码-4\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, x;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">1001</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span> (<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, a + i);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span> (<span class=\"string\">\"%d\"</span>, &amp;x);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans = find(a, a + n, x) - a;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( ans != n ) <span class=\"built_in\">cout</span> &lt;&lt; ans + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">\"-1\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　<br>给出n，输出它的前n行。</p>\n<h2 id=\"BASIC-6-杨辉三角形\"><a href=\"#BASIC-6-杨辉三角形\" class=\"headerlink\" title=\"BASIC 6 杨辉三角形\"></a>BASIC 6 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T10\" target=\"_blank\" rel=\"noopener\">杨辉三角形</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。</span><br><span class=\"line\">它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。</span><br><span class=\"line\">下面给出了杨辉三角形的前4行：　</span><br><span class=\"line\">   1</span><br><span class=\"line\">  1 1</span><br><span class=\"line\"> 1 2 1　　</span><br><span class=\"line\">1 3 3 1</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个数n。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">1 1</span><br><span class=\"line\">1 2 1</span><br><span class=\"line\">1 3 3 1</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">n</span> &lt;= <span class=\"string\">34</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>略</p>\n<h3 id=\"AC代码-5\"><a href=\"#AC代码-5\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">35</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(a, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">\ta[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i; j ++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span> (<span class=\"string\">\"%d \"</span>, a[j]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> temp = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= i + <span class=\"number\">1</span>; j ++)&#123;</span><br><span class=\"line\">\t\t\ttemp = a[j] + temp;</span><br><span class=\"line\">\t\t\tswap(temp, a[j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-7-特殊的数字\"><a href=\"#BASIC-7-特殊的数字\" class=\"headerlink\" title=\"BASIC 7 特殊的数字\"></a>BASIC 7 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T46\" target=\"_blank\" rel=\"noopener\">特殊的数字</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1<span class=\"emphasis\">*1*</span>1+5<span class=\"emphasis\">*5*</span>5+3<span class=\"emphasis\">*3*</span>3。编程求所有满足这种条件的三位十进制数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>循环跑一遍，公式都给了，范围是三位数</p>\n<h3 id=\"AC代码-6\"><a href=\"#AC代码-6\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt; </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i,a,b,c; </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">100</span>; i &lt; <span class=\"number\">1000</span>; i ++)&#123;</span><br><span class=\"line\">\t\ta = i  /<span class=\"number\">100</span>;\t<span class=\"comment\">// 百位\t</span></span><br><span class=\"line\">\t\tb = ( i % <span class=\"number\">100</span> ) / <span class=\"number\">10</span>;\t<span class=\"comment\">// 十位 </span></span><br><span class=\"line\">\t\tc = i % <span class=\"number\">10</span>;\t\t<span class=\"comment\">// 个位 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i == a * a * a + b * b * b + c * c * c)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; <span class=\"built_in\">endl</span>; </span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-8-回文数\"><a href=\"#BASIC-8-回文数\" class=\"headerlink\" title=\"BASIC 8 回文数\"></a>BASIC 8 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T47\" target=\"_blank\" rel=\"noopener\">回文数</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按从小到大的顺序输出满足条件的四位十进制数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>直接循环找到千位和个位相等，百位和十位相等。</p>\n<h3 id=\"AC代码-7\"><a href=\"#AC代码-7\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1001</span>; i &lt; <span class=\"number\">10000</span>; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( i % <span class=\"number\">10</span> == i / <span class=\"number\">1000</span> &amp;&amp; i % <span class=\"number\">100</span> / <span class=\"number\">10</span> == i / <span class=\"number\">100</span> % <span class=\"number\">10</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-9-特殊回文数\"><a href=\"#BASIC-9-特殊回文数\" class=\"headerlink\" title=\"BASIC 9 特殊回文数\"></a>BASIC 9 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T48\" target=\"_blank\" rel=\"noopener\">特殊回文数</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">123321是一个非常特殊的数，它从左边读和从右边读是一样的。</span><br><span class=\"line\">输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入一行，包含一个正整数n。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按从小到大的顺序输出满足条件的整数，每个整数占一行。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">52</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">899998</span><br><span class=\"line\">989989</span><br><span class=\"line\">998899</span><br></pre></td></tr></table></figure></p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">n</span> &lt;= <span class=\"string\">54</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>六位数是回文数，且六个数总和是n。<br>取高三位，总和为n / 2。因此如果为奇数则一定没有解。</p>\n<h3 id=\"AC代码-8\"><a href=\"#AC代码-8\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( n % <span class=\"number\">2</span> != <span class=\"number\">0</span> )</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">10</span>; i ++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; j ++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">10</span>; k ++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>( i + j + k == n / <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; j &lt;&lt; k &lt;&lt; k &lt;&lt; j &lt;&lt; i &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-10-十进制转十六进制\"><a href=\"#BASIC-10-十进制转十六进制\" class=\"headerlink\" title=\"BASIC 10 十进制转十六进制\"></a>BASIC 10 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T49\" target=\"_blank\" rel=\"noopener\">十进制转十六进制</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。</span><br><span class=\"line\">十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。</span><br><span class=\"line\">给出一个非负整数，将它表示成十六进制的形式。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入包含一个非负整数a，表示要转换的数。0<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=a</span>&lt;=<span class=\"string\">2147483647</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出这个整数的16进制表示</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">30</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1E</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>这类问题模仿十进制转二进制的过程即可，使用了STL的string</p>\n<h3 id=\"AC代码-9\"><a href=\"#AC代码-9\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">Turn</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> ans;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( !n ) <span class=\"built_in\">puts</span>(<span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ( n )&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x = n % d;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( x &lt; <span class=\"number\">10</span> ) ans += x + <span class=\"number\">48</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> ans += <span class=\"number\">55</span> + x;</span><br><span class=\"line\">\t\tn /= d;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treverse(ans.begin(), ans.end());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; Turn(n, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-11-十六进制转十进制\"><a href=\"#BASIC-11-十六进制转十进制\" class=\"headerlink\" title=\"BASIC 11 十六进制转十进制\"></a>BASIC 11 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T50\" target=\"_blank\" rel=\"noopener\">十六进制转十进制</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。</span><br><span class=\"line\">注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FFFF</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">65535</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>(FFFF)<sub>H</sub> =&gt; (65535)<sub>D</sub><br>也就是 F <em> 16 <sup>0</sup> + F </em> 16 <sup>1</sup> + F <em> 16 <sup>2</sup> + F </em> 16 <sup>3</sup> = 65535.<br>这里F代表的是数字15<br>需要注意的是不能用int，FFFFFFFF会爆int。</p>\n<h3 id=\"AC代码-10\"><a href=\"#AC代码-10\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> <span class=\"title\">Pow</span><span class=\"params\">(<span class=\"keyword\">int</span> d, <span class=\"keyword\">int</span> p)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> mul = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ( -- p ) mul *= d;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mul;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> <span class=\"title\">Turn</span><span class=\"params\">(<span class=\"built_in\">string</span> str, <span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = str.size() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i --)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( str[i] &lt; <span class=\"number\">57</span> )</span><br><span class=\"line\">\t\t\tsum += (str[i] - <span class=\"number\">48</span>) * Pow(d, str.size() - i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tsum += (str[i] - <span class=\"number\">55</span>) * Pow(d, str.size() - i);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> str;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; str;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; Turn(str, <span class=\"number\">16</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-12-十六进制转八进制\"><a href=\"#BASIC-12-十六进制转八进制\" class=\"headerlink\" title=\"BASIC 12 十六进制转八进制\"></a>BASIC 12 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T51\" target=\"_blank\" rel=\"noopener\">十六进制转八进制</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定n个十六进制正整数，输出它们对应的八进制数。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入的第一行为一个正整数n （1&lt;=n&lt;=10）。</span><br><span class=\"line\">接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出n行，每行为输入对应的八进制正整数。</span><br><span class=\"line\">【注意】</span><br><span class=\"line\">输入的十六进制数不会有前导0，比如012A。</span><br><span class=\"line\">输出的八进制数也不能有前导0。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">39</span><br><span class=\"line\">123ABC</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">71</span><br><span class=\"line\">4435274</span><br></pre></td></tr></table></figure></p>\n<p><strong>提示</strong><br>先将十六进制数转换成某进制数，再由某进制数转换成八进制。</p>\n<p><strong>问题分析</strong><br>很多人第一眼看到这题，十六进制转十进制再转八进制即可，思路同上两题。但这题要注意到的是数据范围，每个十六进制数长度不超过100000。<br>我的做法是转成二进制，而不是十进制。<br>这个对上题的代码需要进行改动。<br>但to_string函数编译不通过手写一个To_string。</p>\n<h3 id=\"AC代码-11\"><a href=\"#AC代码-11\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">hexTurnbin</span><span class=\"params\">(<span class=\"built_in\">string</span> str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> bin;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; str.size(); i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> hex = str[i] &lt; <span class=\"number\">65</span> ? str[i] - <span class=\"number\">48</span> : str[i] - <span class=\"number\">55</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">string</span> t;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>( hex )&#123;</span><br><span class=\"line\">\t\t\tt += hex % <span class=\"number\">2</span> + <span class=\"number\">48</span>;</span><br><span class=\"line\">\t\t\thex /= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treverse(t.begin(), t.end());</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = t.size(); i &lt; <span class=\"number\">4</span>; i ++) bin += <span class=\"string\">'0'</span>;  <span class=\"comment\">// 二进制补前置0</span></span><br><span class=\"line\">\t\tbin += t;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> bin;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">To_string</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> str;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( n )</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>( n )&#123;</span><br><span class=\"line\">\t\t\tstr += (n % <span class=\"number\">10</span> + <span class=\"number\">48</span>);</span><br><span class=\"line\">\t\t\tn /= <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> str = <span class=\"string\">\"0\"</span>;</span><br><span class=\"line\">\treverse(str.begin(), str.end());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">binTurnoct</span><span class=\"params\">(<span class=\"built_in\">string</span> str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> oct;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> M = <span class=\"number\">1</span>, mul = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = str.size() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i --)&#123;</span><br><span class=\"line\">\t\tmul += M * (str[i] - <span class=\"number\">48</span>);</span><br><span class=\"line\">\t\tM *= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( M == <span class=\"number\">8</span> )&#123;</span><br><span class=\"line\">\t\t\tM = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\toct += To_string(mul);  <span class=\"comment\">// to_string 用于int 转成 string</span></span><br><span class=\"line\">\t\t\tmul = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( mul ) oct += To_string(mul);</span><br><span class=\"line\">\treverse(oct.begin(), oct.end());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> oct;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ( n -- )&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">string</span> str;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; str;</span><br><span class=\"line\">\t\tstr = hexTurnbin(str);</span><br><span class=\"line\">\t\tstr = binTurnoct(str);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (; i &lt; str.size(); i ++) <span class=\"keyword\">if</span>( str[i] != <span class=\"number\">48</span> ) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (; i &lt; str.size(); i ++) <span class=\"built_in\">putchar</span>(str[i]);</span><br><span class=\"line\">\t\t<span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-13-数列排序\"><a href=\"#BASIC-13-数列排序\" class=\"headerlink\" title=\"BASIC 13 数列排序\"></a>BASIC 13 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T52\" target=\"_blank\" rel=\"noopener\">数列排序</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=n</span>&lt;=<span class=\"string\">200</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一行为一个整数n。</span><br><span class=\"line\">第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出一行，按从小到大的顺序输出排序后的数列。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">8 3 6 4 9</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 4 6 8 9</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>直接使用algorithm里面的sort函数即可(有兴趣可以自己了解sort实现的方法)</p>\n<h3 id=\"AC代码-12\"><a href=\"#AC代码-12\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">201</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;a[i]);</span><br><span class=\"line\">\tsort(a, a + n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, a[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-14-时间转换\"><a href=\"#BASIC-14-时间转换\" class=\"headerlink\" title=\"BASIC 14 时间转换\"></a>BASIC 14 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T54\" target=\"_blank\" rel=\"noopener\">时间转换</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定一个以秒为单位的时间t，要求用“<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">H</span>&gt;</span></span>:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">M</span>&gt;</span></span>:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">S</span>&gt;</span></span>”的格式来表示这个时间。<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">H</span>&gt;</span></span>表示时间，<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">M</span>&gt;</span></span>表示分钟，而<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">S</span>&gt;</span></span>表示秒，它们都是整数且没有前导的“0”。例如，若t=0，则应输出是“0:0:0”；若t=3661，则输出“1:1:1”。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入只有一行，是一个整数t（0<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=t</span>&lt;=<span class=\"string\">86399）。</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出只有一行，是以“<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">H</span>&gt;</span></span>:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">M</span>&gt;</span></span>:<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">S</span>&gt;</span></span>”的格式所表示的时间，不包括引号。</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0:0:0</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5436</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1:30:36</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>略</p>\n<h3 id=\"AC代码-13\"><a href=\"#AC代码-13\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> t;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d:%d:%d\"</span>, t / <span class=\"number\">3600</span> , (t / <span class=\"number\">60</span> % <span class=\"number\">60</span>), t % <span class=\"number\">60</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-15-字符串对比\"><a href=\"#BASIC-15-字符串对比\" class=\"headerlink\" title=\"BASIC 15 字符串对比\"></a>BASIC 15 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T56\" target=\"_blank\" rel=\"noopener\">字符串对比</a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一：</span><br><span class=\"line\">　　1：两个字符串长度不等。比如 Beijing 和 Hebei</span><br><span class=\"line\">　　2：两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如 Beijing 和 Beijing</span><br><span class=\"line\">　　3：两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如 beijing 和 BEIjing</span><br><span class=\"line\">　　4：两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如 Beijing 和 Nanjing</span><br><span class=\"line\">　　编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">包括两行，每行都是一个字符串</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">仅有一个数字，表明这两个字符串的关系编号</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BEIjing</span><br><span class=\"line\">beiJing</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>使用transform 函数使string 整个转大写或小写。</p>\n<h3 id=\"AC代码-14\"><a href=\"#AC代码-14\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> str1, str2;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; str1 &gt;&gt; str2;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ( str1.size() != str2.size() ) <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( str1 == str2 ) <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"2\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\ttransform(str1.begin(), str1.end(), str1.begin(), ::<span class=\"built_in\">toupper</span>);</span><br><span class=\"line\">\t\ttransform(str2.begin(), str2.end(), str2.begin(), ::<span class=\"built_in\">toupper</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( str1 == str2 ) <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"3\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"4\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BASIC-16-分解质因数\"><a href=\"#BASIC-16-分解质因数\" class=\"headerlink\" title=\"BASIC 16 分解质因数 \"></a>BASIC 16 <a href=\"http://lx.lanqiao.cn/problem.page?gpid=T57\" target=\"_blank\" rel=\"noopener\">分解质因数 </a></h2><p><strong>问题描述</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">求出区间[a,b]中所有整数的质因数分解。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输入格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入两个整数a，b。</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每行输出一个数的分解，形如k=a1<span class=\"emphasis\">*a2*</span>a3...(a1<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=a2</span>&lt;=<span class=\"string\">a3...，k也是从小到大的)(具体可看样例)</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 10</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3=3</span><br><span class=\"line\">4=2*2</span><br><span class=\"line\">5=5</span><br><span class=\"line\">6=2*3</span><br><span class=\"line\">7=7</span><br><span class=\"line\">8=2<span class=\"emphasis\">*2*</span>2</span><br><span class=\"line\">9=3*3</span><br><span class=\"line\">10=2*5</span><br></pre></td></tr></table></figure></p>\n<p><strong>提示</strong><br>先筛出所有素数，然后再分解。</p>\n<p><strong>数据规模与约定</strong><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">n</span> &lt;= <span class=\"string\">1,000,000</span></span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>打出素数表，然后按素数表顺序用 2 3 5 7 9，依次选择。<br>若可以整除，则除以这个素数。</p>\n<p>例如 18 = 2， 3， 3。</p>\n<h3 id=\"AC代码-15\"><a href=\"#AC代码-15\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a, b, k = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> p[<span class=\"number\">10001</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> P[<span class=\"number\">5000</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(p, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(p));</span><br><span class=\"line\">\tp[<span class=\"number\">0</span>] = p[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= b; i ++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( !p[i] )&#123;</span><br><span class=\"line\">\t\t\tP[k ++] = i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">2</span>; i * j &lt;= b; j ++)</span><br><span class=\"line\">\t\t\t\tp[i * j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = a; i &lt;= b; i ++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> j = i, h = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d=\"</span>, i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( !p[i] )\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, i);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> ( j &gt; <span class=\"number\">1</span> )&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> ( j % P[h] == <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>( j == P[h] )</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; P[h];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; P[h] &lt;&lt; <span class=\"string\">\"*\"</span>;</span><br><span class=\"line\">\t\t\t\tj /= P[h];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\th ++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"BEGIN-17\"><a href=\"#BEGIN-17\" class=\"headerlink\" title=\"BEGIN 17:\"></a>BEGIN 17:</h2><p><a href=\"http://lx.lanqiao.cn/problem.page?58\" target=\"_blank\" rel=\"noopener\">矩阵乘法</a></p>\n<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定一个N阶矩阵A，输出A的M次幂（M是非负整数）</span><br><span class=\"line\">例如：</span><br><span class=\"line\">　　A =</span><br><span class=\"line\">　　1 2</span><br><span class=\"line\">　　3 4</span><br><span class=\"line\">　　A的2次幂</span><br><span class=\"line\">　　7 10</span><br><span class=\"line\">　　15 22</span><br></pre></td></tr></table></figure>\n<p><strong>输入格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一行是一个正整数N、M（1&lt;=N&lt;=30, 0&lt;=M&lt;=5），表示矩阵A的阶数和要求的幂数</span><br><span class=\"line\">接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值</span><br></pre></td></tr></table></figure></p>\n<p><strong>输出格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2 2</span><br><span class=\"line\">1 2</span><br><span class=\"line\">3 4</span><br></pre></td></tr></table></figure></p>\n<p><strong>样例输出</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">7 10</span><br><span class=\"line\">15 22</span><br></pre></td></tr></table></figure></p>\n<p><strong>问题分析</strong><br>直接对矩阵进行乘法运算，但要注意一点的是，数组开int类型会爆。<br>也可以学习矩阵快速幂。</p>\n<h3 id=\"AC代码-16\"><a href=\"#AC代码-16\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">matnode</span>&#123;</span></span><br><span class=\"line\">\tll a[<span class=\"number\">31</span>][<span class=\"number\">31</span>];</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">reset</span> <span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t\ta[i][i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++)</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld \"</span>, a[i][j]);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;mat;</span><br><span class=\"line\"></span><br><span class=\"line\">mat <span class=\"keyword\">operator</span> * ( mat a, mat b )&#123;  <span class=\"comment\">// 重载乘法</span></span><br><span class=\"line\">\tmat ans;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++)&#123;</span><br><span class=\"line\">\t\t\tans.a[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; n; k ++)</span><br><span class=\"line\">\t\t\t\tans.a[i][j] += a.a[i][k] * b.a[k][j];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">mat <span class=\"title\">qpow</span><span class=\"params\">( mat a, <span class=\"keyword\">int</span> m )</span></span>&#123;   <span class=\"comment\">//快速幂</span></span><br><span class=\"line\">\tmat ans;</span><br><span class=\"line\">\tans.reset();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> ( m )&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( m &amp; <span class=\"number\">1</span> )</span><br><span class=\"line\">\t\t\tans = ans * a;</span><br><span class=\"line\">\t\ta = a * a;</span><br><span class=\"line\">\t\tm /= <span class=\"number\">2</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span>  m;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\tmat a;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span> (<span class=\"string\">\"%lld\"</span>, &amp;a.a[i][j]);</span><br><span class=\"line\">\ta = qpow( a, m );</span><br><span class=\"line\">\ta.print();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"第九届蓝桥杯试题、答案以及比赛经历","date":"2018-04-05T07:04:32.000Z","description":"第一次竞赛经历，第九届蓝桥杯初赛。","_content":"\n时间:2018年愚人节\n地点：南京航空航天大学(江宁校区)\n事件：第九届蓝桥杯省赛\n\n\n废话不多说，直接上题目：\n\n## 第一题： 第几天(满分5分)\n### 题目描述：\n> 2000年的1月1日，是那一年的第1天。那么，2000年的5月4日，是那一年的第几天？ \n> 注意：需要提交的是一个整数，不要填写任何多余内容。\n\n个人感受：\n    很简单的一道题，学习了各位大佬的比赛经验，这种题目也不去考虑编程了，不仅要判断几月是几天还要去思考是否闰年\n\n### 题目答案：\n答案：125\n方法: 日历/excel\n例如：用excel快速求解，第一个单元格输入2000/1/1，第二个单元格输入2000/5/4，然后在第三个单元格生成，第二个单元格减去第一个单元格的值\n哦，对了 ，算完是124，还要加上1！5s出答案。\n\n## 第二题： 明码(满分7分)\n### 题目描述：\n>汉字的字形存在于字库中，即便在今天，16点阵的字库也仍然使用广泛。\n16点阵的字库把每个汉字看成是16x16个像素信息。并把这些信息记录在字节中。\n一个字节可以存储8位信息，用32个字节就可以存一个汉字的字形了。\n把每个字节转为2进制表示，1表示墨迹，0表示底色。每行2个字节，\n一共16行，布局是：\n    第1字节，第2字节\n    第3字节，第4字节\n    ....\n    第31字节, 第32字节\n这道题目是给你一段多个汉字组成的信息，每个汉字用32个字节表示，这里给出了字节作为有符号整数的值。\n题目的要求隐藏在这些信息中。你的任务是复原这些汉字的字形，从中看出题目的要求，并根据要求填写答案。\n这段信息是（一共10个汉字）：\n4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0 \n16 64 16 64 34 68 127 126 66 -124 67 4 66 4 66 -124 126 100 66 36 66 4 66 4 66 4 126 4 66 40 0 16 \n4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0 \n0 -128 64 -128 48 -128 17 8 1 -4 2 8 8 80 16 64 32 64 -32 64 32 -96 32 -96 33 16 34 8 36 14 40 4 \n4 0 3 0 1 0 0 4 -1 -2 4 0 4 16 7 -8 4 16 4 16 4 16 8 16 8 16 16 16 32 -96 64 64 \n16 64 20 72 62 -4 73 32 5 16 1 0 63 -8 1 0 -1 -2 0 64 0 80 63 -8 8 64 4 64 1 64 0 -128 \n0 16 63 -8 1 0 1 0 1 0 1 4 -1 -2 1 0 1 0 1 0 1 0 1 0 1 0 1 0 5 0 2 0 \n2 0 2 0 7 -16 8 32 24 64 37 -128 2 -128 12 -128 113 -4 2 8 12 16 18 32 33 -64 1 0 14 0 112 0 \n1 0 1 0 1 0 9 32 9 16 17 12 17 4 33 16 65 16 1 32 1 64 0 -128 1 0 2 0 12 0 112 0 \n0 0 0 0 7 -16 24 24 48 12 56 12 0 56 0 -32 0 -64 0 -128 0 0 0 0 1 -128 3 -64 1 -128 0 0 \n**注意：需要提交的是一个整数，不要填写任何多余内容。**\n\n个人感受：\n    很有趣的一道题目，一开始有点懵圈，这么多的数据，想到的就是转化为八位二进制，然后两个一组输出 然后换行，\n最后从一堆二进制中看出 题目：九的九次方等于多少？(一开始我还以为时输入转化得到的话，结果看到了最后一个翻译出来是问号==emmm，又看了下题目最后一行，整数！emmmm)\nPS:负数直接用128相加一下就差不多能看了.\n### 题目答案：\n387420489\n**代码一**\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nvoid print(int x){\n\tint a[8]={0};\n\tif(x<0)\n\t\tx+=128;\n\tfor(int i=7;i>=0;i--){\n\t\ta[i]=x%2;\n\t\tx/=2;\n\t}\n\tfor(int i=0;i<8;i++)\n\t\tif(a[i]) cout<<\"*\";\n\t\telse cout<<\" \";\n}\nint main(){\n\tfor(int i=0;i<10;i++){\n\t\tfor(int i=0;i<16;i++){\n\t\t\t//由题目很容易可以看出 两个八位二进制一行 \n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tprint(x);\n\t\t\tprint(y);\n\t\t\tcout<<endl;\n\t\t}\n\t\tcout<<endl<<endl;\n\t}\n\treturn 0; \n}\n```\n**代码二**\n有大佬用位运算写:\n位运算不不用考虑负数的问题..直接按位进行运算\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nvoid print(int x){\n\tfor(int i=7;i>=0;i--){\n\t\t// x=4    100 &  10000000  = 0\n\t\t//        100 &  1000000   = 0\n\t\t//        100 &  100000    = 0\n\t\t//        100 &  10000     = 0\n\t\t//        100 &  1000      = 0\n\t\t//        100 &  100       = 100\n\t\t//        100 &  10        = 0\t\n\t\t//        100 &  1         = 0\n\t\tif(x&(1<<i))\n\t\t\tcout<<(x&(1<<i))<<'*';\n\t\telse cout<<' ';\n\t}\nint main(){\n\tfor(int i=0;i<10;i++){\n\t\tfor(int i=0;i<16;i++){\n\t\t\t//由题目很容易可以看出 两个八位二进制一行 \n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tprint(x);\n\t\t\tprint(y);\n\t\t\tcout<<endl;\n\t\t}\n\t\tcout<<endl<<endl;\n\t}\n\treturn 0; \n}\n```\n\n## 第三题： 乘积尾零(满分13分)\n### 题目描述：\n>如下的10行数据，每行有10个整数，请你求出它们的乘积的末尾有多少个零？\n5650 4542 3554 473 946 4114 3871 9073 90 4329 \n2758 7949 6113 5659 5245 7432 3051 4434 6704 3594 \n9937 1173 6866 3397 4759 7557 3070 2287 1453 9899 \n1486 5722 3135 1170 4014 5510 5120 729 2880 9019 \n2049 698 4582 4346 4427 646 9742 7340 1230 7683 \n5693 7015 6887 7381 4172 4341 2909 2027 7355 5649 \n6701 6645 1671 5978 2704 9926 295 3125 3878 6785 \n2066 4247 4800 1578 6652 4616 1113 6205 3264 2915 \n3966 5291 2904 1285 2193 1428 2265 8730 9436 7074 \n689 5510 8243 6114 337 4096 8199 7313 3685 211 \n注意：需要提交的是一个整数，表示末尾零的个数。不要填写任何多余内容。\n\n个人感受：\n    大数这道题。。写的时候还是贼开心的==  因为。。我以为写出来了==\n对于这种数学弱鸡，简直不懂分解为2和5。。只会一行一行的去十个十个相乘再去模一亿取余\n然而==死在了 我只保留了最后两位 非零数。。。。导致杀千刀的少了三个0(大佬说要保留四位（后我实测为3位）)\n这道题 错的 特别 不该  代码也就三分钟的事==\n{% asset_img 1.png %}\n\n思路：两种方法\n①直接将所有数相乘，然后每乘一个数就把后面0全部去掉记一下，不过中间会爆long long，这个好办，每次乘完只保留后4位非0数字，例如216037就只保留6037\n**②正解：所有的0都一定是2*5产生的，所以将每个数拆成一堆2乘上一堆5再乘上一个数，之后统计下有多少个2和多少个5取少的那个就是答案**\n### 题目答案：\n答案：31\n**思路一的代码**\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tint a[101],cnt=0;\n\tfor(int i=0;i<100;i++)\n\t\tscanf(\"%d\",a+i);\n\tfor(int i=0;i<99;i++){\n\t\ta[i+1]*=a[i];\n\t\twhile(a[i+1]%10==0){\n\t\t\ta[i+1]/=10;\n\t\t\tcnt++;\n\t\t}\n\t\ta[i+1]%=1000;\n\t}\n\tcout<<cnt; \n\treturn 0;\n} \n```\n**思路二的代码**\n```C++\n#include<bits/stdc++.h>  \nusing namespace std;  \nint main(){  \n    int res2=0,res5=0;  \n    for(int i=0;i<100;i++){  \n        int x;\n\t\tscanf(\"%d\",&x);  \n        int y=x;  \n        while(x%2==0)res2++,x/=2; \n\t\twhile(x%5==0)res5++,x/=5;  \n    }  \n    cout<<min(res2,res5)<<endl;  \n}  \n```\n\n## 第四题： 测试次数(满分17分)\n### 题目描述：\n> x星球的居民脾气不太好，但好在他们生气的时候唯一的异常举动是：摔手机。\n各大厂商也就纷纷推出各种耐摔型手机。x星球的质监局规定了手机必须经过耐摔测试，并且评定出一个耐摔指数来，之后才允许上市流通。\nx星球有很多高耸入云的高塔，刚好可以用来做耐摔测试。塔的每一层高度都是一样的，与地球上稍有不同的是，他们的第一层不是地面，而是相当于我们的2楼。\n如果手机从第7层扔下去没摔坏，但第8层摔坏了，则手机耐摔指数=7。\n特别地，如果手机从第1层扔下去就坏了，则耐摔指数=0。\n如果到了塔的最高层第n层扔没摔坏，则耐摔指数=n\n为了减少测试次数，从每个厂家抽样3部手机参加测试。\n某次测试的塔高为1000层，如果我们总是采用最佳策略，在最坏的运气下最多需要测试多少次才能确定手机的耐摔指数呢？\n请填写这个最多测试次数。\n注意：需要填写的是一个整数，不要填写任何多余内容。\n\n个人感受：\n    这道题凉凉，很凉，透心凉\n教训，下次一定要先看分值==\n看到题目，最优策略？OK二分！然后就算出了  九次吧==然后自信直接过\n回来车上在复盘，忽然想到，等下。。那个。。摔手机？手机。。手机。。会摔坏了吧。。\nmm了个大p，一问舍友(zl) ，他不是还给了三个手机吗？\n我.....好的。。。题目都没看清。。都不知道我在干嘛。。\n\n不过就算知道了，我也没算对。。。心理平衡了一点\n\n后来我只能算出28。。。emmmm\n大佬: 直接三维 dp dp[0][1000][3] 第一个0一定不爆，第二个1000一定爆，第三个 3个手机。。\nemmmmm......还是不会\n\n### 题目答案：\n答案：19\n\n## 第五题： 快速排序(满分9分)\n### 题目描述：\n> 以下代码可以从数组a[]中找出第k小的元素。\n它使用了类似快速排序中的分治算法，期望时间复杂度是O(N)的。\n请仔细阅读分析源码，填写划线部分缺失的内容。\n```C++\n#include <stdio.h>\n\nint quick_select(int a[], int l, int r, int k) {\n\tint p = rand() % (r - l + 1) + l;\n\tint x = a[p];\n\t{int t = a[p]; a[p] = a[r]; a[r] = t;}\n\tint i = l, j = r;\n\twhile(i < j) {\n\t\twhile(i < j && a[i] < x) i++;\n\t\tif(i < j) {\n\t\t\ta[j] = a[i];\n\t\t\tj--;\n\t\t}\n\t\twhile(i < j && a[j] > x) j--;\n\t\tif(i < j) {\n\t\t\ta[i] = a[j];\n\t\t\ti++;\n\t\t}\n\t}\n\ta[i] = x;\n\tp = i;\n\tif(i - l + 1 == k) return a[i];\n\tif(i - l + 1 < k) return quick_select( _____________________________ ); //填空\n\telse return quick_select(a, l, i - 1, k);\n}\n\t\nint main()\n{\n\tint a[] = {1, 4, 2, 8, 5, 7, 23, 58, 16, 27, 55, 13, 26, 24, 12};\n\tprintf(\"%d\\n\", quick_select(a, 0, 14, 5));\n\treturn 0;\n}\n注意：只填写划线部分缺少的代码，不要抄写已经存在的代码或符号。\n\n```\n个人感受：\n    这道题。。算了。。填空这种题目每次我都是瞎jb猜，然后看答案对不对。。\n我写了个(a,l,r,k)大概对了，就交了。。宛如智障\n以为。。对了的\n好的\n\n### 题目答案：\n答案：a,i+1,r,k-(i-l+1)\n\n\n## 第六题： 递增三元组(满分11分)\n### 题目描述：\n>给定三个整数数组\nA = [A1, A2, ... AN], \nB = [B1, B2, ... BN], \nC = [C1, C2, ... CN]，\n请你统计有多少个三元组(i, j, k) 满足：\n1. 1 <= i, j, k <= N  \n2. Ai < Bj < Ck  \n\n>【输入格式】 \n第一行包含一个整数N。\n第二行包含N个整数A1, A2, ... AN。\n第三行包含N个整数B1, B2, ... BN。\n第四行包含N个整数C1, C2, ... CN。\n对于30%的数据，1 <= N <= 100  \n对于60%的数据，1 <= N <= 1000 \n对于100%的数据，1 <= N <= 100000 0 <= Ai, Bi, Ci <= 100000 \n\n>【输出格式】\n一个整数表示答案\n\n>【样例输入】\n3\n1 1 1\n2 2 2\n3 3 3\n\n>【样例输出】\n27 \n\n>资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n个人感受：\n    最简单的一道题了== 暴力for。。虽然不知道最后会不会爆。。但至少有60吧\n一开始看到..emmm 不就深搜嘛，最近写了不少，好的。。三分钟码完。。挖草 怎么样例输入答案一直是3\n心态崩了，换了三个for....老子就不信了。。咦。。怎么还是3\n我特么。。dev坏了吧？？？偷偷换个VC还是3  VS2010  还是3\n心态崩了。。  输出中间值明明有27次啊。。 \n忽然。。发现。。 调用函数没return最后的cnt  。。好小子，你过来，不打死你\n以至最后也懒得换回dfs了。。最后，如果有人看了我的代码，可能会觉得被欺骗了。。函数名=dfs，一看。。里面只有三个for。。。\n哈哈哈哈哈哈\n\n### 题目答案：\n**dfs**\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint cnt=0,n;\nint a[100001],b[100001],c[100001]; \nint dfs(int i,int j,int k){\n\tif(a[i]<b[j]&&b[j]<c[k])\n\t\tcnt++;\n\tif(i==n-1&&j==n-1&&k==n-1)\n\t\treturn cnt;\n\tif(k<n) dfs(i,j,k+1);\n\telse if(j<n) dfs(i,j+1,0);\n\t\telse if(i<n) dfs(i+1,0,0);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&c[i]);\n\tprintf(\"%d\",dfs(0,0,0));\n\treturn 0;\n} \n```\n**三个for 暴力求解**\n```C++\nfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<n;j++)\n\t\t\tfor(int k=0;k<n;k++)\n\t\t\t\tif(a[i]<b[j]&&b[j]<c[k])\n\t\t\t\t\tcnt++;\n\treturn cnt;\n```\n\n**最优解**\n思路：分别排序\n先看b和c两个数组，设两个下标i，j分别指向bc数组，对于每一个b[i],可以找到对应的c[j]恰好大于b[i]，那么对于b[i]有n-j个c[j]满足b[i]<c[j]。令sumb[i]=n-j，表示每个b[i]对应的c[j]个数。将sumb处理成后缀和。\n然后再看a和b数组，用同样的方法打出数组suma，不过suma[i]=sumb[j]；\n然后将suma处理成后缀和，suma[0]即为答案。\n```C++\n#include<bits/stdc++.h>  \nusing namespace std;  \ntypedef long long ll;  \nconst int N=1e6+10;  \nll suma[N],sumb[N];  \nint a[N],b[N],c[N];  \nint n;  \nint main(){  \n    scanf(\"%d\",&n);  \n    for(int i=0;i<n;i++)  \n        scanf(\"%d\",&a[i]);  \n    for(int i=0;i<n;i++)  \n        scanf(\"%d\",&b[i]);  \n    for(int i=0;i<n;i++)  \n        scanf(\"%d\",&c[i]);  \n    sort(a,a+n);  \n    sort(b,b+n);  \n    sort(c,c+n);  \n    memset(sumb,0,sizeof(sumb));  \n    for(int i=0,j=0;i<n;i++){  \n        while(j<n&&b[i]>=c[j])j++;  \n        if(j>=n)break;  \n        sumb[i]=n-j;  \n    }  \n    for(int i=n-2;i>=0;i--) //b hou zhui he  \n        sumb[i]+=sumb[i+1];  \n  \n    for(int i=0,j=0;i<n;i++){  \n        while(j<n&&a[i]>=b[j])j++;  \n        if(j>=n)break;  \n        suma[i]=sumb[j];  \n    }  \n    for(int i=n-2;i>=0;i--) //a hou zhui he  \n        suma[i]+=suma[i+1];  \n  \n    printf(\"%lld\\n\",suma[0]);  \n}  \n```\n\n## 第七题： 螺旋折线(满分19分)\n### 题目描述：\n>如图p1.png所示的螺旋折线经过平面上所有整点恰好一次。  \n对于整点(X, Y)，我们定义它到原点的距离dis(X, Y)是从原点到(X, Y)的螺旋折线段的长度。  \n例如dis(0, 1)=3, dis(-2, -1)=9  \n给出整点坐标(X, Y)，你能计算出dis(X, Y)吗？\n\n>【输入格式】\nX和Y  \n对于40%的数据，-1000 <= X, Y <= 1000  \n对于70%的数据，-100000 <= X， Y <= 100000  \n对于100%的数据, -1000000000 <= X, Y <= 1000000000  \n\n>【输出格式】\n输出dis(X, Y)  \n\n>【样例输入】\n0 1\n\n>【样例输出】\n3\n\n>资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n{% asset_img 2.png %}\n个人感受：\n    并列最简单的一题，emmmm  没啥操作。。就是循环到那个点\n应该时间上会爆了，反正至少50吧。。\n\n### 题目答案：\n**代码：**\n#include<bits/stdc++.h>\nusing namespace std;\nint ex,ey,nx=0,ny=0; \nint check(){\n\tif(nx==ex&&ny==ey)\n\t\treturn 1;\n\telse return 0;\n}\nint main(){\n\tscanf(\"%d%d\",&ex,&ey);\n\tint h=0,cnt=0;\n\twhile(1){\n\t\tfor(int i=0;i<4;i++){\n\t\t\th++;\n\t\t\tif(i==0)\n\t\t\t\tfor(int j=0;j<(h+1)/2;j++){\n\t\t\t\t\tnx--;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(check()){\n\t\t\t\t\t\tprintf(\"%d\",cnt);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\telse if(i==1)\n\t\t\t\tfor(int j=0;j<h/2;j++){\n\t\t\t\t\tny++;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(check()){\n\t\t\t\t\t\tprintf(\"%d\",cnt);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\telse if(i==2)\n\t\t\t\tfor(int j=0;j<(h+1)/2;j++){\n\t\t\t\t\tnx++;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(check()){\n\t\t\t\t\t\tprintf(\"%d\",cnt);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tfor(int j=0;j<h/2;j++){\n\t\t\t\t\tny--;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(check()){\n\t\t\t\t\t\tprintf(\"%d\",cnt);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n## 第八题： 日志统计(满分21分)\n### 题目描述：\n> 小明维护着一个程序员论坛。现在他收集了一份\"点赞\"日志，日志共有N行。其中每一行的格式是：\nts id  \n表示在ts时刻编号id的帖子收到一个\"赞\"。  \n现在小明想统计有哪些帖子曾经是\"热帖\"。如果一个帖子曾在任意一个长度为D的时间段内收到不少于K个赞，小明就认为这个帖子曾是\"热帖\"。  \n具体来说，如果存在某个时刻T满足该帖在[T, T+D)这段时间内(注意是左闭右开区间)收到不少于K个赞，该帖就曾是\"热帖\"。  \n给定日志，请你帮助小明统计出所有曾是\"热帖\"的帖子编号。  \n\n>【输入格式】\n第一行包含三个整数N、D和K。  \n以下N行每行一条日志，包含两个整数ts和id。  \n对于50%的数据，1 <= K <= N <= 1000  \n对于100%的数据，1 <= K <= N <= 100000 0 <= ts <= 100000 0 <= id <= 100000  \n\n>【输出格式】\n按从小到大的顺序输出热帖id。每个id一行。  \n\n>【输入样例】\n7 10 2  \n0 1  \n0 10    \n10 10  \n10 1  \n9 1\n100 3  \n100 3  \n\n>【输出样例】\n1  \n3  \n\n\n>资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n个人感受：\n    很烦的一道题。。 思路就是先筛选 ts大于k的   然后再按照 ts在 某段时间内多少排序。。\n道理都懂。。就是弱鸡。。。。没写完就交了==  没写完的我  输入正常，输出 print(\"1\\n3\");\n哈哈哈哈 看看能不能 骗上10分\n\n### 题目答案：\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e6+10;\nstruct node{\n\tint t,id;\n}e[N];\nbool cmp(node a,node b){\t// 对结构体按某个条件排序 \n\treturn a.t<b.t;\n}\nint sta[N],top;\nint c[N];\nint n,d,k;\nbool insta[N];\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&d,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&e[i].t,&e[i].id);\n\t}\n\tsort(e+1,e+1+n,cmp);\n\tmemset(c,0,sizeof(c));\n\tmemset(insta,0,sizeof(insta));\n\ttop=0;\n\tfor(int i=1,j=1;i<=n;i++)\n\t{\n\t\twhile(j<=n&&e[i].t-e[j].t>=d)\n\t\tc[e[j++].id]--;\n\t\tc[e[i].id]++;\n\t\tif(c[e[i].id]>=k&&!insta[e[i].id]){\n\t\t\tsta[top++]=e[i].id;\n\t\t\tinsta[e[i].id]=1;\n\t\t}\n\n\t}\n\tsort(sta,sta+top);\n\ttop=unique(sta,sta+top)-sta;\n\tfor(int i=0;i<top;i++)\n\t\tprintf(\"%d\\n\",sta[i]);\n}\n```\n\n## 第九题：全球变暖(满分23分)\n### 题目描述：\n>你有一张某海域NxN像素的照片，\".\"表示海洋、\"#\"表示陆地，如下所示：\n..\\..\\..\\.\n.#\\#..\\..\n.#\\#..\\..\n..\\..##.\n.\\.####.\n..\\.###.\n..\\..\\..\\.\n其中\"上下左右\"四个方向上连在一起的一片陆地组成一座岛屿。例如上图就有2座岛屿。  \n由于全球变暖导致了海面上升，科学家预测未来几十年，岛屿边缘一个像素的范围会被海水淹没。具体来说如果一块陆地像素与海洋相邻(上下左右四个相邻像素中有海洋)，它就会被淹没。  \n例如上图中的海域未来会变成如下样子：\n..\\..\\..\\.\n..\\..\\..\\.\n..\\..\\..\\.\n..\\..\\..\\.\n..\\..\\#..\n..\\..\\..\\.\n.\\..\\..\\..\n请你计算：依照科学家的预测，照片中有多少岛屿会被完全淹没。  \n\n>【输入格式】\n第一行包含一个整数N。  (1 <= N <= 1000)  \n以下N行N列代表一张海域照片。  \n照片保证第1行、第1列、第N行、第N列的像素都是海洋。  \n\n>【输出格式】\n一个整数表示答案。\n\n>【输入样例】\n7 \n..\\..\\..\\.\n.##..\\..\n.##.\\...\n..\\..##.\n..####.\n...###.\n..\\..\\..\\.  \n\n>【输出样例】\n1  \n\n>资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n个人感受：\n    为啥样例 淹没是1.。没被淹没是1\n我傻傻的看错了==  输出了相反的。。 阿西吧 心痛\n反正我的就是两个bfs\n还有一个很有趣的\n有人给了一组这样的数据：\n\\### ###\n\\#######\n\\### ###\n只有一个岛屿但是淹没后你会发现“岛屿”还会多出来一个！如下\n\n\\# # \n\n这个。。输出0还是-1.。我也不知道。。等答案了。。。\n\n\n### 题目答案：\n**这个 有一个正解代码**\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e3+10;\nint dir[4][2]={-1,0,0,1,1,0,0,-1};\nbool vis[N][N];\nchar mmp[N][N];\nint n,flag;\nbool check(int x,int y){//check if sea;\n\tfor(int i=0;i<4;i++){\n\t\tint fx=x+dir[i][0];\n\t\tint fy=y+dir[i][1];\n\t\tif(fx&&fy&&fx<=n&&fy<=n&&mmp[fx][fy]=='.')\n\t\t\treturn 1; //sea;\n\t}\n\treturn 0; //no sea;\n}\nvoid dfs(int x,int y){\n\tvis[x][y]=1;\n\tif(!check(x,y))flag=1; //remain lu di\n\tfor(int i=0;i<4;i++){\n\t\tint fx=x+dir[i][0];\n\t\tint fy=y+dir[i][1];\n\t\tif(fx&&fy&&fx<=n&&fy<=n&&!vis[fx][fy]&&mmp[fx][fy]=='#')\n\t\t\tdfs(fx,fy);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",mmp[i]+1);\n\t}\n\tmemset(vis,0,sizeof(vis));\n\tint ans=0,ludi=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!vis[i][j]&&mmp[i][j]=='#'){\n            ludi++;\n\t\t\t\tflag=0; //yan mo\n\t\t\t\tdfs(i,j);\n\t\t\t\tif(flag) ans++; //remained\n\t\t\t}\n\n\t}\n\tprintf(\"%d\",ludi-ans);\n}\n\n```\n\n## 第一题： 乘积最大(满分25分)\n### 题目描述：\n>给定N个整数A1, A2, ... AN。请你从中选出K个数，使其乘积最大。  \n请你求出最大的乘积，由于乘积可能超出整型范围，你只需输出乘积除以1000000009的余数。  \n注意，如果X<0， 我们定义X除以1000000009的余数是负(-X)除以1000000009的余数。\n即：0-((0-x) % 1000000009)\n\n>【输入格式】\n第一行包含两个整数N和K。  \n以下N行每行一个整数Ai。  \n对于40%的数据，1 <= K <= N <= 100  \n对于60%的数据，1 <= K <= 1000  \n对于100%的数据，1 <= K <= N <= 100000  -100000 <= Ai <= 100000  \n\n>【输出格式】\n一个整数，表示答案。\n\n>【输入样例】\n5 3 \n-100000   \n-10000   \n2   \n100000  \n10000  \n\n>【输出样例】\n999100009\n\n>再例如：\n【输入样例】\n5 3 \n-100000   \n-100000   \n-2   \n-100000  \n-100000\n\n>【输出样例】\n-999999829\n\n资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n个人感受：\n    别说了。。我 也不知道为啥。。第二个案例一直是-1.。。。脑阔疼  还是交了，毕竟如果都跟第一个案例一样。。我还是能对的==\n瑟瑟发抖的提交了。。\n看了大佬的分析 我终于知道弱鸡的自己错哪了==\n### 题目答案：\n【分析】像贪模拟贪心。\n\n分了三种情况，1.不含负数，2.不含正数，3.正负都有。 0的情况可以同时放在这三种情况中。\n\n情况1：从最大数开始选即可\n情况2：先考虑能否为0，再考虑选偶数个最小负数，若都做不到，就选奇数个最大负数\n情况3：最难。先考虑用尽量少的负数，尽可能用正数，再从最小负数开始考虑，每次拿两个，乘积去和最小整数的进行比较，若大于，则可用这两个负数替换那两个正数\n\n**【代码】**\n```C++      \n#include<bits/stdc++.h>  \nusing namespace std;  \ntypedef long long ll;  \nconst int mod=1e9+9;  \nconst int N=1e5+10;  \n  \nbool cmp(int i,int j){  \n    return i>j;  \n}  \nll a[N],b[N];  \nint ta,tb,n,k;  \nint main()  \n{  \n    scanf(\"%d%d\",&n,&k);  \n    ta=tb=0;  \n    int x;  \n    int c0=0;  \n    for(int i=0;i<n;i++)  \n    {  \n        scanf(\"%d\",&x);  \n        if(x>0)a[ta++]=x;  \n        else if(x<0)b[tb++]=x;  \n        else c0++;  \n    }  \n    sort(a,a+ta,cmp);  \n    sort(b,b+tb);  \n    ll ans=1;  \n    if(tb==0) //positive and 0  \n    {  \n        if(ta<k)ans=0; //0  \n        else {  \n            for(int i=0;i<k;i++)  \n                ans=ans*a[i]%mod;  \n        }  \n    }  \n    else if(ta==0) //negetive and 0  \n    {  \n        if(k%2&&c0 || tb<k)ans=0;  \n        else {  \n            if(k%2) //k is odd, but no 0  \n            {  \n                for(int i=0,j=tb-1;i<k;i++,j--)  \n                    ans=ans*b[j]%mod;  \n            }  \n            else{  \n                for(int i=0;i<k;i++)  \n                    ans=ans*b[i]%mod;  \n            }  \n        }  \n    }  \n    else  //-,+, 0  \n    {  \n        if(c0&&ta+tb<k){  \n            ans=0;  \n        }  \n        else if(ta+tb==k&&c0==0){  \n            for(int i=0;i<tb;i++)ans=ans*b[i]%mod;  \n            for(int i=0;i<ta;i++)ans=ans*a[i]%mod;  \n        }  \n        else{  \n            int fu;  \n            if(k<=ta)fu=0;  \n            else fu=(k-ta+1)&(-2);  \n            cout<<\"fu\"<<fu<<endl;  \n            int t=fu;  \n            for(int i=fu;i<=tb&&i<=k;i+=2)  \n                if(i>=2&&k-i>=0)  \n                {  \n                    cout<<\"i \"<<i<<endl;  \n                    if(b[i-1]*b[i-2]>a[k-i]*a[k-i+1])  \n                        t=i;  \n                    else break;  \n                }  \n            for(int i=0;i<t;i++)  ans=ans*b[i]%mod;  \n            for(int i=0;i<k-t;i++)ans=ans*a[i]%mod;  \n        }  \n    }  \n    printf(\"%lld\\n\",ans);  \n}  \n```\n\n个人总结：垃圾的我!\n\t一开始以为 对了8题(不难吧~)\n\t好的，发现两道题看错了\n\t对六道有省二嘛？\t\n\t等到答案出来。。填空再去两道== 傻逼答案\n\t所以 愚人节快乐\n\t其实真的不难。。看到答案心态易爆炸\n笑死人的讨论区，值得一看。。。\nhttps://www.zhihu.com/question/270622751\n\n想想是真的菜\n好好努力 尽力试试能不能进入ACM训练队吧！\nPS:其实省赛的难度真的不大，好好准备一下明年再来！\n\n\n\nPS:居然水进了国赛。。。。美滋滋哈哈哈哈 开心了好久。。公费游北京  我来了！！！\n最近多刷刷题 争取能有机会冲击国奖吧(虽然没啥可能)\n2018/4/9","source":"_posts/第九届蓝桥杯试题、答案以及比赛经历.md","raw":"---\ntitle: 第九届蓝桥杯试题、答案以及比赛经历\ndate: 2018-04-05 15:04:32\ntags: \n    - 经历\n    - C/C++题目\ncategories: C/C++ \ndescription: 第一次竞赛经历，第九届蓝桥杯初赛。\n---\n\n时间:2018年愚人节\n地点：南京航空航天大学(江宁校区)\n事件：第九届蓝桥杯省赛\n\n\n废话不多说，直接上题目：\n\n## 第一题： 第几天(满分5分)\n### 题目描述：\n> 2000年的1月1日，是那一年的第1天。那么，2000年的5月4日，是那一年的第几天？ \n> 注意：需要提交的是一个整数，不要填写任何多余内容。\n\n个人感受：\n    很简单的一道题，学习了各位大佬的比赛经验，这种题目也不去考虑编程了，不仅要判断几月是几天还要去思考是否闰年\n\n### 题目答案：\n答案：125\n方法: 日历/excel\n例如：用excel快速求解，第一个单元格输入2000/1/1，第二个单元格输入2000/5/4，然后在第三个单元格生成，第二个单元格减去第一个单元格的值\n哦，对了 ，算完是124，还要加上1！5s出答案。\n\n## 第二题： 明码(满分7分)\n### 题目描述：\n>汉字的字形存在于字库中，即便在今天，16点阵的字库也仍然使用广泛。\n16点阵的字库把每个汉字看成是16x16个像素信息。并把这些信息记录在字节中。\n一个字节可以存储8位信息，用32个字节就可以存一个汉字的字形了。\n把每个字节转为2进制表示，1表示墨迹，0表示底色。每行2个字节，\n一共16行，布局是：\n    第1字节，第2字节\n    第3字节，第4字节\n    ....\n    第31字节, 第32字节\n这道题目是给你一段多个汉字组成的信息，每个汉字用32个字节表示，这里给出了字节作为有符号整数的值。\n题目的要求隐藏在这些信息中。你的任务是复原这些汉字的字形，从中看出题目的要求，并根据要求填写答案。\n这段信息是（一共10个汉字）：\n4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0 \n16 64 16 64 34 68 127 126 66 -124 67 4 66 4 66 -124 126 100 66 36 66 4 66 4 66 4 126 4 66 40 0 16 \n4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0 \n0 -128 64 -128 48 -128 17 8 1 -4 2 8 8 80 16 64 32 64 -32 64 32 -96 32 -96 33 16 34 8 36 14 40 4 \n4 0 3 0 1 0 0 4 -1 -2 4 0 4 16 7 -8 4 16 4 16 4 16 8 16 8 16 16 16 32 -96 64 64 \n16 64 20 72 62 -4 73 32 5 16 1 0 63 -8 1 0 -1 -2 0 64 0 80 63 -8 8 64 4 64 1 64 0 -128 \n0 16 63 -8 1 0 1 0 1 0 1 4 -1 -2 1 0 1 0 1 0 1 0 1 0 1 0 1 0 5 0 2 0 \n2 0 2 0 7 -16 8 32 24 64 37 -128 2 -128 12 -128 113 -4 2 8 12 16 18 32 33 -64 1 0 14 0 112 0 \n1 0 1 0 1 0 9 32 9 16 17 12 17 4 33 16 65 16 1 32 1 64 0 -128 1 0 2 0 12 0 112 0 \n0 0 0 0 7 -16 24 24 48 12 56 12 0 56 0 -32 0 -64 0 -128 0 0 0 0 1 -128 3 -64 1 -128 0 0 \n**注意：需要提交的是一个整数，不要填写任何多余内容。**\n\n个人感受：\n    很有趣的一道题目，一开始有点懵圈，这么多的数据，想到的就是转化为八位二进制，然后两个一组输出 然后换行，\n最后从一堆二进制中看出 题目：九的九次方等于多少？(一开始我还以为时输入转化得到的话，结果看到了最后一个翻译出来是问号==emmm，又看了下题目最后一行，整数！emmmm)\nPS:负数直接用128相加一下就差不多能看了.\n### 题目答案：\n387420489\n**代码一**\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nvoid print(int x){\n\tint a[8]={0};\n\tif(x<0)\n\t\tx+=128;\n\tfor(int i=7;i>=0;i--){\n\t\ta[i]=x%2;\n\t\tx/=2;\n\t}\n\tfor(int i=0;i<8;i++)\n\t\tif(a[i]) cout<<\"*\";\n\t\telse cout<<\" \";\n}\nint main(){\n\tfor(int i=0;i<10;i++){\n\t\tfor(int i=0;i<16;i++){\n\t\t\t//由题目很容易可以看出 两个八位二进制一行 \n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tprint(x);\n\t\t\tprint(y);\n\t\t\tcout<<endl;\n\t\t}\n\t\tcout<<endl<<endl;\n\t}\n\treturn 0; \n}\n```\n**代码二**\n有大佬用位运算写:\n位运算不不用考虑负数的问题..直接按位进行运算\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nvoid print(int x){\n\tfor(int i=7;i>=0;i--){\n\t\t// x=4    100 &  10000000  = 0\n\t\t//        100 &  1000000   = 0\n\t\t//        100 &  100000    = 0\n\t\t//        100 &  10000     = 0\n\t\t//        100 &  1000      = 0\n\t\t//        100 &  100       = 100\n\t\t//        100 &  10        = 0\t\n\t\t//        100 &  1         = 0\n\t\tif(x&(1<<i))\n\t\t\tcout<<(x&(1<<i))<<'*';\n\t\telse cout<<' ';\n\t}\nint main(){\n\tfor(int i=0;i<10;i++){\n\t\tfor(int i=0;i<16;i++){\n\t\t\t//由题目很容易可以看出 两个八位二进制一行 \n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tprint(x);\n\t\t\tprint(y);\n\t\t\tcout<<endl;\n\t\t}\n\t\tcout<<endl<<endl;\n\t}\n\treturn 0; \n}\n```\n\n## 第三题： 乘积尾零(满分13分)\n### 题目描述：\n>如下的10行数据，每行有10个整数，请你求出它们的乘积的末尾有多少个零？\n5650 4542 3554 473 946 4114 3871 9073 90 4329 \n2758 7949 6113 5659 5245 7432 3051 4434 6704 3594 \n9937 1173 6866 3397 4759 7557 3070 2287 1453 9899 \n1486 5722 3135 1170 4014 5510 5120 729 2880 9019 \n2049 698 4582 4346 4427 646 9742 7340 1230 7683 \n5693 7015 6887 7381 4172 4341 2909 2027 7355 5649 \n6701 6645 1671 5978 2704 9926 295 3125 3878 6785 \n2066 4247 4800 1578 6652 4616 1113 6205 3264 2915 \n3966 5291 2904 1285 2193 1428 2265 8730 9436 7074 \n689 5510 8243 6114 337 4096 8199 7313 3685 211 \n注意：需要提交的是一个整数，表示末尾零的个数。不要填写任何多余内容。\n\n个人感受：\n    大数这道题。。写的时候还是贼开心的==  因为。。我以为写出来了==\n对于这种数学弱鸡，简直不懂分解为2和5。。只会一行一行的去十个十个相乘再去模一亿取余\n然而==死在了 我只保留了最后两位 非零数。。。。导致杀千刀的少了三个0(大佬说要保留四位（后我实测为3位）)\n这道题 错的 特别 不该  代码也就三分钟的事==\n{% asset_img 1.png %}\n\n思路：两种方法\n①直接将所有数相乘，然后每乘一个数就把后面0全部去掉记一下，不过中间会爆long long，这个好办，每次乘完只保留后4位非0数字，例如216037就只保留6037\n**②正解：所有的0都一定是2*5产生的，所以将每个数拆成一堆2乘上一堆5再乘上一个数，之后统计下有多少个2和多少个5取少的那个就是答案**\n### 题目答案：\n答案：31\n**思路一的代码**\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tint a[101],cnt=0;\n\tfor(int i=0;i<100;i++)\n\t\tscanf(\"%d\",a+i);\n\tfor(int i=0;i<99;i++){\n\t\ta[i+1]*=a[i];\n\t\twhile(a[i+1]%10==0){\n\t\t\ta[i+1]/=10;\n\t\t\tcnt++;\n\t\t}\n\t\ta[i+1]%=1000;\n\t}\n\tcout<<cnt; \n\treturn 0;\n} \n```\n**思路二的代码**\n```C++\n#include<bits/stdc++.h>  \nusing namespace std;  \nint main(){  \n    int res2=0,res5=0;  \n    for(int i=0;i<100;i++){  \n        int x;\n\t\tscanf(\"%d\",&x);  \n        int y=x;  \n        while(x%2==0)res2++,x/=2; \n\t\twhile(x%5==0)res5++,x/=5;  \n    }  \n    cout<<min(res2,res5)<<endl;  \n}  \n```\n\n## 第四题： 测试次数(满分17分)\n### 题目描述：\n> x星球的居民脾气不太好，但好在他们生气的时候唯一的异常举动是：摔手机。\n各大厂商也就纷纷推出各种耐摔型手机。x星球的质监局规定了手机必须经过耐摔测试，并且评定出一个耐摔指数来，之后才允许上市流通。\nx星球有很多高耸入云的高塔，刚好可以用来做耐摔测试。塔的每一层高度都是一样的，与地球上稍有不同的是，他们的第一层不是地面，而是相当于我们的2楼。\n如果手机从第7层扔下去没摔坏，但第8层摔坏了，则手机耐摔指数=7。\n特别地，如果手机从第1层扔下去就坏了，则耐摔指数=0。\n如果到了塔的最高层第n层扔没摔坏，则耐摔指数=n\n为了减少测试次数，从每个厂家抽样3部手机参加测试。\n某次测试的塔高为1000层，如果我们总是采用最佳策略，在最坏的运气下最多需要测试多少次才能确定手机的耐摔指数呢？\n请填写这个最多测试次数。\n注意：需要填写的是一个整数，不要填写任何多余内容。\n\n个人感受：\n    这道题凉凉，很凉，透心凉\n教训，下次一定要先看分值==\n看到题目，最优策略？OK二分！然后就算出了  九次吧==然后自信直接过\n回来车上在复盘，忽然想到，等下。。那个。。摔手机？手机。。手机。。会摔坏了吧。。\nmm了个大p，一问舍友(zl) ，他不是还给了三个手机吗？\n我.....好的。。。题目都没看清。。都不知道我在干嘛。。\n\n不过就算知道了，我也没算对。。。心理平衡了一点\n\n后来我只能算出28。。。emmmm\n大佬: 直接三维 dp dp[0][1000][3] 第一个0一定不爆，第二个1000一定爆，第三个 3个手机。。\nemmmmm......还是不会\n\n### 题目答案：\n答案：19\n\n## 第五题： 快速排序(满分9分)\n### 题目描述：\n> 以下代码可以从数组a[]中找出第k小的元素。\n它使用了类似快速排序中的分治算法，期望时间复杂度是O(N)的。\n请仔细阅读分析源码，填写划线部分缺失的内容。\n```C++\n#include <stdio.h>\n\nint quick_select(int a[], int l, int r, int k) {\n\tint p = rand() % (r - l + 1) + l;\n\tint x = a[p];\n\t{int t = a[p]; a[p] = a[r]; a[r] = t;}\n\tint i = l, j = r;\n\twhile(i < j) {\n\t\twhile(i < j && a[i] < x) i++;\n\t\tif(i < j) {\n\t\t\ta[j] = a[i];\n\t\t\tj--;\n\t\t}\n\t\twhile(i < j && a[j] > x) j--;\n\t\tif(i < j) {\n\t\t\ta[i] = a[j];\n\t\t\ti++;\n\t\t}\n\t}\n\ta[i] = x;\n\tp = i;\n\tif(i - l + 1 == k) return a[i];\n\tif(i - l + 1 < k) return quick_select( _____________________________ ); //填空\n\telse return quick_select(a, l, i - 1, k);\n}\n\t\nint main()\n{\n\tint a[] = {1, 4, 2, 8, 5, 7, 23, 58, 16, 27, 55, 13, 26, 24, 12};\n\tprintf(\"%d\\n\", quick_select(a, 0, 14, 5));\n\treturn 0;\n}\n注意：只填写划线部分缺少的代码，不要抄写已经存在的代码或符号。\n\n```\n个人感受：\n    这道题。。算了。。填空这种题目每次我都是瞎jb猜，然后看答案对不对。。\n我写了个(a,l,r,k)大概对了，就交了。。宛如智障\n以为。。对了的\n好的\n\n### 题目答案：\n答案：a,i+1,r,k-(i-l+1)\n\n\n## 第六题： 递增三元组(满分11分)\n### 题目描述：\n>给定三个整数数组\nA = [A1, A2, ... AN], \nB = [B1, B2, ... BN], \nC = [C1, C2, ... CN]，\n请你统计有多少个三元组(i, j, k) 满足：\n1. 1 <= i, j, k <= N  \n2. Ai < Bj < Ck  \n\n>【输入格式】 \n第一行包含一个整数N。\n第二行包含N个整数A1, A2, ... AN。\n第三行包含N个整数B1, B2, ... BN。\n第四行包含N个整数C1, C2, ... CN。\n对于30%的数据，1 <= N <= 100  \n对于60%的数据，1 <= N <= 1000 \n对于100%的数据，1 <= N <= 100000 0 <= Ai, Bi, Ci <= 100000 \n\n>【输出格式】\n一个整数表示答案\n\n>【样例输入】\n3\n1 1 1\n2 2 2\n3 3 3\n\n>【样例输出】\n27 \n\n>资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n个人感受：\n    最简单的一道题了== 暴力for。。虽然不知道最后会不会爆。。但至少有60吧\n一开始看到..emmm 不就深搜嘛，最近写了不少，好的。。三分钟码完。。挖草 怎么样例输入答案一直是3\n心态崩了，换了三个for....老子就不信了。。咦。。怎么还是3\n我特么。。dev坏了吧？？？偷偷换个VC还是3  VS2010  还是3\n心态崩了。。  输出中间值明明有27次啊。。 \n忽然。。发现。。 调用函数没return最后的cnt  。。好小子，你过来，不打死你\n以至最后也懒得换回dfs了。。最后，如果有人看了我的代码，可能会觉得被欺骗了。。函数名=dfs，一看。。里面只有三个for。。。\n哈哈哈哈哈哈\n\n### 题目答案：\n**dfs**\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nint cnt=0,n;\nint a[100001],b[100001],c[100001]; \nint dfs(int i,int j,int k){\n\tif(a[i]<b[j]&&b[j]<c[k])\n\t\tcnt++;\n\tif(i==n-1&&j==n-1&&k==n-1)\n\t\treturn cnt;\n\tif(k<n) dfs(i,j,k+1);\n\telse if(j<n) dfs(i,j+1,0);\n\t\telse if(i<n) dfs(i+1,0,0);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tfor(int i=0;i<n;i++)\n\t\tscanf(\"%d\",&c[i]);\n\tprintf(\"%d\",dfs(0,0,0));\n\treturn 0;\n} \n```\n**三个for 暴力求解**\n```C++\nfor(int i=0;i<n;i++)\n\t\tfor(int j=0;j<n;j++)\n\t\t\tfor(int k=0;k<n;k++)\n\t\t\t\tif(a[i]<b[j]&&b[j]<c[k])\n\t\t\t\t\tcnt++;\n\treturn cnt;\n```\n\n**最优解**\n思路：分别排序\n先看b和c两个数组，设两个下标i，j分别指向bc数组，对于每一个b[i],可以找到对应的c[j]恰好大于b[i]，那么对于b[i]有n-j个c[j]满足b[i]<c[j]。令sumb[i]=n-j，表示每个b[i]对应的c[j]个数。将sumb处理成后缀和。\n然后再看a和b数组，用同样的方法打出数组suma，不过suma[i]=sumb[j]；\n然后将suma处理成后缀和，suma[0]即为答案。\n```C++\n#include<bits/stdc++.h>  \nusing namespace std;  \ntypedef long long ll;  \nconst int N=1e6+10;  \nll suma[N],sumb[N];  \nint a[N],b[N],c[N];  \nint n;  \nint main(){  \n    scanf(\"%d\",&n);  \n    for(int i=0;i<n;i++)  \n        scanf(\"%d\",&a[i]);  \n    for(int i=0;i<n;i++)  \n        scanf(\"%d\",&b[i]);  \n    for(int i=0;i<n;i++)  \n        scanf(\"%d\",&c[i]);  \n    sort(a,a+n);  \n    sort(b,b+n);  \n    sort(c,c+n);  \n    memset(sumb,0,sizeof(sumb));  \n    for(int i=0,j=0;i<n;i++){  \n        while(j<n&&b[i]>=c[j])j++;  \n        if(j>=n)break;  \n        sumb[i]=n-j;  \n    }  \n    for(int i=n-2;i>=0;i--) //b hou zhui he  \n        sumb[i]+=sumb[i+1];  \n  \n    for(int i=0,j=0;i<n;i++){  \n        while(j<n&&a[i]>=b[j])j++;  \n        if(j>=n)break;  \n        suma[i]=sumb[j];  \n    }  \n    for(int i=n-2;i>=0;i--) //a hou zhui he  \n        suma[i]+=suma[i+1];  \n  \n    printf(\"%lld\\n\",suma[0]);  \n}  \n```\n\n## 第七题： 螺旋折线(满分19分)\n### 题目描述：\n>如图p1.png所示的螺旋折线经过平面上所有整点恰好一次。  \n对于整点(X, Y)，我们定义它到原点的距离dis(X, Y)是从原点到(X, Y)的螺旋折线段的长度。  \n例如dis(0, 1)=3, dis(-2, -1)=9  \n给出整点坐标(X, Y)，你能计算出dis(X, Y)吗？\n\n>【输入格式】\nX和Y  \n对于40%的数据，-1000 <= X, Y <= 1000  \n对于70%的数据，-100000 <= X， Y <= 100000  \n对于100%的数据, -1000000000 <= X, Y <= 1000000000  \n\n>【输出格式】\n输出dis(X, Y)  \n\n>【样例输入】\n0 1\n\n>【样例输出】\n3\n\n>资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n{% asset_img 2.png %}\n个人感受：\n    并列最简单的一题，emmmm  没啥操作。。就是循环到那个点\n应该时间上会爆了，反正至少50吧。。\n\n### 题目答案：\n**代码：**\n#include<bits/stdc++.h>\nusing namespace std;\nint ex,ey,nx=0,ny=0; \nint check(){\n\tif(nx==ex&&ny==ey)\n\t\treturn 1;\n\telse return 0;\n}\nint main(){\n\tscanf(\"%d%d\",&ex,&ey);\n\tint h=0,cnt=0;\n\twhile(1){\n\t\tfor(int i=0;i<4;i++){\n\t\t\th++;\n\t\t\tif(i==0)\n\t\t\t\tfor(int j=0;j<(h+1)/2;j++){\n\t\t\t\t\tnx--;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(check()){\n\t\t\t\t\t\tprintf(\"%d\",cnt);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\telse if(i==1)\n\t\t\t\tfor(int j=0;j<h/2;j++){\n\t\t\t\t\tny++;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(check()){\n\t\t\t\t\t\tprintf(\"%d\",cnt);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\telse if(i==2)\n\t\t\t\tfor(int j=0;j<(h+1)/2;j++){\n\t\t\t\t\tnx++;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(check()){\n\t\t\t\t\t\tprintf(\"%d\",cnt);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tfor(int j=0;j<h/2;j++){\n\t\t\t\t\tny--;\n\t\t\t\t\tcnt++;\n\t\t\t\t\tif(check()){\n\t\t\t\t\t\tprintf(\"%d\",cnt);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n## 第八题： 日志统计(满分21分)\n### 题目描述：\n> 小明维护着一个程序员论坛。现在他收集了一份\"点赞\"日志，日志共有N行。其中每一行的格式是：\nts id  \n表示在ts时刻编号id的帖子收到一个\"赞\"。  \n现在小明想统计有哪些帖子曾经是\"热帖\"。如果一个帖子曾在任意一个长度为D的时间段内收到不少于K个赞，小明就认为这个帖子曾是\"热帖\"。  \n具体来说，如果存在某个时刻T满足该帖在[T, T+D)这段时间内(注意是左闭右开区间)收到不少于K个赞，该帖就曾是\"热帖\"。  \n给定日志，请你帮助小明统计出所有曾是\"热帖\"的帖子编号。  \n\n>【输入格式】\n第一行包含三个整数N、D和K。  \n以下N行每行一条日志，包含两个整数ts和id。  \n对于50%的数据，1 <= K <= N <= 1000  \n对于100%的数据，1 <= K <= N <= 100000 0 <= ts <= 100000 0 <= id <= 100000  \n\n>【输出格式】\n按从小到大的顺序输出热帖id。每个id一行。  \n\n>【输入样例】\n7 10 2  \n0 1  \n0 10    \n10 10  \n10 1  \n9 1\n100 3  \n100 3  \n\n>【输出样例】\n1  \n3  \n\n\n>资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n个人感受：\n    很烦的一道题。。 思路就是先筛选 ts大于k的   然后再按照 ts在 某段时间内多少排序。。\n道理都懂。。就是弱鸡。。。。没写完就交了==  没写完的我  输入正常，输出 print(\"1\\n3\");\n哈哈哈哈 看看能不能 骗上10分\n\n### 题目答案：\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e6+10;\nstruct node{\n\tint t,id;\n}e[N];\nbool cmp(node a,node b){\t// 对结构体按某个条件排序 \n\treturn a.t<b.t;\n}\nint sta[N],top;\nint c[N];\nint n,d,k;\nbool insta[N];\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&d,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&e[i].t,&e[i].id);\n\t}\n\tsort(e+1,e+1+n,cmp);\n\tmemset(c,0,sizeof(c));\n\tmemset(insta,0,sizeof(insta));\n\ttop=0;\n\tfor(int i=1,j=1;i<=n;i++)\n\t{\n\t\twhile(j<=n&&e[i].t-e[j].t>=d)\n\t\tc[e[j++].id]--;\n\t\tc[e[i].id]++;\n\t\tif(c[e[i].id]>=k&&!insta[e[i].id]){\n\t\t\tsta[top++]=e[i].id;\n\t\t\tinsta[e[i].id]=1;\n\t\t}\n\n\t}\n\tsort(sta,sta+top);\n\ttop=unique(sta,sta+top)-sta;\n\tfor(int i=0;i<top;i++)\n\t\tprintf(\"%d\\n\",sta[i]);\n}\n```\n\n## 第九题：全球变暖(满分23分)\n### 题目描述：\n>你有一张某海域NxN像素的照片，\".\"表示海洋、\"#\"表示陆地，如下所示：\n..\\..\\..\\.\n.#\\#..\\..\n.#\\#..\\..\n..\\..##.\n.\\.####.\n..\\.###.\n..\\..\\..\\.\n其中\"上下左右\"四个方向上连在一起的一片陆地组成一座岛屿。例如上图就有2座岛屿。  \n由于全球变暖导致了海面上升，科学家预测未来几十年，岛屿边缘一个像素的范围会被海水淹没。具体来说如果一块陆地像素与海洋相邻(上下左右四个相邻像素中有海洋)，它就会被淹没。  \n例如上图中的海域未来会变成如下样子：\n..\\..\\..\\.\n..\\..\\..\\.\n..\\..\\..\\.\n..\\..\\..\\.\n..\\..\\#..\n..\\..\\..\\.\n.\\..\\..\\..\n请你计算：依照科学家的预测，照片中有多少岛屿会被完全淹没。  \n\n>【输入格式】\n第一行包含一个整数N。  (1 <= N <= 1000)  \n以下N行N列代表一张海域照片。  \n照片保证第1行、第1列、第N行、第N列的像素都是海洋。  \n\n>【输出格式】\n一个整数表示答案。\n\n>【输入样例】\n7 \n..\\..\\..\\.\n.##..\\..\n.##.\\...\n..\\..##.\n..####.\n...###.\n..\\..\\..\\.  \n\n>【输出样例】\n1  \n\n>资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n个人感受：\n    为啥样例 淹没是1.。没被淹没是1\n我傻傻的看错了==  输出了相反的。。 阿西吧 心痛\n反正我的就是两个bfs\n还有一个很有趣的\n有人给了一组这样的数据：\n\\### ###\n\\#######\n\\### ###\n只有一个岛屿但是淹没后你会发现“岛屿”还会多出来一个！如下\n\n\\# # \n\n这个。。输出0还是-1.。我也不知道。。等答案了。。。\n\n\n### 题目答案：\n**这个 有一个正解代码**\n```C++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e3+10;\nint dir[4][2]={-1,0,0,1,1,0,0,-1};\nbool vis[N][N];\nchar mmp[N][N];\nint n,flag;\nbool check(int x,int y){//check if sea;\n\tfor(int i=0;i<4;i++){\n\t\tint fx=x+dir[i][0];\n\t\tint fy=y+dir[i][1];\n\t\tif(fx&&fy&&fx<=n&&fy<=n&&mmp[fx][fy]=='.')\n\t\t\treturn 1; //sea;\n\t}\n\treturn 0; //no sea;\n}\nvoid dfs(int x,int y){\n\tvis[x][y]=1;\n\tif(!check(x,y))flag=1; //remain lu di\n\tfor(int i=0;i<4;i++){\n\t\tint fx=x+dir[i][0];\n\t\tint fy=y+dir[i][1];\n\t\tif(fx&&fy&&fx<=n&&fy<=n&&!vis[fx][fy]&&mmp[fx][fy]=='#')\n\t\t\tdfs(fx,fy);\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",mmp[i]+1);\n\t}\n\tmemset(vis,0,sizeof(vis));\n\tint ans=0,ludi=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!vis[i][j]&&mmp[i][j]=='#'){\n            ludi++;\n\t\t\t\tflag=0; //yan mo\n\t\t\t\tdfs(i,j);\n\t\t\t\tif(flag) ans++; //remained\n\t\t\t}\n\n\t}\n\tprintf(\"%d\",ludi-ans);\n}\n\n```\n\n## 第一题： 乘积最大(满分25分)\n### 题目描述：\n>给定N个整数A1, A2, ... AN。请你从中选出K个数，使其乘积最大。  \n请你求出最大的乘积，由于乘积可能超出整型范围，你只需输出乘积除以1000000009的余数。  \n注意，如果X<0， 我们定义X除以1000000009的余数是负(-X)除以1000000009的余数。\n即：0-((0-x) % 1000000009)\n\n>【输入格式】\n第一行包含两个整数N和K。  \n以下N行每行一个整数Ai。  \n对于40%的数据，1 <= K <= N <= 100  \n对于60%的数据，1 <= K <= 1000  \n对于100%的数据，1 <= K <= N <= 100000  -100000 <= Ai <= 100000  \n\n>【输出格式】\n一个整数，表示答案。\n\n>【输入样例】\n5 3 \n-100000   \n-10000   \n2   \n100000  \n10000  \n\n>【输出样例】\n999100009\n\n>再例如：\n【输入样例】\n5 3 \n-100000   \n-100000   \n-2   \n-100000  \n-100000\n\n>【输出样例】\n-999999829\n\n资源约定：\n峰值内存消耗（含虚拟机） < 256M\nCPU消耗  < 1000ms\n\n个人感受：\n    别说了。。我 也不知道为啥。。第二个案例一直是-1.。。。脑阔疼  还是交了，毕竟如果都跟第一个案例一样。。我还是能对的==\n瑟瑟发抖的提交了。。\n看了大佬的分析 我终于知道弱鸡的自己错哪了==\n### 题目答案：\n【分析】像贪模拟贪心。\n\n分了三种情况，1.不含负数，2.不含正数，3.正负都有。 0的情况可以同时放在这三种情况中。\n\n情况1：从最大数开始选即可\n情况2：先考虑能否为0，再考虑选偶数个最小负数，若都做不到，就选奇数个最大负数\n情况3：最难。先考虑用尽量少的负数，尽可能用正数，再从最小负数开始考虑，每次拿两个，乘积去和最小整数的进行比较，若大于，则可用这两个负数替换那两个正数\n\n**【代码】**\n```C++      \n#include<bits/stdc++.h>  \nusing namespace std;  \ntypedef long long ll;  \nconst int mod=1e9+9;  \nconst int N=1e5+10;  \n  \nbool cmp(int i,int j){  \n    return i>j;  \n}  \nll a[N],b[N];  \nint ta,tb,n,k;  \nint main()  \n{  \n    scanf(\"%d%d\",&n,&k);  \n    ta=tb=0;  \n    int x;  \n    int c0=0;  \n    for(int i=0;i<n;i++)  \n    {  \n        scanf(\"%d\",&x);  \n        if(x>0)a[ta++]=x;  \n        else if(x<0)b[tb++]=x;  \n        else c0++;  \n    }  \n    sort(a,a+ta,cmp);  \n    sort(b,b+tb);  \n    ll ans=1;  \n    if(tb==0) //positive and 0  \n    {  \n        if(ta<k)ans=0; //0  \n        else {  \n            for(int i=0;i<k;i++)  \n                ans=ans*a[i]%mod;  \n        }  \n    }  \n    else if(ta==0) //negetive and 0  \n    {  \n        if(k%2&&c0 || tb<k)ans=0;  \n        else {  \n            if(k%2) //k is odd, but no 0  \n            {  \n                for(int i=0,j=tb-1;i<k;i++,j--)  \n                    ans=ans*b[j]%mod;  \n            }  \n            else{  \n                for(int i=0;i<k;i++)  \n                    ans=ans*b[i]%mod;  \n            }  \n        }  \n    }  \n    else  //-,+, 0  \n    {  \n        if(c0&&ta+tb<k){  \n            ans=0;  \n        }  \n        else if(ta+tb==k&&c0==0){  \n            for(int i=0;i<tb;i++)ans=ans*b[i]%mod;  \n            for(int i=0;i<ta;i++)ans=ans*a[i]%mod;  \n        }  \n        else{  \n            int fu;  \n            if(k<=ta)fu=0;  \n            else fu=(k-ta+1)&(-2);  \n            cout<<\"fu\"<<fu<<endl;  \n            int t=fu;  \n            for(int i=fu;i<=tb&&i<=k;i+=2)  \n                if(i>=2&&k-i>=0)  \n                {  \n                    cout<<\"i \"<<i<<endl;  \n                    if(b[i-1]*b[i-2]>a[k-i]*a[k-i+1])  \n                        t=i;  \n                    else break;  \n                }  \n            for(int i=0;i<t;i++)  ans=ans*b[i]%mod;  \n            for(int i=0;i<k-t;i++)ans=ans*a[i]%mod;  \n        }  \n    }  \n    printf(\"%lld\\n\",ans);  \n}  \n```\n\n个人总结：垃圾的我!\n\t一开始以为 对了8题(不难吧~)\n\t好的，发现两道题看错了\n\t对六道有省二嘛？\t\n\t等到答案出来。。填空再去两道== 傻逼答案\n\t所以 愚人节快乐\n\t其实真的不难。。看到答案心态易爆炸\n笑死人的讨论区，值得一看。。。\nhttps://www.zhihu.com/question/270622751\n\n想想是真的菜\n好好努力 尽力试试能不能进入ACM训练队吧！\nPS:其实省赛的难度真的不大，好好准备一下明年再来！\n\n\n\nPS:居然水进了国赛。。。。美滋滋哈哈哈哈 开心了好久。。公费游北京  我来了！！！\n最近多刷刷题 争取能有机会冲击国奖吧(虽然没啥可能)\n2018/4/9","slug":"第九届蓝桥杯试题、答案以及比赛经历","published":1,"updated":"2019-09-22T07:02:11.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ur8hhx0041a7s1kl8si6v9","content":"<p>时间:2018年愚人节<br>地点：南京航空航天大学(江宁校区)<br>事件：第九届蓝桥杯省赛</p>\n<p>废话不多说，直接上题目：</p>\n<h2 id=\"第一题：-第几天-满分5分\"><a href=\"#第一题：-第几天-满分5分\" class=\"headerlink\" title=\"第一题： 第几天(满分5分)\"></a>第一题： 第几天(满分5分)</h2><h3 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>2000年的1月1日，是那一年的第1天。那么，2000年的5月4日，是那一年的第几天？<br>注意：需要提交的是一个整数，不要填写任何多余内容。</p>\n</blockquote>\n<p>个人感受：<br>    很简单的一道题，学习了各位大佬的比赛经验，这种题目也不去考虑编程了，不仅要判断几月是几天还要去思考是否闰年</p>\n<h3 id=\"题目答案：\"><a href=\"#题目答案：\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>答案：125<br>方法: 日历/excel<br>例如：用excel快速求解，第一个单元格输入2000/1/1，第二个单元格输入2000/5/4，然后在第三个单元格生成，第二个单元格减去第一个单元格的值<br>哦，对了 ，算完是124，还要加上1！5s出答案。</p>\n<h2 id=\"第二题：-明码-满分7分\"><a href=\"#第二题：-明码-满分7分\" class=\"headerlink\" title=\"第二题： 明码(满分7分)\"></a>第二题： 明码(满分7分)</h2><h3 id=\"题目描述：-1\"><a href=\"#题目描述：-1\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>汉字的字形存在于字库中，即便在今天，16点阵的字库也仍然使用广泛。<br>16点阵的字库把每个汉字看成是16x16个像素信息。并把这些信息记录在字节中。<br>一个字节可以存储8位信息，用32个字节就可以存一个汉字的字形了。<br>把每个字节转为2进制表示，1表示墨迹，0表示底色。每行2个字节，<br>一共16行，布局是：<br>    第1字节，第2字节<br>    第3字节，第4字节<br>    ….<br>    第31字节, 第32字节<br>这道题目是给你一段多个汉字组成的信息，每个汉字用32个字节表示，这里给出了字节作为有符号整数的值。<br>题目的要求隐藏在这些信息中。你的任务是复原这些汉字的字形，从中看出题目的要求，并根据要求填写答案。<br>这段信息是（一共10个汉字）：<br>4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0<br>16 64 16 64 34 68 127 126 66 -124 67 4 66 4 66 -124 126 100 66 36 66 4 66 4 66 4 126 4 66 40 0 16<br>4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0<br>0 -128 64 -128 48 -128 17 8 1 -4 2 8 8 80 16 64 32 64 -32 64 32 -96 32 -96 33 16 34 8 36 14 40 4<br>4 0 3 0 1 0 0 4 -1 -2 4 0 4 16 7 -8 4 16 4 16 4 16 8 16 8 16 16 16 32 -96 64 64<br>16 64 20 72 62 -4 73 32 5 16 1 0 63 -8 1 0 -1 -2 0 64 0 80 63 -8 8 64 4 64 1 64 0 -128<br>0 16 63 -8 1 0 1 0 1 0 1 4 -1 -2 1 0 1 0 1 0 1 0 1 0 1 0 1 0 5 0 2 0<br>2 0 2 0 7 -16 8 32 24 64 37 -128 2 -128 12 -128 113 -4 2 8 12 16 18 32 33 -64 1 0 14 0 112 0<br>1 0 1 0 1 0 9 32 9 16 17 12 17 4 33 16 65 16 1 32 1 64 0 -128 1 0 2 0 12 0 112 0<br>0 0 0 0 7 -16 24 24 48 12 56 12 0 56 0 -32 0 -64 0 -128 0 0 0 0 1 -128 3 -64 1 -128 0 0<br><strong>注意：需要提交的是一个整数，不要填写任何多余内容。</strong></p>\n</blockquote>\n<p>个人感受：<br>    很有趣的一道题目，一开始有点懵圈，这么多的数据，想到的就是转化为八位二进制，然后两个一组输出 然后换行，<br>最后从一堆二进制中看出 题目：九的九次方等于多少？(一开始我还以为时输入转化得到的话，结果看到了最后一个翻译出来是问号==emmm，又看了下题目最后一行，整数！emmmm)<br>PS:负数直接用128相加一下就差不多能看了.</p>\n<h3 id=\"题目答案：-1\"><a href=\"#题目答案：-1\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>387420489<br><strong>代码一</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">8</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\tx+=<span class=\"number\">128</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">7</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">\t\ta[i]=x%<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\tx/=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i]) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"*\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">16</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//由题目很容易可以看出 两个八位二进制一行 </span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;x,&amp;y);</span><br><span class=\"line\">\t\t\tprint(x);</span><br><span class=\"line\">\t\t\tprint(y);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>代码二</strong><br>有大佬用位运算写:<br>位运算不不用考虑负数的问题..直接按位进行运算<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">7</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// x=4    100 &amp;  10000000  = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  1000000   = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  100000    = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  10000     = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  1000      = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  100       = 100</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  10        = 0\t</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  1         = 0</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x&amp;(<span class=\"number\">1</span>&lt;&lt;i))</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;(x&amp;(<span class=\"number\">1</span>&lt;&lt;i))&lt;&lt;<span class=\"string\">'*'</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">16</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//由题目很容易可以看出 两个八位二进制一行 </span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;x,&amp;y);</span><br><span class=\"line\">\t\t\tprint(x);</span><br><span class=\"line\">\t\t\tprint(y);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第三题：-乘积尾零-满分13分\"><a href=\"#第三题：-乘积尾零-满分13分\" class=\"headerlink\" title=\"第三题： 乘积尾零(满分13分)\"></a>第三题： 乘积尾零(满分13分)</h2><h3 id=\"题目描述：-2\"><a href=\"#题目描述：-2\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>如下的10行数据，每行有10个整数，请你求出它们的乘积的末尾有多少个零？<br>5650 4542 3554 473 946 4114 3871 9073 90 4329<br>2758 7949 6113 5659 5245 7432 3051 4434 6704 3594<br>9937 1173 6866 3397 4759 7557 3070 2287 1453 9899<br>1486 5722 3135 1170 4014 5510 5120 729 2880 9019<br>2049 698 4582 4346 4427 646 9742 7340 1230 7683<br>5693 7015 6887 7381 4172 4341 2909 2027 7355 5649<br>6701 6645 1671 5978 2704 9926 295 3125 3878 6785<br>2066 4247 4800 1578 6652 4616 1113 6205 3264 2915<br>3966 5291 2904 1285 2193 1428 2265 8730 9436 7074<br>689 5510 8243 6114 337 4096 8199 7313 3685 211<br>注意：需要提交的是一个整数，表示末尾零的个数。不要填写任何多余内容。</p>\n</blockquote>\n<p>个人感受：<br>    大数这道题。。写的时候还是贼开心的==  因为。。我以为写出来了==<br>对于这种数学弱鸡，简直不懂分解为2和5。。只会一行一行的去十个十个相乘再去模一亿取余<br>然而==死在了 我只保留了最后两位 非零数。。。。导致杀千刀的少了三个0(大佬说要保留四位（后我实测为3位）)<br>这道题 错的 特别 不该  代码也就三分钟的事==<br></p>\n<p>思路：两种方法<br>①直接将所有数相乘，然后每乘一个数就把后面0全部去掉记一下，不过中间会爆long long，这个好办，每次乘完只保留后4位非0数字，例如216037就只保留6037<br><strong>②正解：所有的0都一定是2*5产生的，所以将每个数拆成一堆2乘上一堆5再乘上一个数，之后统计下有多少个2和多少个5取少的那个就是答案</strong></p>\n<h3 id=\"题目答案：-2\"><a href=\"#题目答案：-2\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>答案：31<br><strong>思路一的代码</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">101</span>],cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,a+i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">99</span>;i++)&#123;</span><br><span class=\"line\">\t\ta[i+<span class=\"number\">1</span>]*=a[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(a[i+<span class=\"number\">1</span>]%<span class=\"number\">10</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\ta[i+<span class=\"number\">1</span>]/=<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ta[i+<span class=\"number\">1</span>]%=<span class=\"number\">1000</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;cnt; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>思路二的代码</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> res2=<span class=\"number\">0</span>,res5=<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;x);  </span><br><span class=\"line\">        <span class=\"keyword\">int</span> y=x;  </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(x%<span class=\"number\">2</span>==<span class=\"number\">0</span>)res2++,x/=<span class=\"number\">2</span>; </span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x%<span class=\"number\">5</span>==<span class=\"number\">0</span>)res5++,x/=<span class=\"number\">5</span>;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;min(res2,res5)&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第四题：-测试次数-满分17分\"><a href=\"#第四题：-测试次数-满分17分\" class=\"headerlink\" title=\"第四题： 测试次数(满分17分)\"></a>第四题： 测试次数(满分17分)</h2><h3 id=\"题目描述：-3\"><a href=\"#题目描述：-3\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>x星球的居民脾气不太好，但好在他们生气的时候唯一的异常举动是：摔手机。<br>各大厂商也就纷纷推出各种耐摔型手机。x星球的质监局规定了手机必须经过耐摔测试，并且评定出一个耐摔指数来，之后才允许上市流通。<br>x星球有很多高耸入云的高塔，刚好可以用来做耐摔测试。塔的每一层高度都是一样的，与地球上稍有不同的是，他们的第一层不是地面，而是相当于我们的2楼。<br>如果手机从第7层扔下去没摔坏，但第8层摔坏了，则手机耐摔指数=7。<br>特别地，如果手机从第1层扔下去就坏了，则耐摔指数=0。<br>如果到了塔的最高层第n层扔没摔坏，则耐摔指数=n<br>为了减少测试次数，从每个厂家抽样3部手机参加测试。<br>某次测试的塔高为1000层，如果我们总是采用最佳策略，在最坏的运气下最多需要测试多少次才能确定手机的耐摔指数呢？<br>请填写这个最多测试次数。<br>注意：需要填写的是一个整数，不要填写任何多余内容。</p>\n</blockquote>\n<p>个人感受：<br>    这道题凉凉，很凉，透心凉<br>教训，下次一定要先看分值==<br>看到题目，最优策略？OK二分！然后就算出了  九次吧==然后自信直接过<br>回来车上在复盘，忽然想到，等下。。那个。。摔手机？手机。。手机。。会摔坏了吧。。<br>mm了个大p，一问舍友(zl) ，他不是还给了三个手机吗？<br>我…..好的。。。题目都没看清。。都不知道我在干嘛。。</p>\n<p>不过就算知道了，我也没算对。。。心理平衡了一点</p>\n<p>后来我只能算出28。。。emmmm<br>大佬: 直接三维 dp dp[0][1000][3] 第一个0一定不爆，第二个1000一定爆，第三个 3个手机。。<br>emmmmm……还是不会</p>\n<h3 id=\"题目答案：-3\"><a href=\"#题目答案：-3\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>答案：19</p>\n<h2 id=\"第五题：-快速排序-满分9分\"><a href=\"#第五题：-快速排序-满分9分\" class=\"headerlink\" title=\"第五题： 快速排序(满分9分)\"></a>第五题： 快速排序(满分9分)</h2><h3 id=\"题目描述：-4\"><a href=\"#题目描述：-4\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>以下代码可以从数组a[]中找出第k小的元素。<br>它使用了类似快速排序中的分治算法，期望时间复杂度是O(N)的。<br>请仔细阅读分析源码，填写划线部分缺失的内容。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">quick_select</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> p = rand() % (r - l + <span class=\"number\">1</span>) + l;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x = a[p];</span><br><span class=\"line\">\t&#123;<span class=\"keyword\">int</span> t = a[p]; a[p] = a[r]; a[r] = t;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i = l, j = r;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i &lt; j) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(i &lt; j &amp;&amp; a[i] &lt; x) i++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i &lt; j) &#123;</span><br><span class=\"line\">\t\t\ta[j] = a[i];</span><br><span class=\"line\">\t\t\tj--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(i &lt; j &amp;&amp; a[j] &gt; x) j--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i &lt; j) &#123;</span><br><span class=\"line\">\t\t\ta[i] = a[j];</span><br><span class=\"line\">\t\t\ti++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ta[i] = x;</span><br><span class=\"line\">\tp = i;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i - l + <span class=\"number\">1</span> == k) <span class=\"keyword\">return</span> a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i - l + <span class=\"number\">1</span> &lt; k) <span class=\"keyword\">return</span> quick_select( _____________________________ ); <span class=\"comment\">//填空</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> quick_select(a, l, i - <span class=\"number\">1</span>, k);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[] = &#123;<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">23</span>, <span class=\"number\">58</span>, <span class=\"number\">16</span>, <span class=\"number\">27</span>, <span class=\"number\">55</span>, <span class=\"number\">13</span>, <span class=\"number\">26</span>, <span class=\"number\">24</span>, <span class=\"number\">12</span>&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, quick_select(a, <span class=\"number\">0</span>, <span class=\"number\">14</span>, <span class=\"number\">5</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">注意：只填写划线部分缺少的代码，不要抄写已经存在的代码或符号。</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>个人感受：<br>    这道题。。算了。。填空这种题目每次我都是瞎jb猜，然后看答案对不对。。<br>我写了个(a,l,r,k)大概对了，就交了。。宛如智障<br>以为。。对了的<br>好的</p>\n<h3 id=\"题目答案：-4\"><a href=\"#题目答案：-4\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>答案：a,i+1,r,k-(i-l+1)</p>\n<h2 id=\"第六题：-递增三元组-满分11分\"><a href=\"#第六题：-递增三元组-满分11分\" class=\"headerlink\" title=\"第六题： 递增三元组(满分11分)\"></a>第六题： 递增三元组(满分11分)</h2><h3 id=\"题目描述：-5\"><a href=\"#题目描述：-5\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>给定三个整数数组<br>A = [A1, A2, … AN],<br>B = [B1, B2, … BN],<br>C = [C1, C2, … CN]，<br>请你统计有多少个三元组(i, j, k) 满足：</p>\n<ol>\n<li>1 &lt;= i, j, k &lt;= N  </li>\n<li>Ai &lt; Bj &lt; Ck  </li>\n</ol>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>第一行包含一个整数N。<br>第二行包含N个整数A1, A2, … AN。<br>第三行包含N个整数B1, B2, … BN。<br>第四行包含N个整数C1, C2, … CN。<br>对于30%的数据，1 &lt;= N &lt;= 100<br>对于60%的数据，1 &lt;= N &lt;= 1000<br>对于100%的数据，1 &lt;= N &lt;= 100000 0 &lt;= Ai, Bi, Ci &lt;= 100000 </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>一个整数表示答案</p>\n</blockquote>\n<blockquote>\n<p>【样例输入】<br>3<br>1 1 1<br>2 2 2<br>3 3 3</p>\n</blockquote>\n<blockquote>\n<p>【样例输出】<br>27 </p>\n</blockquote>\n<blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n</blockquote>\n<p>个人感受：<br>    最简单的一道题了== 暴力for。。虽然不知道最后会不会爆。。但至少有60吧<br>一开始看到..emmm 不就深搜嘛，最近写了不少，好的。。三分钟码完。。挖草 怎么样例输入答案一直是3<br>心态崩了，换了三个for….老子就不信了。。咦。。怎么还是3<br>我特么。。dev坏了吧？？？偷偷换个VC还是3  VS2010  还是3<br>心态崩了。。  输出中间值明明有27次啊。。<br>忽然。。发现。。 调用函数没return最后的cnt  。。好小子，你过来，不打死你<br>以至最后也懒得换回dfs了。。最后，如果有人看了我的代码，可能会觉得被欺骗了。。函数名=dfs，一看。。里面只有三个for。。。<br>哈哈哈哈哈哈</p>\n<h3 id=\"题目答案：-5\"><a href=\"#题目答案：-5\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p><strong>dfs</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>,n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">100001</span>],b[<span class=\"number\">100001</span>],c[<span class=\"number\">100001</span>]; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j,<span class=\"keyword\">int</span> k)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a[i]&lt;b[j]&amp;&amp;b[j]&lt;c[k])</span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i==n<span class=\"number\">-1</span>&amp;&amp;j==n<span class=\"number\">-1</span>&amp;&amp;k==n<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> cnt;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(k&lt;n) dfs(i,j,k+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j&lt;n) dfs(i,j+<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i&lt;n) dfs(i+<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;b[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;c[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,dfs(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>三个for 暴力求解</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[i]&lt;b[j]&amp;&amp;b[j]&lt;c[k])</span><br><span class=\"line\">\t\t\t\t\tcnt++;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cnt;</span><br></pre></td></tr></table></figure></p>\n<p><strong>最优解</strong><br>思路：分别排序<br>先看b和c两个数组，设两个下标i，j分别指向bc数组，对于每一个b[i],可以找到对应的c[j]恰好大于b[i]，那么对于b[i]有n-j个c[j]满足b[i]&lt;c[j]。令sumb[i]=n-j，表示每个b[i]对应的c[j]个数。将sumb处理成后缀和。<br>然后再看a和b数组，用同样的方法打出数组suma，不过suma[i]=sumb[j]；<br>然后将suma处理成后缀和，suma[0]即为答案。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e6</span>+<span class=\"number\">10</span>;  </span><br><span class=\"line\">ll suma[N],sumb[N];  </span><br><span class=\"line\"><span class=\"keyword\">int</span> a[N],b[N],c[N];  </span><br><span class=\"line\"><span class=\"keyword\">int</span> n;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)  </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i]);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)  </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;b[i]);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)  </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;c[i]);  </span><br><span class=\"line\">    sort(a,a+n);  </span><br><span class=\"line\">    sort(b,b+n);  </span><br><span class=\"line\">    sort(c,c+n);  </span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(sumb,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(sumb));  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j&lt;n&amp;&amp;b[i]&gt;=c[j])j++;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j&gt;=n)<span class=\"keyword\">break</span>;  </span><br><span class=\"line\">        sumb[i]=n-j;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n<span class=\"number\">-2</span>;i&gt;=<span class=\"number\">0</span>;i--) <span class=\"comment\">//b hou zhui he  </span></span><br><span class=\"line\">        sumb[i]+=sumb[i+<span class=\"number\">1</span>];  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j&lt;n&amp;&amp;a[i]&gt;=b[j])j++;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j&gt;=n)<span class=\"keyword\">break</span>;  </span><br><span class=\"line\">        suma[i]=sumb[j];  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n<span class=\"number\">-2</span>;i&gt;=<span class=\"number\">0</span>;i--) <span class=\"comment\">//a hou zhui he  </span></span><br><span class=\"line\">        suma[i]+=suma[i+<span class=\"number\">1</span>];  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,suma[<span class=\"number\">0</span>]);  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第七题：-螺旋折线-满分19分\"><a href=\"#第七题：-螺旋折线-满分19分\" class=\"headerlink\" title=\"第七题： 螺旋折线(满分19分)\"></a>第七题： 螺旋折线(满分19分)</h2><h3 id=\"题目描述：-6\"><a href=\"#题目描述：-6\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>如图p1.png所示的螺旋折线经过平面上所有整点恰好一次。<br>对于整点(X, Y)，我们定义它到原点的距离dis(X, Y)是从原点到(X, Y)的螺旋折线段的长度。<br>例如dis(0, 1)=3, dis(-2, -1)=9<br>给出整点坐标(X, Y)，你能计算出dis(X, Y)吗？</p>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>X和Y<br>对于40%的数据，-1000 &lt;= X, Y &lt;= 1000<br>对于70%的数据，-100000 &lt;= X， Y &lt;= 100000<br>对于100%的数据, -1000000000 &lt;= X, Y &lt;= 1000000000  </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>输出dis(X, Y)  </p>\n</blockquote>\n<blockquote>\n<p>【样例输入】<br>0 1</p>\n</blockquote>\n<blockquote>\n<p>【样例输出】<br>3</p>\n</blockquote>\n<blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n</blockquote>\n\n<p>个人感受：<br>    并列最简单的一题，emmmm  没啥操作。。就是循环到那个点<br>应该时间上会爆了，反正至少50吧。。</p>\n<h3 id=\"题目答案：-6\"><a href=\"#题目答案：-6\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p><strong>代码：</strong></p>\n<p>#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br>int ex,ey,nx=0,ny=0;<br>int check(){<br>    if(nx==ex&amp;&amp;ny==ey)<br>        return 1;<br>    else return 0;<br>}<br>int main(){<br>    scanf(“%d%d”,&amp;ex,&amp;ey);<br>    int h=0,cnt=0;<br>    while(1){<br>        for(int i=0;i&lt;4;i++){<br>            h++;<br>            if(i==0)<br>                for(int j=0;j&lt;(h+1)/2;j++){<br>                    nx–;<br>                    cnt++;<br>                    if(check()){<br>                        printf(“%d”,cnt);<br>                        return 0;<br>                    }<br>                }<br>            else if(i==1)<br>                for(int j=0;j&lt;h/2;j++){<br>                    ny++;<br>                    cnt++;<br>                    if(check()){<br>                        printf(“%d”,cnt);<br>                        return 0;<br>                    }<br>                }<br>            else if(i==2)<br>                for(int j=0;j&lt;(h+1)/2;j++){<br>                    nx++;<br>                    cnt++;<br>                    if(check()){<br>                        printf(“%d”,cnt);<br>                        return 0;<br>                    }<br>                }<br>            else<br>                for(int j=0;j&lt;h/2;j++){<br>                    ny–;<br>                    cnt++;<br>                    if(check()){<br>                        printf(“%d”,cnt);<br>                        return 0;<br>                    }<br>                }<br>        }<br>    }<br>    return 0;<br>}</p>\n<h2 id=\"第八题：-日志统计-满分21分\"><a href=\"#第八题：-日志统计-满分21分\" class=\"headerlink\" title=\"第八题： 日志统计(满分21分)\"></a>第八题： 日志统计(满分21分)</h2><h3 id=\"题目描述：-7\"><a href=\"#题目描述：-7\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>小明维护着一个程序员论坛。现在他收集了一份”点赞”日志，日志共有N行。其中每一行的格式是：<br>ts id<br>表示在ts时刻编号id的帖子收到一个”赞”。<br>现在小明想统计有哪些帖子曾经是”热帖”。如果一个帖子曾在任意一个长度为D的时间段内收到不少于K个赞，小明就认为这个帖子曾是”热帖”。<br>具体来说，如果存在某个时刻T满足该帖在[T, T+D)这段时间内(注意是左闭右开区间)收到不少于K个赞，该帖就曾是”热帖”。<br>给定日志，请你帮助小明统计出所有曾是”热帖”的帖子编号。  </p>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>第一行包含三个整数N、D和K。<br>以下N行每行一条日志，包含两个整数ts和id。<br>对于50%的数据，1 &lt;= K &lt;= N &lt;= 1000<br>对于100%的数据，1 &lt;= K &lt;= N &lt;= 100000 0 &lt;= ts &lt;= 100000 0 &lt;= id &lt;= 100000  </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>按从小到大的顺序输出热帖id。每个id一行。  </p>\n</blockquote>\n<blockquote>\n<p>【输入样例】<br>7 10 2<br>0 1<br>0 10<br>10 10<br>10 1<br>9 1<br>100 3<br>100 3  </p>\n</blockquote>\n<blockquote>\n<p>【输出样例】<br>1<br>3  </p>\n</blockquote>\n<blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n</blockquote>\n<p>个人感受：<br>    很烦的一道题。。 思路就是先筛选 ts大于k的   然后再按照 ts在 某段时间内多少排序。。<br>道理都懂。。就是弱鸡。。。。没写完就交了==  没写完的我  输入正常，输出 print(“1\\n3”);<br>哈哈哈哈 看看能不能 骗上10分</p>\n<h3 id=\"题目答案：-7\"><a href=\"#题目答案：-7\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e6</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> t,id;</span><br><span class=\"line\">&#125;e[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(node a,node b)</span></span>&#123;\t<span class=\"comment\">// 对结构体按某个条件排序 </span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.t&lt;b.t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> sta[N],top;</span><br><span class=\"line\"><span class=\"keyword\">int</span> c[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,d,k;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> insta[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>,&amp;n,&amp;d,&amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;e[i].t,&amp;e[i].id);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(e+<span class=\"number\">1</span>,e+<span class=\"number\">1</span>+n,cmp);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(c,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(c));</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(insta,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(insta));</span><br><span class=\"line\">\ttop=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(j&lt;=n&amp;&amp;e[i].t-e[j].t&gt;=d)</span><br><span class=\"line\">\t\tc[e[j++].id]--;</span><br><span class=\"line\">\t\tc[e[i].id]++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c[e[i].id]&gt;=k&amp;&amp;!insta[e[i].id])&#123;</span><br><span class=\"line\">\t\t\tsta[top++]=e[i].id;</span><br><span class=\"line\">\t\t\tinsta[e[i].id]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(sta,sta+top);</span><br><span class=\"line\">\ttop=unique(sta,sta+top)-sta;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;top;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,sta[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第九题：全球变暖-满分23分\"><a href=\"#第九题：全球变暖-满分23分\" class=\"headerlink\" title=\"第九题：全球变暖(满分23分)\"></a>第九题：全球变暖(满分23分)</h2><h3 id=\"题目描述：-8\"><a href=\"#题目描述：-8\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>你有一张某海域NxN像素的照片，”.”表示海洋、”#”表示陆地，如下所示：<br>.......<br>.##....<br>.##....<br>....##.<br>..####.<br>...###.<br>.......<br>其中”上下左右”四个方向上连在一起的一片陆地组成一座岛屿。例如上图就有2座岛屿。<br>由于全球变暖导致了海面上升，科学家预测未来几十年，岛屿边缘一个像素的范围会被海水淹没。具体来说如果一块陆地像素与海洋相邻(上下左右四个相邻像素中有海洋)，它就会被淹没。<br>例如上图中的海域未来会变成如下样子：<br>.......<br>.......<br>.......<br>.......<br>....#..<br>.......<br>.......<br>请你计算：依照科学家的预测，照片中有多少岛屿会被完全淹没。  </p>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>第一行包含一个整数N。  (1 &lt;= N &lt;= 1000)<br>以下N行N列代表一张海域照片。<br>照片保证第1行、第1列、第N行、第N列的像素都是海洋。  </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>一个整数表示答案。</p>\n</blockquote>\n<blockquote>\n<p>【输入样例】<br>7<br>.......<br>.##....<br>.##....<br>....##.<br>..####.<br>…###.<br>.......  </p>\n</blockquote>\n<blockquote>\n<p>【输出样例】<br>1  </p>\n</blockquote>\n<blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n</blockquote>\n<p>个人感受：<br>    为啥样例 淹没是1.。没被淹没是1<br>我傻傻的看错了==  输出了相反的。。 阿西吧 心痛<br>反正我的就是两个bfs<br>还有一个很有趣的<br>有人给了一组这样的数据：<br>### ###<br>#######<br>### ###<br>只有一个岛屿但是淹没后你会发现“岛屿”还会多出来一个！如下</p>\n<p># # </p>\n<p>这个。。输出0还是-1.。我也不知道。。等答案了。。。</p>\n<h3 id=\"题目答案：-8\"><a href=\"#题目答案：-8\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p><strong>这个 有一个正解代码</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e3</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dir[<span class=\"number\">4</span>][<span class=\"number\">2</span>]=&#123;<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[N][N];</span><br><span class=\"line\"><span class=\"keyword\">char</span> mmp[N][N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,flag;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"comment\">//check if sea;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fx=x+dir[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fy=y+dir[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fx&amp;&amp;fy&amp;&amp;fx&lt;=n&amp;&amp;fy&lt;=n&amp;&amp;mmp[fx][fy]==<span class=\"string\">'.'</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">//sea;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>; <span class=\"comment\">//no sea;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\tvis[x][y]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!check(x,y))flag=<span class=\"number\">1</span>; <span class=\"comment\">//remain lu di</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fx=x+dir[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fy=y+dir[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fx&amp;&amp;fy&amp;&amp;fx&lt;=n&amp;&amp;fy&lt;=n&amp;&amp;!vis[fx][fy]&amp;&amp;mmp[fx][fy]==<span class=\"string\">'#'</span>)</span><br><span class=\"line\">\t\t\tdfs(fx,fy);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,mmp[i]+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>,ludi=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!vis[i][j]&amp;&amp;mmp[i][j]==<span class=\"string\">'#'</span>)&#123;</span><br><span class=\"line\">            ludi++;</span><br><span class=\"line\">\t\t\t\tflag=<span class=\"number\">0</span>; <span class=\"comment\">//yan mo</span></span><br><span class=\"line\">\t\t\t\tdfs(i,j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(flag) ans++; <span class=\"comment\">//remained</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,ludi-ans);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第一题：-乘积最大-满分25分\"><a href=\"#第一题：-乘积最大-满分25分\" class=\"headerlink\" title=\"第一题： 乘积最大(满分25分)\"></a>第一题： 乘积最大(满分25分)</h2><h3 id=\"题目描述：-9\"><a href=\"#题目描述：-9\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>给定N个整数A1, A2, … AN。请你从中选出K个数，使其乘积最大。<br>请你求出最大的乘积，由于乘积可能超出整型范围，你只需输出乘积除以1000000009的余数。<br>注意，如果X&lt;0， 我们定义X除以1000000009的余数是负(-X)除以1000000009的余数。<br>即：0-((0-x) % 1000000009)</p>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>第一行包含两个整数N和K。<br>以下N行每行一个整数Ai。<br>对于40%的数据，1 &lt;= K &lt;= N &lt;= 100<br>对于60%的数据，1 &lt;= K &lt;= 1000<br>对于100%的数据，1 &lt;= K &lt;= N &lt;= 100000  -100000 &lt;= Ai &lt;= 100000  </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>一个整数，表示答案。</p>\n</blockquote>\n<blockquote>\n<p>【输入样例】<br>5 3<br>-100000<br>-10000<br>2<br>100000<br>10000  </p>\n</blockquote>\n<blockquote>\n<p>【输出样例】<br>999100009</p>\n</blockquote>\n<blockquote>\n<p>再例如：<br>【输入样例】<br>5 3<br>-100000<br>-100000<br>-2<br>-100000<br>-100000</p>\n</blockquote>\n<blockquote>\n<p>【输出样例】<br>-999999829</p>\n</blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n<p>个人感受：<br>    别说了。。我 也不知道为啥。。第二个案例一直是-1.。。。脑阔疼  还是交了，毕竟如果都跟第一个案例一样。。我还是能对的==<br>瑟瑟发抖的提交了。。<br>看了大佬的分析 我终于知道弱鸡的自己错哪了==</p>\n<h3 id=\"题目答案：-9\"><a href=\"#题目答案：-9\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>【分析】像贪模拟贪心。</p>\n<p>分了三种情况，1.不含负数，2.不含正数，3.正负都有。 0的情况可以同时放在这三种情况中。</p>\n<p>情况1：从最大数开始选即可<br>情况2：先考虑能否为0，再考虑选偶数个最小负数，若都做不到，就选奇数个最大负数<br>情况3：最难。先考虑用尽量少的负数，尽可能用正数，再从最小负数开始考虑，每次拿两个，乘积去和最小整数的进行比较，若大于，则可用这两个负数替换那两个正数</p>\n<p><strong>【代码】</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod=<span class=\"number\">1e9</span>+<span class=\"number\">9</span>;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e5</span>+<span class=\"number\">10</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> i&gt;j;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">ll a[N],b[N];  </span><br><span class=\"line\"><span class=\"keyword\">int</span> ta,tb,n,k;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;k);  </span><br><span class=\"line\">    ta=tb=<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> x;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> c0=<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;x);  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&gt;<span class=\"number\">0</span>)a[ta++]=x;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)b[tb++]=x;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> c0++;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    sort(a,a+ta,cmp);  </span><br><span class=\"line\">    sort(b,b+tb);  </span><br><span class=\"line\">    ll ans=<span class=\"number\">1</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(tb==<span class=\"number\">0</span>) <span class=\"comment\">//positive and 0  </span></span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ta&lt;k)ans=<span class=\"number\">0</span>; <span class=\"comment\">//0  </span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)  </span><br><span class=\"line\">                ans=ans*a[i]%mod;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ta==<span class=\"number\">0</span>) <span class=\"comment\">//negetive and 0  </span></span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(k%<span class=\"number\">2</span>&amp;&amp;c0 || tb&lt;k)ans=<span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(k%<span class=\"number\">2</span>) <span class=\"comment\">//k is odd, but no 0  </span></span><br><span class=\"line\">            &#123;  </span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=tb<span class=\"number\">-1</span>;i&lt;k;i++,j--)  </span><br><span class=\"line\">                    ans=ans*b[j]%mod;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)  </span><br><span class=\"line\">                    ans=ans*b[i]%mod;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">else</span>  <span class=\"comment\">//-,+, 0  </span></span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c0&amp;&amp;ta+tb&lt;k)&#123;  </span><br><span class=\"line\">            ans=<span class=\"number\">0</span>;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ta+tb==k&amp;&amp;c0==<span class=\"number\">0</span>)&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;tb;i++)ans=ans*b[i]%mod;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;ta;i++)ans=ans*a[i]%mod;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">int</span> fu;  </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(k&lt;=ta)fu=<span class=\"number\">0</span>;  </span><br><span class=\"line\">            <span class=\"keyword\">else</span> fu=(k-ta+<span class=\"number\">1</span>)&amp;(<span class=\"number\">-2</span>);  </span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"fu\"</span>&lt;&lt;fu&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">            <span class=\"keyword\">int</span> t=fu;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=fu;i&lt;=tb&amp;&amp;i&lt;=k;i+=<span class=\"number\">2</span>)  </span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i&gt;=<span class=\"number\">2</span>&amp;&amp;k-i&gt;=<span class=\"number\">0</span>)  </span><br><span class=\"line\">                &#123;  </span><br><span class=\"line\">                    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"i \"</span>&lt;&lt;i&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(b[i<span class=\"number\">-1</span>]*b[i<span class=\"number\">-2</span>]&gt;a[k-i]*a[k-i+<span class=\"number\">1</span>])  </span><br><span class=\"line\">                        t=i;  </span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">                &#125;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;t;i++)  ans=ans*b[i]%mod;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k-t;i++)ans=ans*a[i]%mod;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,ans);  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>个人总结：垃圾的我!<br>    一开始以为 对了8题(不难吧~)<br>    好的，发现两道题看错了<br>    对六道有省二嘛？<br>    等到答案出来。。填空再去两道== 傻逼答案<br>    所以 愚人节快乐<br>    其实真的不难。。看到答案心态易爆炸<br>笑死人的讨论区，值得一看。。。<br><a href=\"https://www.zhihu.com/question/270622751\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/270622751</a></p>\n<p>想想是真的菜<br>好好努力 尽力试试能不能进入ACM训练队吧！<br>PS:其实省赛的难度真的不大，好好准备一下明年再来！</p>\n<p>PS:居然水进了国赛。。。。美滋滋哈哈哈哈 开心了好久。。公费游北京  我来了！！！<br>最近多刷刷题 争取能有机会冲击国奖吧(虽然没啥可能)<br>2018/4/9</p>\n","site":{"data":{}},"excerpt":"","more":"<p>时间:2018年愚人节<br>地点：南京航空航天大学(江宁校区)<br>事件：第九届蓝桥杯省赛</p>\n<p>废话不多说，直接上题目：</p>\n<h2 id=\"第一题：-第几天-满分5分\"><a href=\"#第一题：-第几天-满分5分\" class=\"headerlink\" title=\"第一题： 第几天(满分5分)\"></a>第一题： 第几天(满分5分)</h2><h3 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>2000年的1月1日，是那一年的第1天。那么，2000年的5月4日，是那一年的第几天？<br>注意：需要提交的是一个整数，不要填写任何多余内容。</p>\n</blockquote>\n<p>个人感受：<br>    很简单的一道题，学习了各位大佬的比赛经验，这种题目也不去考虑编程了，不仅要判断几月是几天还要去思考是否闰年</p>\n<h3 id=\"题目答案：\"><a href=\"#题目答案：\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>答案：125<br>方法: 日历/excel<br>例如：用excel快速求解，第一个单元格输入2000/1/1，第二个单元格输入2000/5/4，然后在第三个单元格生成，第二个单元格减去第一个单元格的值<br>哦，对了 ，算完是124，还要加上1！5s出答案。</p>\n<h2 id=\"第二题：-明码-满分7分\"><a href=\"#第二题：-明码-满分7分\" class=\"headerlink\" title=\"第二题： 明码(满分7分)\"></a>第二题： 明码(满分7分)</h2><h3 id=\"题目描述：-1\"><a href=\"#题目描述：-1\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>汉字的字形存在于字库中，即便在今天，16点阵的字库也仍然使用广泛。<br>16点阵的字库把每个汉字看成是16x16个像素信息。并把这些信息记录在字节中。<br>一个字节可以存储8位信息，用32个字节就可以存一个汉字的字形了。<br>把每个字节转为2进制表示，1表示墨迹，0表示底色。每行2个字节，<br>一共16行，布局是：<br>    第1字节，第2字节<br>    第3字节，第4字节<br>    ….<br>    第31字节, 第32字节<br>这道题目是给你一段多个汉字组成的信息，每个汉字用32个字节表示，这里给出了字节作为有符号整数的值。<br>题目的要求隐藏在这些信息中。你的任务是复原这些汉字的字形，从中看出题目的要求，并根据要求填写答案。<br>这段信息是（一共10个汉字）：<br>4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0<br>16 64 16 64 34 68 127 126 66 -124 67 4 66 4 66 -124 126 100 66 36 66 4 66 4 66 4 126 4 66 40 0 16<br>4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0<br>0 -128 64 -128 48 -128 17 8 1 -4 2 8 8 80 16 64 32 64 -32 64 32 -96 32 -96 33 16 34 8 36 14 40 4<br>4 0 3 0 1 0 0 4 -1 -2 4 0 4 16 7 -8 4 16 4 16 4 16 8 16 8 16 16 16 32 -96 64 64<br>16 64 20 72 62 -4 73 32 5 16 1 0 63 -8 1 0 -1 -2 0 64 0 80 63 -8 8 64 4 64 1 64 0 -128<br>0 16 63 -8 1 0 1 0 1 0 1 4 -1 -2 1 0 1 0 1 0 1 0 1 0 1 0 1 0 5 0 2 0<br>2 0 2 0 7 -16 8 32 24 64 37 -128 2 -128 12 -128 113 -4 2 8 12 16 18 32 33 -64 1 0 14 0 112 0<br>1 0 1 0 1 0 9 32 9 16 17 12 17 4 33 16 65 16 1 32 1 64 0 -128 1 0 2 0 12 0 112 0<br>0 0 0 0 7 -16 24 24 48 12 56 12 0 56 0 -32 0 -64 0 -128 0 0 0 0 1 -128 3 -64 1 -128 0 0<br><strong>注意：需要提交的是一个整数，不要填写任何多余内容。</strong></p>\n</blockquote>\n<p>个人感受：<br>    很有趣的一道题目，一开始有点懵圈，这么多的数据，想到的就是转化为八位二进制，然后两个一组输出 然后换行，<br>最后从一堆二进制中看出 题目：九的九次方等于多少？(一开始我还以为时输入转化得到的话，结果看到了最后一个翻译出来是问号==emmm，又看了下题目最后一行，整数！emmmm)<br>PS:负数直接用128相加一下就差不多能看了.</p>\n<h3 id=\"题目答案：-1\"><a href=\"#题目答案：-1\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>387420489<br><strong>代码一</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">8</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\tx+=<span class=\"number\">128</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">7</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">\t\ta[i]=x%<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\tx/=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i]) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"*\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">16</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//由题目很容易可以看出 两个八位二进制一行 </span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;x,&amp;y);</span><br><span class=\"line\">\t\t\tprint(x);</span><br><span class=\"line\">\t\t\tprint(y);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>代码二</strong><br>有大佬用位运算写:<br>位运算不不用考虑负数的问题..直接按位进行运算<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">7</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// x=4    100 &amp;  10000000  = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  1000000   = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  100000    = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  10000     = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  1000      = 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  100       = 100</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  10        = 0\t</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//        100 &amp;  1         = 0</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x&amp;(<span class=\"number\">1</span>&lt;&lt;i))</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;(x&amp;(<span class=\"number\">1</span>&lt;&lt;i))&lt;&lt;<span class=\"string\">'*'</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">16</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//由题目很容易可以看出 两个八位二进制一行 </span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;x,&amp;y);</span><br><span class=\"line\">\t\t\tprint(x);</span><br><span class=\"line\">\t\t\tprint(y);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第三题：-乘积尾零-满分13分\"><a href=\"#第三题：-乘积尾零-满分13分\" class=\"headerlink\" title=\"第三题： 乘积尾零(满分13分)\"></a>第三题： 乘积尾零(满分13分)</h2><h3 id=\"题目描述：-2\"><a href=\"#题目描述：-2\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>如下的10行数据，每行有10个整数，请你求出它们的乘积的末尾有多少个零？<br>5650 4542 3554 473 946 4114 3871 9073 90 4329<br>2758 7949 6113 5659 5245 7432 3051 4434 6704 3594<br>9937 1173 6866 3397 4759 7557 3070 2287 1453 9899<br>1486 5722 3135 1170 4014 5510 5120 729 2880 9019<br>2049 698 4582 4346 4427 646 9742 7340 1230 7683<br>5693 7015 6887 7381 4172 4341 2909 2027 7355 5649<br>6701 6645 1671 5978 2704 9926 295 3125 3878 6785<br>2066 4247 4800 1578 6652 4616 1113 6205 3264 2915<br>3966 5291 2904 1285 2193 1428 2265 8730 9436 7074<br>689 5510 8243 6114 337 4096 8199 7313 3685 211<br>注意：需要提交的是一个整数，表示末尾零的个数。不要填写任何多余内容。</p>\n</blockquote>\n<p>个人感受：<br>    大数这道题。。写的时候还是贼开心的==  因为。。我以为写出来了==<br>对于这种数学弱鸡，简直不懂分解为2和5。。只会一行一行的去十个十个相乘再去模一亿取余<br>然而==死在了 我只保留了最后两位 非零数。。。。导致杀千刀的少了三个0(大佬说要保留四位（后我实测为3位）)<br>这道题 错的 特别 不该  代码也就三分钟的事==<br></p>\n<p>思路：两种方法<br>①直接将所有数相乘，然后每乘一个数就把后面0全部去掉记一下，不过中间会爆long long，这个好办，每次乘完只保留后4位非0数字，例如216037就只保留6037<br><strong>②正解：所有的0都一定是2*5产生的，所以将每个数拆成一堆2乘上一堆5再乘上一个数，之后统计下有多少个2和多少个5取少的那个就是答案</strong></p>\n<h3 id=\"题目答案：-2\"><a href=\"#题目答案：-2\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>答案：31<br><strong>思路一的代码</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">101</span>],cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,a+i);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">99</span>;i++)&#123;</span><br><span class=\"line\">\t\ta[i+<span class=\"number\">1</span>]*=a[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(a[i+<span class=\"number\">1</span>]%<span class=\"number\">10</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\ta[i+<span class=\"number\">1</span>]/=<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ta[i+<span class=\"number\">1</span>]%=<span class=\"number\">1000</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;cnt; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>思路二的代码</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> res2=<span class=\"number\">0</span>,res5=<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;x);  </span><br><span class=\"line\">        <span class=\"keyword\">int</span> y=x;  </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(x%<span class=\"number\">2</span>==<span class=\"number\">0</span>)res2++,x/=<span class=\"number\">2</span>; </span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x%<span class=\"number\">5</span>==<span class=\"number\">0</span>)res5++,x/=<span class=\"number\">5</span>;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;min(res2,res5)&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第四题：-测试次数-满分17分\"><a href=\"#第四题：-测试次数-满分17分\" class=\"headerlink\" title=\"第四题： 测试次数(满分17分)\"></a>第四题： 测试次数(满分17分)</h2><h3 id=\"题目描述：-3\"><a href=\"#题目描述：-3\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>x星球的居民脾气不太好，但好在他们生气的时候唯一的异常举动是：摔手机。<br>各大厂商也就纷纷推出各种耐摔型手机。x星球的质监局规定了手机必须经过耐摔测试，并且评定出一个耐摔指数来，之后才允许上市流通。<br>x星球有很多高耸入云的高塔，刚好可以用来做耐摔测试。塔的每一层高度都是一样的，与地球上稍有不同的是，他们的第一层不是地面，而是相当于我们的2楼。<br>如果手机从第7层扔下去没摔坏，但第8层摔坏了，则手机耐摔指数=7。<br>特别地，如果手机从第1层扔下去就坏了，则耐摔指数=0。<br>如果到了塔的最高层第n层扔没摔坏，则耐摔指数=n<br>为了减少测试次数，从每个厂家抽样3部手机参加测试。<br>某次测试的塔高为1000层，如果我们总是采用最佳策略，在最坏的运气下最多需要测试多少次才能确定手机的耐摔指数呢？<br>请填写这个最多测试次数。<br>注意：需要填写的是一个整数，不要填写任何多余内容。</p>\n</blockquote>\n<p>个人感受：<br>    这道题凉凉，很凉，透心凉<br>教训，下次一定要先看分值==<br>看到题目，最优策略？OK二分！然后就算出了  九次吧==然后自信直接过<br>回来车上在复盘，忽然想到，等下。。那个。。摔手机？手机。。手机。。会摔坏了吧。。<br>mm了个大p，一问舍友(zl) ，他不是还给了三个手机吗？<br>我…..好的。。。题目都没看清。。都不知道我在干嘛。。</p>\n<p>不过就算知道了，我也没算对。。。心理平衡了一点</p>\n<p>后来我只能算出28。。。emmmm<br>大佬: 直接三维 dp dp[0][1000][3] 第一个0一定不爆，第二个1000一定爆，第三个 3个手机。。<br>emmmmm……还是不会</p>\n<h3 id=\"题目答案：-3\"><a href=\"#题目答案：-3\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>答案：19</p>\n<h2 id=\"第五题：-快速排序-满分9分\"><a href=\"#第五题：-快速排序-满分9分\" class=\"headerlink\" title=\"第五题： 快速排序(满分9分)\"></a>第五题： 快速排序(满分9分)</h2><h3 id=\"题目描述：-4\"><a href=\"#题目描述：-4\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>以下代码可以从数组a[]中找出第k小的元素。<br>它使用了类似快速排序中的分治算法，期望时间复杂度是O(N)的。<br>请仔细阅读分析源码，填写划线部分缺失的内容。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">quick_select</span><span class=\"params\">(<span class=\"keyword\">int</span> a[], <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> p = rand() % (r - l + <span class=\"number\">1</span>) + l;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x = a[p];</span><br><span class=\"line\">\t&#123;<span class=\"keyword\">int</span> t = a[p]; a[p] = a[r]; a[r] = t;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i = l, j = r;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i &lt; j) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(i &lt; j &amp;&amp; a[i] &lt; x) i++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i &lt; j) &#123;</span><br><span class=\"line\">\t\t\ta[j] = a[i];</span><br><span class=\"line\">\t\t\tj--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(i &lt; j &amp;&amp; a[j] &gt; x) j--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i &lt; j) &#123;</span><br><span class=\"line\">\t\t\ta[i] = a[j];</span><br><span class=\"line\">\t\t\ti++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ta[i] = x;</span><br><span class=\"line\">\tp = i;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i - l + <span class=\"number\">1</span> == k) <span class=\"keyword\">return</span> a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i - l + <span class=\"number\">1</span> &lt; k) <span class=\"keyword\">return</span> quick_select( _____________________________ ); <span class=\"comment\">//填空</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> quick_select(a, l, i - <span class=\"number\">1</span>, k);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a[] = &#123;<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">23</span>, <span class=\"number\">58</span>, <span class=\"number\">16</span>, <span class=\"number\">27</span>, <span class=\"number\">55</span>, <span class=\"number\">13</span>, <span class=\"number\">26</span>, <span class=\"number\">24</span>, <span class=\"number\">12</span>&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, quick_select(a, <span class=\"number\">0</span>, <span class=\"number\">14</span>, <span class=\"number\">5</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">注意：只填写划线部分缺少的代码，不要抄写已经存在的代码或符号。</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>个人感受：<br>    这道题。。算了。。填空这种题目每次我都是瞎jb猜，然后看答案对不对。。<br>我写了个(a,l,r,k)大概对了，就交了。。宛如智障<br>以为。。对了的<br>好的</p>\n<h3 id=\"题目答案：-4\"><a href=\"#题目答案：-4\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>答案：a,i+1,r,k-(i-l+1)</p>\n<h2 id=\"第六题：-递增三元组-满分11分\"><a href=\"#第六题：-递增三元组-满分11分\" class=\"headerlink\" title=\"第六题： 递增三元组(满分11分)\"></a>第六题： 递增三元组(满分11分)</h2><h3 id=\"题目描述：-5\"><a href=\"#题目描述：-5\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>给定三个整数数组<br>A = [A1, A2, … AN],<br>B = [B1, B2, … BN],<br>C = [C1, C2, … CN]，<br>请你统计有多少个三元组(i, j, k) 满足：</p>\n<ol>\n<li>1 &lt;= i, j, k &lt;= N  </li>\n<li>Ai &lt; Bj &lt; Ck  </li>\n</ol>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>第一行包含一个整数N。<br>第二行包含N个整数A1, A2, … AN。<br>第三行包含N个整数B1, B2, … BN。<br>第四行包含N个整数C1, C2, … CN。<br>对于30%的数据，1 &lt;= N &lt;= 100<br>对于60%的数据，1 &lt;= N &lt;= 1000<br>对于100%的数据，1 &lt;= N &lt;= 100000 0 &lt;= Ai, Bi, Ci &lt;= 100000 </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>一个整数表示答案</p>\n</blockquote>\n<blockquote>\n<p>【样例输入】<br>3<br>1 1 1<br>2 2 2<br>3 3 3</p>\n</blockquote>\n<blockquote>\n<p>【样例输出】<br>27 </p>\n</blockquote>\n<blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n</blockquote>\n<p>个人感受：<br>    最简单的一道题了== 暴力for。。虽然不知道最后会不会爆。。但至少有60吧<br>一开始看到..emmm 不就深搜嘛，最近写了不少，好的。。三分钟码完。。挖草 怎么样例输入答案一直是3<br>心态崩了，换了三个for….老子就不信了。。咦。。怎么还是3<br>我特么。。dev坏了吧？？？偷偷换个VC还是3  VS2010  还是3<br>心态崩了。。  输出中间值明明有27次啊。。<br>忽然。。发现。。 调用函数没return最后的cnt  。。好小子，你过来，不打死你<br>以至最后也懒得换回dfs了。。最后，如果有人看了我的代码，可能会觉得被欺骗了。。函数名=dfs，一看。。里面只有三个for。。。<br>哈哈哈哈哈哈</p>\n<h3 id=\"题目答案：-5\"><a href=\"#题目答案：-5\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p><strong>dfs</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>,n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">100001</span>],b[<span class=\"number\">100001</span>],c[<span class=\"number\">100001</span>]; </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j,<span class=\"keyword\">int</span> k)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a[i]&lt;b[j]&amp;&amp;b[j]&lt;c[k])</span><br><span class=\"line\">\t\tcnt++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i==n<span class=\"number\">-1</span>&amp;&amp;j==n<span class=\"number\">-1</span>&amp;&amp;k==n<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> cnt;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(k&lt;n) dfs(i,j,k+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j&lt;n) dfs(i,j+<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i&lt;n) dfs(i+<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;b[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;c[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,dfs(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>三个for 暴力求解</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[i]&lt;b[j]&amp;&amp;b[j]&lt;c[k])</span><br><span class=\"line\">\t\t\t\t\tcnt++;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cnt;</span><br></pre></td></tr></table></figure></p>\n<p><strong>最优解</strong><br>思路：分别排序<br>先看b和c两个数组，设两个下标i，j分别指向bc数组，对于每一个b[i],可以找到对应的c[j]恰好大于b[i]，那么对于b[i]有n-j个c[j]满足b[i]&lt;c[j]。令sumb[i]=n-j，表示每个b[i]对应的c[j]个数。将sumb处理成后缀和。<br>然后再看a和b数组，用同样的方法打出数组suma，不过suma[i]=sumb[j]；<br>然后将suma处理成后缀和，suma[0]即为答案。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e6</span>+<span class=\"number\">10</span>;  </span><br><span class=\"line\">ll suma[N],sumb[N];  </span><br><span class=\"line\"><span class=\"keyword\">int</span> a[N],b[N],c[N];  </span><br><span class=\"line\"><span class=\"keyword\">int</span> n;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)  </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i]);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)  </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;b[i]);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)  </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;c[i]);  </span><br><span class=\"line\">    sort(a,a+n);  </span><br><span class=\"line\">    sort(b,b+n);  </span><br><span class=\"line\">    sort(c,c+n);  </span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(sumb,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(sumb));  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j&lt;n&amp;&amp;b[i]&gt;=c[j])j++;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j&gt;=n)<span class=\"keyword\">break</span>;  </span><br><span class=\"line\">        sumb[i]=n-j;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n<span class=\"number\">-2</span>;i&gt;=<span class=\"number\">0</span>;i--) <span class=\"comment\">//b hou zhui he  </span></span><br><span class=\"line\">        sumb[i]+=sumb[i+<span class=\"number\">1</span>];  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j&lt;n&amp;&amp;a[i]&gt;=b[j])j++;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j&gt;=n)<span class=\"keyword\">break</span>;  </span><br><span class=\"line\">        suma[i]=sumb[j];  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n<span class=\"number\">-2</span>;i&gt;=<span class=\"number\">0</span>;i--) <span class=\"comment\">//a hou zhui he  </span></span><br><span class=\"line\">        suma[i]+=suma[i+<span class=\"number\">1</span>];  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,suma[<span class=\"number\">0</span>]);  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第七题：-螺旋折线-满分19分\"><a href=\"#第七题：-螺旋折线-满分19分\" class=\"headerlink\" title=\"第七题： 螺旋折线(满分19分)\"></a>第七题： 螺旋折线(满分19分)</h2><h3 id=\"题目描述：-6\"><a href=\"#题目描述：-6\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>如图p1.png所示的螺旋折线经过平面上所有整点恰好一次。<br>对于整点(X, Y)，我们定义它到原点的距离dis(X, Y)是从原点到(X, Y)的螺旋折线段的长度。<br>例如dis(0, 1)=3, dis(-2, -1)=9<br>给出整点坐标(X, Y)，你能计算出dis(X, Y)吗？</p>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>X和Y<br>对于40%的数据，-1000 &lt;= X, Y &lt;= 1000<br>对于70%的数据，-100000 &lt;= X， Y &lt;= 100000<br>对于100%的数据, -1000000000 &lt;= X, Y &lt;= 1000000000  </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>输出dis(X, Y)  </p>\n</blockquote>\n<blockquote>\n<p>【样例输入】<br>0 1</p>\n</blockquote>\n<blockquote>\n<p>【样例输出】<br>3</p>\n</blockquote>\n<blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n</blockquote>\n\n<p>个人感受：<br>    并列最简单的一题，emmmm  没啥操作。。就是循环到那个点<br>应该时间上会爆了，反正至少50吧。。</p>\n<h3 id=\"题目答案：-6\"><a href=\"#题目答案：-6\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p><strong>代码：</strong></p>\n<p>#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br>int ex,ey,nx=0,ny=0;<br>int check(){<br>    if(nx==ex&amp;&amp;ny==ey)<br>        return 1;<br>    else return 0;<br>}<br>int main(){<br>    scanf(“%d%d”,&amp;ex,&amp;ey);<br>    int h=0,cnt=0;<br>    while(1){<br>        for(int i=0;i&lt;4;i++){<br>            h++;<br>            if(i==0)<br>                for(int j=0;j&lt;(h+1)/2;j++){<br>                    nx–;<br>                    cnt++;<br>                    if(check()){<br>                        printf(“%d”,cnt);<br>                        return 0;<br>                    }<br>                }<br>            else if(i==1)<br>                for(int j=0;j&lt;h/2;j++){<br>                    ny++;<br>                    cnt++;<br>                    if(check()){<br>                        printf(“%d”,cnt);<br>                        return 0;<br>                    }<br>                }<br>            else if(i==2)<br>                for(int j=0;j&lt;(h+1)/2;j++){<br>                    nx++;<br>                    cnt++;<br>                    if(check()){<br>                        printf(“%d”,cnt);<br>                        return 0;<br>                    }<br>                }<br>            else<br>                for(int j=0;j&lt;h/2;j++){<br>                    ny–;<br>                    cnt++;<br>                    if(check()){<br>                        printf(“%d”,cnt);<br>                        return 0;<br>                    }<br>                }<br>        }<br>    }<br>    return 0;<br>}</p>\n<h2 id=\"第八题：-日志统计-满分21分\"><a href=\"#第八题：-日志统计-满分21分\" class=\"headerlink\" title=\"第八题： 日志统计(满分21分)\"></a>第八题： 日志统计(满分21分)</h2><h3 id=\"题目描述：-7\"><a href=\"#题目描述：-7\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>小明维护着一个程序员论坛。现在他收集了一份”点赞”日志，日志共有N行。其中每一行的格式是：<br>ts id<br>表示在ts时刻编号id的帖子收到一个”赞”。<br>现在小明想统计有哪些帖子曾经是”热帖”。如果一个帖子曾在任意一个长度为D的时间段内收到不少于K个赞，小明就认为这个帖子曾是”热帖”。<br>具体来说，如果存在某个时刻T满足该帖在[T, T+D)这段时间内(注意是左闭右开区间)收到不少于K个赞，该帖就曾是”热帖”。<br>给定日志，请你帮助小明统计出所有曾是”热帖”的帖子编号。  </p>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>第一行包含三个整数N、D和K。<br>以下N行每行一条日志，包含两个整数ts和id。<br>对于50%的数据，1 &lt;= K &lt;= N &lt;= 1000<br>对于100%的数据，1 &lt;= K &lt;= N &lt;= 100000 0 &lt;= ts &lt;= 100000 0 &lt;= id &lt;= 100000  </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>按从小到大的顺序输出热帖id。每个id一行。  </p>\n</blockquote>\n<blockquote>\n<p>【输入样例】<br>7 10 2<br>0 1<br>0 10<br>10 10<br>10 1<br>9 1<br>100 3<br>100 3  </p>\n</blockquote>\n<blockquote>\n<p>【输出样例】<br>1<br>3  </p>\n</blockquote>\n<blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n</blockquote>\n<p>个人感受：<br>    很烦的一道题。。 思路就是先筛选 ts大于k的   然后再按照 ts在 某段时间内多少排序。。<br>道理都懂。。就是弱鸡。。。。没写完就交了==  没写完的我  输入正常，输出 print(“1\\n3”);<br>哈哈哈哈 看看能不能 骗上10分</p>\n<h3 id=\"题目答案：-7\"><a href=\"#题目答案：-7\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e6</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> t,id;</span><br><span class=\"line\">&#125;e[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(node a,node b)</span></span>&#123;\t<span class=\"comment\">// 对结构体按某个条件排序 </span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a.t&lt;b.t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> sta[N],top;</span><br><span class=\"line\"><span class=\"keyword\">int</span> c[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,d,k;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> insta[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>,&amp;n,&amp;d,&amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;e[i].t,&amp;e[i].id);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(e+<span class=\"number\">1</span>,e+<span class=\"number\">1</span>+n,cmp);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(c,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(c));</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(insta,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(insta));</span><br><span class=\"line\">\ttop=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(j&lt;=n&amp;&amp;e[i].t-e[j].t&gt;=d)</span><br><span class=\"line\">\t\tc[e[j++].id]--;</span><br><span class=\"line\">\t\tc[e[i].id]++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c[e[i].id]&gt;=k&amp;&amp;!insta[e[i].id])&#123;</span><br><span class=\"line\">\t\t\tsta[top++]=e[i].id;</span><br><span class=\"line\">\t\t\tinsta[e[i].id]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(sta,sta+top);</span><br><span class=\"line\">\ttop=unique(sta,sta+top)-sta;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;top;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,sta[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第九题：全球变暖-满分23分\"><a href=\"#第九题：全球变暖-满分23分\" class=\"headerlink\" title=\"第九题：全球变暖(满分23分)\"></a>第九题：全球变暖(满分23分)</h2><h3 id=\"题目描述：-8\"><a href=\"#题目描述：-8\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>你有一张某海域NxN像素的照片，”.”表示海洋、”#”表示陆地，如下所示：<br>.......<br>.##....<br>.##....<br>....##.<br>..####.<br>...###.<br>.......<br>其中”上下左右”四个方向上连在一起的一片陆地组成一座岛屿。例如上图就有2座岛屿。<br>由于全球变暖导致了海面上升，科学家预测未来几十年，岛屿边缘一个像素的范围会被海水淹没。具体来说如果一块陆地像素与海洋相邻(上下左右四个相邻像素中有海洋)，它就会被淹没。<br>例如上图中的海域未来会变成如下样子：<br>.......<br>.......<br>.......<br>.......<br>....#..<br>.......<br>.......<br>请你计算：依照科学家的预测，照片中有多少岛屿会被完全淹没。  </p>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>第一行包含一个整数N。  (1 &lt;= N &lt;= 1000)<br>以下N行N列代表一张海域照片。<br>照片保证第1行、第1列、第N行、第N列的像素都是海洋。  </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>一个整数表示答案。</p>\n</blockquote>\n<blockquote>\n<p>【输入样例】<br>7<br>.......<br>.##....<br>.##....<br>....##.<br>..####.<br>…###.<br>.......  </p>\n</blockquote>\n<blockquote>\n<p>【输出样例】<br>1  </p>\n</blockquote>\n<blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n</blockquote>\n<p>个人感受：<br>    为啥样例 淹没是1.。没被淹没是1<br>我傻傻的看错了==  输出了相反的。。 阿西吧 心痛<br>反正我的就是两个bfs<br>还有一个很有趣的<br>有人给了一组这样的数据：<br>### ###<br>#######<br>### ###<br>只有一个岛屿但是淹没后你会发现“岛屿”还会多出来一个！如下</p>\n<p># # </p>\n<p>这个。。输出0还是-1.。我也不知道。。等答案了。。。</p>\n<h3 id=\"题目答案：-8\"><a href=\"#题目答案：-8\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p><strong>这个 有一个正解代码</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e3</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dir[<span class=\"number\">4</span>][<span class=\"number\">2</span>]=&#123;<span class=\"number\">-1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[N][N];</span><br><span class=\"line\"><span class=\"keyword\">char</span> mmp[N][N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,flag;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"comment\">//check if sea;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fx=x+dir[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fy=y+dir[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fx&amp;&amp;fy&amp;&amp;fx&lt;=n&amp;&amp;fy&lt;=n&amp;&amp;mmp[fx][fy]==<span class=\"string\">'.'</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>; <span class=\"comment\">//sea;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>; <span class=\"comment\">//no sea;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\tvis[x][y]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!check(x,y))flag=<span class=\"number\">1</span>; <span class=\"comment\">//remain lu di</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fx=x+dir[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fy=y+dir[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fx&amp;&amp;fy&amp;&amp;fx&lt;=n&amp;&amp;fy&lt;=n&amp;&amp;!vis[fx][fy]&amp;&amp;mmp[fx][fy]==<span class=\"string\">'#'</span>)</span><br><span class=\"line\">\t\t\tdfs(fx,fy);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,mmp[i]+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>,ludi=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!vis[i][j]&amp;&amp;mmp[i][j]==<span class=\"string\">'#'</span>)&#123;</span><br><span class=\"line\">            ludi++;</span><br><span class=\"line\">\t\t\t\tflag=<span class=\"number\">0</span>; <span class=\"comment\">//yan mo</span></span><br><span class=\"line\">\t\t\t\tdfs(i,j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(flag) ans++; <span class=\"comment\">//remained</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,ludi-ans);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"第一题：-乘积最大-满分25分\"><a href=\"#第一题：-乘积最大-满分25分\" class=\"headerlink\" title=\"第一题： 乘积最大(满分25分)\"></a>第一题： 乘积最大(满分25分)</h2><h3 id=\"题目描述：-9\"><a href=\"#题目描述：-9\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><blockquote>\n<p>给定N个整数A1, A2, … AN。请你从中选出K个数，使其乘积最大。<br>请你求出最大的乘积，由于乘积可能超出整型范围，你只需输出乘积除以1000000009的余数。<br>注意，如果X&lt;0， 我们定义X除以1000000009的余数是负(-X)除以1000000009的余数。<br>即：0-((0-x) % 1000000009)</p>\n</blockquote>\n<blockquote>\n<p>【输入格式】<br>第一行包含两个整数N和K。<br>以下N行每行一个整数Ai。<br>对于40%的数据，1 &lt;= K &lt;= N &lt;= 100<br>对于60%的数据，1 &lt;= K &lt;= 1000<br>对于100%的数据，1 &lt;= K &lt;= N &lt;= 100000  -100000 &lt;= Ai &lt;= 100000  </p>\n</blockquote>\n<blockquote>\n<p>【输出格式】<br>一个整数，表示答案。</p>\n</blockquote>\n<blockquote>\n<p>【输入样例】<br>5 3<br>-100000<br>-10000<br>2<br>100000<br>10000  </p>\n</blockquote>\n<blockquote>\n<p>【输出样例】<br>999100009</p>\n</blockquote>\n<blockquote>\n<p>再例如：<br>【输入样例】<br>5 3<br>-100000<br>-100000<br>-2<br>-100000<br>-100000</p>\n</blockquote>\n<blockquote>\n<p>【输出样例】<br>-999999829</p>\n</blockquote>\n<p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p>\n<p>个人感受：<br>    别说了。。我 也不知道为啥。。第二个案例一直是-1.。。。脑阔疼  还是交了，毕竟如果都跟第一个案例一样。。我还是能对的==<br>瑟瑟发抖的提交了。。<br>看了大佬的分析 我终于知道弱鸡的自己错哪了==</p>\n<h3 id=\"题目答案：-9\"><a href=\"#题目答案：-9\" class=\"headerlink\" title=\"题目答案：\"></a>题目答案：</h3><p>【分析】像贪模拟贪心。</p>\n<p>分了三种情况，1.不含负数，2.不含正数，3.正负都有。 0的情况可以同时放在这三种情况中。</p>\n<p>情况1：从最大数开始选即可<br>情况2：先考虑能否为0，再考虑选偶数个最小负数，若都做不到，就选奇数个最大负数<br>情况3：最难。先考虑用尽量少的负数，尽可能用正数，再从最小负数开始考虑，每次拿两个，乘积去和最小整数的进行比较，若大于，则可用这两个负数替换那两个正数</p>\n<p><strong>【代码】</strong><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> mod=<span class=\"number\">1e9</span>+<span class=\"number\">9</span>;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1e5</span>+<span class=\"number\">10</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> i&gt;j;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">ll a[N],b[N];  </span><br><span class=\"line\"><span class=\"keyword\">int</span> ta,tb,n,k;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;k);  </span><br><span class=\"line\">    ta=tb=<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> x;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> c0=<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;x);  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&gt;<span class=\"number\">0</span>)a[ta++]=x;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)b[tb++]=x;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> c0++;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    sort(a,a+ta,cmp);  </span><br><span class=\"line\">    sort(b,b+tb);  </span><br><span class=\"line\">    ll ans=<span class=\"number\">1</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(tb==<span class=\"number\">0</span>) <span class=\"comment\">//positive and 0  </span></span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ta&lt;k)ans=<span class=\"number\">0</span>; <span class=\"comment\">//0  </span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)  </span><br><span class=\"line\">                ans=ans*a[i]%mod;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ta==<span class=\"number\">0</span>) <span class=\"comment\">//negetive and 0  </span></span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(k%<span class=\"number\">2</span>&amp;&amp;c0 || tb&lt;k)ans=<span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(k%<span class=\"number\">2</span>) <span class=\"comment\">//k is odd, but no 0  </span></span><br><span class=\"line\">            &#123;  </span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=tb<span class=\"number\">-1</span>;i&lt;k;i++,j--)  </span><br><span class=\"line\">                    ans=ans*b[j]%mod;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k;i++)  </span><br><span class=\"line\">                    ans=ans*b[i]%mod;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">else</span>  <span class=\"comment\">//-,+, 0  </span></span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c0&amp;&amp;ta+tb&lt;k)&#123;  </span><br><span class=\"line\">            ans=<span class=\"number\">0</span>;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ta+tb==k&amp;&amp;c0==<span class=\"number\">0</span>)&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;tb;i++)ans=ans*b[i]%mod;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;ta;i++)ans=ans*a[i]%mod;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">int</span> fu;  </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(k&lt;=ta)fu=<span class=\"number\">0</span>;  </span><br><span class=\"line\">            <span class=\"keyword\">else</span> fu=(k-ta+<span class=\"number\">1</span>)&amp;(<span class=\"number\">-2</span>);  </span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"fu\"</span>&lt;&lt;fu&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">            <span class=\"keyword\">int</span> t=fu;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=fu;i&lt;=tb&amp;&amp;i&lt;=k;i+=<span class=\"number\">2</span>)  </span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i&gt;=<span class=\"number\">2</span>&amp;&amp;k-i&gt;=<span class=\"number\">0</span>)  </span><br><span class=\"line\">                &#123;  </span><br><span class=\"line\">                    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"i \"</span>&lt;&lt;i&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(b[i<span class=\"number\">-1</span>]*b[i<span class=\"number\">-2</span>]&gt;a[k-i]*a[k-i+<span class=\"number\">1</span>])  </span><br><span class=\"line\">                        t=i;  </span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">                &#125;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;t;i++)  ans=ans*b[i]%mod;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;k-t;i++)ans=ans*a[i]%mod;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,ans);  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>个人总结：垃圾的我!<br>    一开始以为 对了8题(不难吧~)<br>    好的，发现两道题看错了<br>    对六道有省二嘛？<br>    等到答案出来。。填空再去两道== 傻逼答案<br>    所以 愚人节快乐<br>    其实真的不难。。看到答案心态易爆炸<br>笑死人的讨论区，值得一看。。。<br><a href=\"https://www.zhihu.com/question/270622751\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/270622751</a></p>\n<p>想想是真的菜<br>好好努力 尽力试试能不能进入ACM训练队吧！<br>PS:其实省赛的难度真的不大，好好准备一下明年再来！</p>\n<p>PS:居然水进了国赛。。。。美滋滋哈哈哈哈 开心了好久。。公费游北京  我来了！！！<br>最近多刷刷题 争取能有机会冲击国奖吧(虽然没啥可能)<br>2018/4/9</p>\n"},{"title":"Linux_Communication","date":"2018-03-31T12:17:43.000Z","description":"linux 通信，操作系统的一些学习记录。","_content":"\n\n## 使用信号\n\n信号在头文件signal.h中定义，信号都以SIG开头\n常用信号有\n\n- SIGALRM (由alarm函数设置的定时器产生)\n- SIGHUP由一个处于非连接状态的终端发送给控制进程，或者由控制进程在自身结束时发送给每个前台进程\n- SIGINT一般由Ctrl+C或者预先设置好的终端字符产生\n- SIGPIPE如果向管道写数据时没有与之对应的读进程产生的信号\n- SIGTERM作为一个请求被发送，要求进程结束运行。(是KILL命令默认发送的信号)\n- SIGUSR1,SIGUSR2进程之间可以用这个信号进行通信，例如让进程报告状态信息\n\n### 信号处理--signal函数\n\n```C++\n# include <bits/stdc++.h>\n# include <unistd.h>\n\n// 原型\n// void (*signal(int sig, void (*func)(int)))(int);\nvoid handle(int sign){\n    //sign 是信号类型\n    signal(SIGINT, SIG_DFL); // 恢复终端中断信号的默认行为\n}\n\nint main(){\n    //改变终端中断信号SIGINT的默认行为，使之执行handle函数\n\tsignal(SIGINT, handle);\n    while (true){\n        printf(\"i'm running\\n\");\n        sleep(1);\n    }\n    return 0;\n}\n```\n\n### 信号处理--sigaction函数\n\n```C++\n# include <bits/stdc++.h>\n# include <unistd.h>\n\n// 原型\n// int sigaction(int sig, const struct sigaction *act, struct sigaction *oact);\n\n# include <bits/stdc++.h>\n#include <unistd.h>\n\nvoid handle(int sign){\n}\n\nint main(){\n    struct sigaction act;\n    act.sa_handler = handle;\n    // 创建空的信号屏蔽集，即不屏蔽任何信息\n    sigemptyset(&act.sa_mask);\n    // 使sigaction函数重置为默认行为\n    act.sa_flags = SA_RESETHAND;\n    sigaction(SIGINT, &act, 0);\n    while (true){\n        printf(\"i'm running\\n\");\n        sleep(1);\n    }\n    return 0;\n}\n```\n\n### 发送信号--kill & alarm\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\n// int kill (pid_t pid, int sig);\n// unsigned int alarm(unsigned int seconds);\n```\n\n> kill调用失败返回-1，调用失败通常有三大原因：\n> 给定的信号无效（errno = EINVAL)\n> 发送权限不够( errno = EPERM ）\n> 目标进程不存在( errno = ESRCH )\n\n## 使用信号量\n\n### semget函数\n\n```C++\n// 原型\n// int semget(key_t key, int num_sems, int sem_flags);\n// int semop(int sem_id, struct sembuf *sem_opa, size_t num_sem_ops);\n// semctl\n\n```\n","source":"_posts/Linux_Communication.md","raw":"---\ntitle: Linux_Communication \ndate: 2018-03-31 20:17:43\ntags: \n    - Linux\ncategories: 系统\ndescription: linux 通信，操作系统的一些学习记录。\n---\n\n\n## 使用信号\n\n信号在头文件signal.h中定义，信号都以SIG开头\n常用信号有\n\n- SIGALRM (由alarm函数设置的定时器产生)\n- SIGHUP由一个处于非连接状态的终端发送给控制进程，或者由控制进程在自身结束时发送给每个前台进程\n- SIGINT一般由Ctrl+C或者预先设置好的终端字符产生\n- SIGPIPE如果向管道写数据时没有与之对应的读进程产生的信号\n- SIGTERM作为一个请求被发送，要求进程结束运行。(是KILL命令默认发送的信号)\n- SIGUSR1,SIGUSR2进程之间可以用这个信号进行通信，例如让进程报告状态信息\n\n### 信号处理--signal函数\n\n```C++\n# include <bits/stdc++.h>\n# include <unistd.h>\n\n// 原型\n// void (*signal(int sig, void (*func)(int)))(int);\nvoid handle(int sign){\n    //sign 是信号类型\n    signal(SIGINT, SIG_DFL); // 恢复终端中断信号的默认行为\n}\n\nint main(){\n    //改变终端中断信号SIGINT的默认行为，使之执行handle函数\n\tsignal(SIGINT, handle);\n    while (true){\n        printf(\"i'm running\\n\");\n        sleep(1);\n    }\n    return 0;\n}\n```\n\n### 信号处理--sigaction函数\n\n```C++\n# include <bits/stdc++.h>\n# include <unistd.h>\n\n// 原型\n// int sigaction(int sig, const struct sigaction *act, struct sigaction *oact);\n\n# include <bits/stdc++.h>\n#include <unistd.h>\n\nvoid handle(int sign){\n}\n\nint main(){\n    struct sigaction act;\n    act.sa_handler = handle;\n    // 创建空的信号屏蔽集，即不屏蔽任何信息\n    sigemptyset(&act.sa_mask);\n    // 使sigaction函数重置为默认行为\n    act.sa_flags = SA_RESETHAND;\n    sigaction(SIGINT, &act, 0);\n    while (true){\n        printf(\"i'm running\\n\");\n        sleep(1);\n    }\n    return 0;\n}\n```\n\n### 发送信号--kill & alarm\n\n```C++\n# include <bits/stdc++.h>\nusing namespace std;\n\n// int kill (pid_t pid, int sig);\n// unsigned int alarm(unsigned int seconds);\n```\n\n> kill调用失败返回-1，调用失败通常有三大原因：\n> 给定的信号无效（errno = EINVAL)\n> 发送权限不够( errno = EPERM ）\n> 目标进程不存在( errno = ESRCH )\n\n## 使用信号量\n\n### semget函数\n\n```C++\n// 原型\n// int semget(key_t key, int num_sems, int sem_flags);\n// int semop(int sem_id, struct sembuf *sem_opa, size_t num_sem_ops);\n// semctl\n\n```\n","slug":"Linux_Communication","published":1,"updated":"2019-09-22T09:13:46.391Z","_id":"ck0urb60w0000dxs1vh23d68i","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"使用信号\"><a href=\"#使用信号\" class=\"headerlink\" title=\"使用信号\"></a>使用信号</h2><p>信号在头文件signal.h中定义，信号都以SIG开头<br>常用信号有</p>\n<ul>\n<li>SIGALRM (由alarm函数设置的定时器产生)</li>\n<li>SIGHUP由一个处于非连接状态的终端发送给控制进程，或者由控制进程在自身结束时发送给每个前台进程</li>\n<li>SIGINT一般由Ctrl+C或者预先设置好的终端字符产生</li>\n<li>SIGPIPE如果向管道写数据时没有与之对应的读进程产生的信号</li>\n<li>SIGTERM作为一个请求被发送，要求进程结束运行。(是KILL命令默认发送的信号)</li>\n<li>SIGUSR1,SIGUSR2进程之间可以用这个信号进行通信，例如让进程报告状态信息</li>\n</ul>\n<h3 id=\"信号处理–signal函数\"><a href=\"#信号处理–signal函数\" class=\"headerlink\" title=\"信号处理–signal函数\"></a>信号处理–signal函数</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原型</span></span><br><span class=\"line\"><span class=\"comment\">// void (*signal(int sig, void (*func)(int)))(int);</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(<span class=\"keyword\">int</span> sign)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//sign 是信号类型</span></span><br><span class=\"line\">    signal(SIGINT, SIG_DFL); <span class=\"comment\">// 恢复终端中断信号的默认行为</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//改变终端中断信号SIGINT的默认行为，使之执行handle函数</span></span><br><span class=\"line\">\tsignal(SIGINT, handle);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"i'm running\\n\"</span>);</span><br><span class=\"line\">        sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"信号处理–sigaction函数\"><a href=\"#信号处理–sigaction函数\" class=\"headerlink\" title=\"信号处理–sigaction函数\"></a>信号处理–sigaction函数</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原型</span></span><br><span class=\"line\"><span class=\"comment\">// int sigaction(int sig, const struct sigaction *act, struct sigaction *oact);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(<span class=\"keyword\">int</span> sign)</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sigaction</span> <span class=\"title\">act</span>;</span></span><br><span class=\"line\">    act.sa_handler = handle;</span><br><span class=\"line\">    <span class=\"comment\">// 创建空的信号屏蔽集，即不屏蔽任何信息</span></span><br><span class=\"line\">    sigemptyset(&amp;act.sa_mask);</span><br><span class=\"line\">    <span class=\"comment\">// 使sigaction函数重置为默认行为</span></span><br><span class=\"line\">    act.sa_flags = SA_RESETHAND;</span><br><span class=\"line\">    sigaction(SIGINT, &amp;act, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"i'm running\\n\"</span>);</span><br><span class=\"line\">        sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"发送信号–kill-amp-alarm\"><a href=\"#发送信号–kill-amp-alarm\" class=\"headerlink\" title=\"发送信号–kill &amp; alarm\"></a>发送信号–kill &amp; alarm</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// int kill (pid_t pid, int sig);</span></span><br><span class=\"line\"><span class=\"comment\">// unsigned int alarm(unsigned int seconds);</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>kill调用失败返回-1，调用失败通常有三大原因：<br>给定的信号无效（errno = EINVAL)<br>发送权限不够( errno = EPERM ）<br>目标进程不存在( errno = ESRCH )</p>\n</blockquote>\n<h2 id=\"使用信号量\"><a href=\"#使用信号量\" class=\"headerlink\" title=\"使用信号量\"></a>使用信号量</h2><h3 id=\"semget函数\"><a href=\"#semget函数\" class=\"headerlink\" title=\"semget函数\"></a>semget函数</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 原型</span></span><br><span class=\"line\"><span class=\"comment\">// int semget(key_t key, int num_sems, int sem_flags);</span></span><br><span class=\"line\"><span class=\"comment\">// int semop(int sem_id, struct sembuf *sem_opa, size_t num_sem_ops);</span></span><br><span class=\"line\"><span class=\"comment\">// semctl</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用信号\"><a href=\"#使用信号\" class=\"headerlink\" title=\"使用信号\"></a>使用信号</h2><p>信号在头文件signal.h中定义，信号都以SIG开头<br>常用信号有</p>\n<ul>\n<li>SIGALRM (由alarm函数设置的定时器产生)</li>\n<li>SIGHUP由一个处于非连接状态的终端发送给控制进程，或者由控制进程在自身结束时发送给每个前台进程</li>\n<li>SIGINT一般由Ctrl+C或者预先设置好的终端字符产生</li>\n<li>SIGPIPE如果向管道写数据时没有与之对应的读进程产生的信号</li>\n<li>SIGTERM作为一个请求被发送，要求进程结束运行。(是KILL命令默认发送的信号)</li>\n<li>SIGUSR1,SIGUSR2进程之间可以用这个信号进行通信，例如让进程报告状态信息</li>\n</ul>\n<h3 id=\"信号处理–signal函数\"><a href=\"#信号处理–signal函数\" class=\"headerlink\" title=\"信号处理–signal函数\"></a>信号处理–signal函数</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原型</span></span><br><span class=\"line\"><span class=\"comment\">// void (*signal(int sig, void (*func)(int)))(int);</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(<span class=\"keyword\">int</span> sign)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//sign 是信号类型</span></span><br><span class=\"line\">    signal(SIGINT, SIG_DFL); <span class=\"comment\">// 恢复终端中断信号的默认行为</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//改变终端中断信号SIGINT的默认行为，使之执行handle函数</span></span><br><span class=\"line\">\tsignal(SIGINT, handle);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"i'm running\\n\"</span>);</span><br><span class=\"line\">        sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"信号处理–sigaction函数\"><a href=\"#信号处理–sigaction函数\" class=\"headerlink\" title=\"信号处理–sigaction函数\"></a>信号处理–sigaction函数</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原型</span></span><br><span class=\"line\"><span class=\"comment\">// int sigaction(int sig, const struct sigaction *act, struct sigaction *oact);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(<span class=\"keyword\">int</span> sign)</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sigaction</span> <span class=\"title\">act</span>;</span></span><br><span class=\"line\">    act.sa_handler = handle;</span><br><span class=\"line\">    <span class=\"comment\">// 创建空的信号屏蔽集，即不屏蔽任何信息</span></span><br><span class=\"line\">    sigemptyset(&amp;act.sa_mask);</span><br><span class=\"line\">    <span class=\"comment\">// 使sigaction函数重置为默认行为</span></span><br><span class=\"line\">    act.sa_flags = SA_RESETHAND;</span><br><span class=\"line\">    sigaction(SIGINT, &amp;act, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"i'm running\\n\"</span>);</span><br><span class=\"line\">        sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"发送信号–kill-amp-alarm\"><a href=\"#发送信号–kill-amp-alarm\" class=\"headerlink\" title=\"发送信号–kill &amp; alarm\"></a>发送信号–kill &amp; alarm</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"># <span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// int kill (pid_t pid, int sig);</span></span><br><span class=\"line\"><span class=\"comment\">// unsigned int alarm(unsigned int seconds);</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>kill调用失败返回-1，调用失败通常有三大原因：<br>给定的信号无效（errno = EINVAL)<br>发送权限不够( errno = EPERM ）<br>目标进程不存在( errno = ESRCH )</p>\n</blockquote>\n<h2 id=\"使用信号量\"><a href=\"#使用信号量\" class=\"headerlink\" title=\"使用信号量\"></a>使用信号量</h2><h3 id=\"semget函数\"><a href=\"#semget函数\" class=\"headerlink\" title=\"semget函数\"></a>semget函数</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 原型</span></span><br><span class=\"line\"><span class=\"comment\">// int semget(key_t key, int num_sems, int sem_flags);</span></span><br><span class=\"line\"><span class=\"comment\">// int semop(int sem_id, struct sembuf *sem_opa, size_t num_sem_ops);</span></span><br><span class=\"line\"><span class=\"comment\">// semctl</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Vscode","date":"2018-03-31T12:17:43.000Z","description":"Vscode 的一些配置。","_content":"\n## cmder\n\n```json\n\"terminal.integrated.shell.windows\": \"cmd.exe\",\n\"terminal.integrated.env.windows\": {\"CMDER_ROOT\": \"[cmder_root]\"},\n\"terminal.integrated.shellArgs.windows\": [\"/k\", \"[cmder_root]\\\\vendor\\\\init.bat\"]\n```\n\n## 插件们\n\n1. code time \\\n    记录代码时间\n2. Markdown PDF \\\n    Markdown 转 PDF 格式\n3. Markdown Preview Enhanced \\\n    Markdown 同步视图\n4. markdownline\n5. vscode-pdf \\\n    vscode 内支持打开pdf\n6. Docker \\\n    Docker !!!\n7. indenticator \\\n    回车自动缩进\n8. MYSQL \\\n    mysql management tool\n9. mysql-inline-decorator \\\n    Add color coding to inline MYSQL string inside\n10. Git History \\\n11. Quokka \\\n    是一个调试工具插件，能够根据你正在编写的代码提供实时反馈。\n12. SVG Viewer \\\n\n## C/C++\n\n先是下载 MINGW 官网或者 choco\n\n```sh\n\n```","source":"_posts/VSCode.md","raw":"---\ntitle: Vscode\ndate: 2018-03-31 20:17:43\ntags: \n    - 应用\ncategories: 应用\ndescription: Vscode 的一些配置。\n---\n\n## cmder\n\n```json\n\"terminal.integrated.shell.windows\": \"cmd.exe\",\n\"terminal.integrated.env.windows\": {\"CMDER_ROOT\": \"[cmder_root]\"},\n\"terminal.integrated.shellArgs.windows\": [\"/k\", \"[cmder_root]\\\\vendor\\\\init.bat\"]\n```\n\n## 插件们\n\n1. code time \\\n    记录代码时间\n2. Markdown PDF \\\n    Markdown 转 PDF 格式\n3. Markdown Preview Enhanced \\\n    Markdown 同步视图\n4. markdownline\n5. vscode-pdf \\\n    vscode 内支持打开pdf\n6. Docker \\\n    Docker !!!\n7. indenticator \\\n    回车自动缩进\n8. MYSQL \\\n    mysql management tool\n9. mysql-inline-decorator \\\n    Add color coding to inline MYSQL string inside\n10. Git History \\\n11. Quokka \\\n    是一个调试工具插件，能够根据你正在编写的代码提供实时反馈。\n12. SVG Viewer \\\n\n## C/C++\n\n先是下载 MINGW 官网或者 choco\n\n```sh\n\n```","slug":"VSCode","published":1,"updated":"2019-09-22T09:15:32.383Z","_id":"ck0urb6130001dxs1jhm81ewb","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"cmder\"><a href=\"#cmder\" class=\"headerlink\" title=\"cmder\"></a>cmder</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"terminal.integrated.shell.windows\": \"cmd.exe\",</span><br><span class=\"line\">\"terminal.integrated.env.windows\": &#123;\"CMDER_ROOT\": \"[cmder_root]\"&#125;,</span><br><span class=\"line\">\"terminal.integrated.shellArgs.windows\": [\"/k\", \"[cmder_root]\\\\vendor\\\\init.bat\"]</span><br></pre></td></tr></table></figure>\n<h2 id=\"插件们\"><a href=\"#插件们\" class=\"headerlink\" title=\"插件们\"></a>插件们</h2><ol>\n<li>code time \\<br> 记录代码时间</li>\n<li>Markdown PDF \\<br> Markdown 转 PDF 格式</li>\n<li>Markdown Preview Enhanced \\<br> Markdown 同步视图</li>\n<li>markdownline</li>\n<li>vscode-pdf \\<br> vscode 内支持打开pdf</li>\n<li>Docker \\<br> Docker !!!</li>\n<li>indenticator \\<br> 回车自动缩进</li>\n<li>MYSQL \\<br> mysql management tool</li>\n<li>mysql-inline-decorator \\<br> Add color coding to inline MYSQL string inside</li>\n<li>Git History \\</li>\n<li>Quokka \\<br>是一个调试工具插件，能够根据你正在编写的代码提供实时反馈。</li>\n<li>SVG Viewer \\</li>\n</ol>\n<h2 id=\"C-C\"><a href=\"#C-C\" class=\"headerlink\" title=\"C/C++\"></a>C/C++</h2><p>先是下载 MINGW 官网或者 choco</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"cmder\"><a href=\"#cmder\" class=\"headerlink\" title=\"cmder\"></a>cmder</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"terminal.integrated.shell.windows\": \"cmd.exe\",</span><br><span class=\"line\">\"terminal.integrated.env.windows\": &#123;\"CMDER_ROOT\": \"[cmder_root]\"&#125;,</span><br><span class=\"line\">\"terminal.integrated.shellArgs.windows\": [\"/k\", \"[cmder_root]\\\\vendor\\\\init.bat\"]</span><br></pre></td></tr></table></figure>\n<h2 id=\"插件们\"><a href=\"#插件们\" class=\"headerlink\" title=\"插件们\"></a>插件们</h2><ol>\n<li>code time \\<br> 记录代码时间</li>\n<li>Markdown PDF \\<br> Markdown 转 PDF 格式</li>\n<li>Markdown Preview Enhanced \\<br> Markdown 同步视图</li>\n<li>markdownline</li>\n<li>vscode-pdf \\<br> vscode 内支持打开pdf</li>\n<li>Docker \\<br> Docker !!!</li>\n<li>indenticator \\<br> 回车自动缩进</li>\n<li>MYSQL \\<br> mysql management tool</li>\n<li>mysql-inline-decorator \\<br> Add color coding to inline MYSQL string inside</li>\n<li>Git History \\</li>\n<li>Quokka \\<br>是一个调试工具插件，能够根据你正在编写的代码提供实时反馈。</li>\n<li>SVG Viewer \\</li>\n</ol>\n<h2 id=\"C-C\"><a href=\"#C-C\" class=\"headerlink\" title=\"C/C++\"></a>C/C++</h2><p>先是下载 MINGW 官网或者 choco</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"choco","date":"2018-03-31T12:17:43.000Z","description":"windows 下的apt。","_content":"\n# choco\n\n## 更改默认文件夹\n\n设置path变量 ChocolateyInstall\n\n## powershell\n\n```sh\niex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))\n```\n\n## cmd\n\n```sh\n@powershell -NoProfile -ExecutionPolicy Bypass -Command \"iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\n```\n","source":"_posts/chocolatey.md","raw":"---\ntitle: choco\ndate: 2018-03-31 20:17:43\ntags: \n    - 应用\ncategories: 应用\ndescription: windows 下的apt。\n---\n\n# choco\n\n## 更改默认文件夹\n\n设置path变量 ChocolateyInstall\n\n## powershell\n\n```sh\niex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))\n```\n\n## cmd\n\n```sh\n@powershell -NoProfile -ExecutionPolicy Bypass -Command \"iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\n```\n","slug":"chocolatey","published":1,"updated":"2019-09-22T09:12:04.752Z","_id":"ck0urb6150002dxs1on2l2k4g","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"choco\"><a href=\"#choco\" class=\"headerlink\" title=\"choco\"></a>choco</h1><h2 id=\"更改默认文件夹\"><a href=\"#更改默认文件夹\" class=\"headerlink\" title=\"更改默认文件夹\"></a>更改默认文件夹</h2><p>设置path变量 ChocolateyInstall</p>\n<h2 id=\"powershell\"><a href=\"#powershell\" class=\"headerlink\" title=\"powershell\"></a>powershell</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iex ((new-object net.webclient).DownloadString(<span class=\"string\">'https://chocolatey.org/install.ps1'</span>))</span><br></pre></td></tr></table></figure>\n<h2 id=\"cmd\"><a href=\"#cmd\" class=\"headerlink\" title=\"cmd\"></a>cmd</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@powershell -NoProfile -ExecutionPolicy Bypass -Command <span class=\"string\">\"iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))\"</span> &amp;&amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"choco\"><a href=\"#choco\" class=\"headerlink\" title=\"choco\"></a>choco</h1><h2 id=\"更改默认文件夹\"><a href=\"#更改默认文件夹\" class=\"headerlink\" title=\"更改默认文件夹\"></a>更改默认文件夹</h2><p>设置path变量 ChocolateyInstall</p>\n<h2 id=\"powershell\"><a href=\"#powershell\" class=\"headerlink\" title=\"powershell\"></a>powershell</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iex ((new-object net.webclient).DownloadString(<span class=\"string\">'https://chocolatey.org/install.ps1'</span>))</span><br></pre></td></tr></table></figure>\n<h2 id=\"cmd\"><a href=\"#cmd\" class=\"headerlink\" title=\"cmd\"></a>cmd</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@powershell -NoProfile -ExecutionPolicy Bypass -Command <span class=\"string\">\"iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))\"</span> &amp;&amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin</span><br></pre></td></tr></table></figure>\n"},{"title":"Docker","date":"2019-09-21T16:00:00.000Z","description":"docker容器技术，换源和dockerfile的简介，包括一些自己的配置。","_content":"\n## 换源\n\n1. settings -> daemon\n2. 点击basic 变成 advanced\n3. \"registry-mirrors\":[\"<https://docker.mirrors.ustc.edu.cn>\"]\n4. applay\n\n> Docker中国区官方镜像 : <https://registry.docker-cn.com> \\\n> 网易 : <http://hub-mirror.c.163.com> \\\n> ustc : <https://docker.mirrors.ustc.edu.cn> \\\n> 中国科技大学 : <https://docker.mirrors.ustc.edu.cn> \\\n> 阿里云容器 : <https://cr.console.aliyun.com/>\n( 首页点击“创建我的容器镜像”  得到一个专属的镜像加速地址，类似于“<https://1234abcd.mirror.aliyuncs.com”)>\n\n## Dockerfile\n\nhow to write a dockerfile?\n> Create an empty directory on your local machine.\n> Change directories (cd) into the new directory,\n> create a file called Dockerfile,\n> copy-and-paste the following content into that file, and save it.\n> Take note of the comments that explain each statement in your new Dockerfile.\n\n```dockerfile\n# Use an official Python runtime as a parent image\nFROM python:3.4-alpine\n# Set the working directory to /app\nADD /app\n# Copy the current directory contents into the container at /app\nCOPY . /app\n# Install any needed packages specified in requirements.txt\nRUN pip install -r requirements.txt\n\n# Define environment variable\nENV NAME python_web\n# Run app.py when the container launches\nCMD [\"python\", \"app.py\"]\n```\n\n## Docker-compose\n\n官方文档 <https://docs.docker.com/compose/overview/>\n官方例子 <https://docs.docker.com/compose/gettingstarted/>\n\n> Using Compose is basically a three-step process:\n>\n> 1. Define your app’s environment with a Dockerfile so it can be reproduced anywhere.\n> 2. Define the services that make up your app in docker-compose.yml so they can be run together in an isolated environment.\n> 3. Run docker-compose up and Compose starts and runs your entire app.\n\n## 设置支持中文\n\n> -p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口。\n> -v -v $PWD/conf:/etc/mysql/conf.d：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。\n> -v $PWD/logs:/logs：将主机当前目录下的 logs 目录挂载到容器的 /logs。\n> -v $PWD/data:/var/lib/mysql ：将主机当前目录下的data目录挂载到容器的 /var/lib/mysql 。\n> -e MYSQL_ROOT_PASSWORD=123456：初始化 root 用户的密码。\n\n## 常用镜像\n\n### Mysql:5.7\n\n```markdown\ndocker pull mysql:5.7\n\ndocker run -p 3306:3306 --name mysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=19980504 --restart=always -d mysql:5.7\n\ndocker exec -it mysql  env LANG=C.UTF-8 bash\n```\n\n### nodejs\n\n```bash\ndocker run -it -e \"NODE_ENV=production\" -u \"node\"  -m \"300M\" --memory-swap \"1G\" -w \"/home/node/app\" -v D:\\coding\\web\\nodejs:/home/node/app --name \"node\" -d node\n```\n","source":"_posts/docker.md","raw":"---\ntitle: Docker\ndate: 2019-9-22\ntags: \n    - 应用\ncategories: 应用\ndescription: docker容器技术，换源和dockerfile的简介，包括一些自己的配置。\n---\n\n## 换源\n\n1. settings -> daemon\n2. 点击basic 变成 advanced\n3. \"registry-mirrors\":[\"<https://docker.mirrors.ustc.edu.cn>\"]\n4. applay\n\n> Docker中国区官方镜像 : <https://registry.docker-cn.com> \\\n> 网易 : <http://hub-mirror.c.163.com> \\\n> ustc : <https://docker.mirrors.ustc.edu.cn> \\\n> 中国科技大学 : <https://docker.mirrors.ustc.edu.cn> \\\n> 阿里云容器 : <https://cr.console.aliyun.com/>\n( 首页点击“创建我的容器镜像”  得到一个专属的镜像加速地址，类似于“<https://1234abcd.mirror.aliyuncs.com”)>\n\n## Dockerfile\n\nhow to write a dockerfile?\n> Create an empty directory on your local machine.\n> Change directories (cd) into the new directory,\n> create a file called Dockerfile,\n> copy-and-paste the following content into that file, and save it.\n> Take note of the comments that explain each statement in your new Dockerfile.\n\n```dockerfile\n# Use an official Python runtime as a parent image\nFROM python:3.4-alpine\n# Set the working directory to /app\nADD /app\n# Copy the current directory contents into the container at /app\nCOPY . /app\n# Install any needed packages specified in requirements.txt\nRUN pip install -r requirements.txt\n\n# Define environment variable\nENV NAME python_web\n# Run app.py when the container launches\nCMD [\"python\", \"app.py\"]\n```\n\n## Docker-compose\n\n官方文档 <https://docs.docker.com/compose/overview/>\n官方例子 <https://docs.docker.com/compose/gettingstarted/>\n\n> Using Compose is basically a three-step process:\n>\n> 1. Define your app’s environment with a Dockerfile so it can be reproduced anywhere.\n> 2. Define the services that make up your app in docker-compose.yml so they can be run together in an isolated environment.\n> 3. Run docker-compose up and Compose starts and runs your entire app.\n\n## 设置支持中文\n\n> -p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口。\n> -v -v $PWD/conf:/etc/mysql/conf.d：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。\n> -v $PWD/logs:/logs：将主机当前目录下的 logs 目录挂载到容器的 /logs。\n> -v $PWD/data:/var/lib/mysql ：将主机当前目录下的data目录挂载到容器的 /var/lib/mysql 。\n> -e MYSQL_ROOT_PASSWORD=123456：初始化 root 用户的密码。\n\n## 常用镜像\n\n### Mysql:5.7\n\n```markdown\ndocker pull mysql:5.7\n\ndocker run -p 3306:3306 --name mysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=19980504 --restart=always -d mysql:5.7\n\ndocker exec -it mysql  env LANG=C.UTF-8 bash\n```\n\n### nodejs\n\n```bash\ndocker run -it -e \"NODE_ENV=production\" -u \"node\"  -m \"300M\" --memory-swap \"1G\" -w \"/home/node/app\" -v D:\\coding\\web\\nodejs:/home/node/app --name \"node\" -d node\n```\n","slug":"docker","published":1,"updated":"2019-09-22T09:11:59.520Z","_id":"ck0urb6160003dxs1ny0dbu1b","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h2><ol>\n<li>settings -&gt; daemon</li>\n<li>点击basic 变成 advanced</li>\n<li>“registry-mirrors”:[“<a href=\"https://docker.mirrors.ustc.edu.cn\" target=\"_blank\" rel=\"noopener\">https://docker.mirrors.ustc.edu.cn</a>“]</li>\n<li>applay</li>\n</ol>\n<blockquote>\n<p>Docker中国区官方镜像 : <a href=\"https://registry.docker-cn.com\" target=\"_blank\" rel=\"noopener\">https://registry.docker-cn.com</a> \\<br>网易 : <a href=\"http://hub-mirror.c.163.com\" target=\"_blank\" rel=\"noopener\">http://hub-mirror.c.163.com</a> \\<br>ustc : <a href=\"https://docker.mirrors.ustc.edu.cn\" target=\"_blank\" rel=\"noopener\">https://docker.mirrors.ustc.edu.cn</a> \\<br>中国科技大学 : <a href=\"https://docker.mirrors.ustc.edu.cn\" target=\"_blank\" rel=\"noopener\">https://docker.mirrors.ustc.edu.cn</a> \\<br>阿里云容器 : <a href=\"https://cr.console.aliyun.com/\" target=\"_blank\" rel=\"noopener\">https://cr.console.aliyun.com/</a><br>( 首页点击“创建我的容器镜像”  得到一个专属的镜像加速地址，类似于“<a href=\"https://1234abcd.mirror.aliyuncs.com”)\" target=\"_blank\" rel=\"noopener\">https://1234abcd.mirror.aliyuncs.com”)</a></p>\n</blockquote>\n<h2 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h2><p>how to write a dockerfile?</p>\n<blockquote>\n<p>Create an empty directory on your local machine.<br>Change directories (cd) into the new directory,<br>create a file called Dockerfile,<br>copy-and-paste the following content into that file, and save it.<br>Take note of the comments that explain each statement in your new Dockerfile.</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Use an official Python runtime as a parent image</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> python:<span class=\"number\">3.4</span>-alpine</span><br><span class=\"line\"><span class=\"comment\"># Set the working directory to /app</span></span><br><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"comment\"># Copy the current directory contents into the container at /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /app</span></span><br><span class=\"line\"><span class=\"comment\"># Install any needed packages specified in requirements.txt</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> pip install -r requirements.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Define environment variable</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> NAME python_web</span><br><span class=\"line\"><span class=\"comment\"># Run app.py when the container launches</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">\"python\"</span>, <span class=\"string\">\"app.py\"</span>]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Docker-compose\"><a href=\"#Docker-compose\" class=\"headerlink\" title=\"Docker-compose\"></a>Docker-compose</h2><p>官方文档 <a href=\"https://docs.docker.com/compose/overview/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/overview/</a><br>官方例子 <a href=\"https://docs.docker.com/compose/gettingstarted/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/gettingstarted/</a></p>\n<blockquote>\n<p>Using Compose is basically a three-step process:</p>\n<ol>\n<li>Define your app’s environment with a Dockerfile so it can be reproduced anywhere.</li>\n<li>Define the services that make up your app in docker-compose.yml so they can be run together in an isolated environment.</li>\n<li>Run docker-compose up and Compose starts and runs your entire app.</li>\n</ol>\n</blockquote>\n<h2 id=\"设置支持中文\"><a href=\"#设置支持中文\" class=\"headerlink\" title=\"设置支持中文\"></a>设置支持中文</h2><blockquote>\n<p>-p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口。<br>-v -v $PWD/conf:/etc/mysql/conf.d：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。<br>-v $PWD/logs:/logs：将主机当前目录下的 logs 目录挂载到容器的 /logs。<br>-v $PWD/data:/var/lib/mysql ：将主机当前目录下的data目录挂载到容器的 /var/lib/mysql 。<br>-e MYSQL_ROOT_PASSWORD=123456：初始化 root 用户的密码。</p>\n</blockquote>\n<h2 id=\"常用镜像\"><a href=\"#常用镜像\" class=\"headerlink\" title=\"常用镜像\"></a>常用镜像</h2><h3 id=\"Mysql-5-7\"><a href=\"#Mysql-5-7\" class=\"headerlink\" title=\"Mysql:5.7\"></a>Mysql:5.7</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull mysql:5.7</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -p 3306:3306 --name mysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL<span class=\"emphasis\">_ROOT_</span>PASSWORD=19980504 --restart=always -d mysql:5.7</span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it mysql  env LANG=C.UTF-8 bash</span><br></pre></td></tr></table></figure>\n<h3 id=\"nodejs\"><a href=\"#nodejs\" class=\"headerlink\" title=\"nodejs\"></a>nodejs</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -it -e <span class=\"string\">\"NODE_ENV=production\"</span> -u <span class=\"string\">\"node\"</span>  -m <span class=\"string\">\"300M\"</span> --memory-swap <span class=\"string\">\"1G\"</span> -w <span class=\"string\">\"/home/node/app\"</span> -v D:\\coding\\web\\nodejs:/home/node/app --name <span class=\"string\">\"node\"</span> -d node</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h2><ol>\n<li>settings -&gt; daemon</li>\n<li>点击basic 变成 advanced</li>\n<li>“registry-mirrors”:[“<a href=\"https://docker.mirrors.ustc.edu.cn\" target=\"_blank\" rel=\"noopener\">https://docker.mirrors.ustc.edu.cn</a>“]</li>\n<li>applay</li>\n</ol>\n<blockquote>\n<p>Docker中国区官方镜像 : <a href=\"https://registry.docker-cn.com\" target=\"_blank\" rel=\"noopener\">https://registry.docker-cn.com</a> \\<br>网易 : <a href=\"http://hub-mirror.c.163.com\" target=\"_blank\" rel=\"noopener\">http://hub-mirror.c.163.com</a> \\<br>ustc : <a href=\"https://docker.mirrors.ustc.edu.cn\" target=\"_blank\" rel=\"noopener\">https://docker.mirrors.ustc.edu.cn</a> \\<br>中国科技大学 : <a href=\"https://docker.mirrors.ustc.edu.cn\" target=\"_blank\" rel=\"noopener\">https://docker.mirrors.ustc.edu.cn</a> \\<br>阿里云容器 : <a href=\"https://cr.console.aliyun.com/\" target=\"_blank\" rel=\"noopener\">https://cr.console.aliyun.com/</a><br>( 首页点击“创建我的容器镜像”  得到一个专属的镜像加速地址，类似于“<a href=\"https://1234abcd.mirror.aliyuncs.com”)\" target=\"_blank\" rel=\"noopener\">https://1234abcd.mirror.aliyuncs.com”)</a></p>\n</blockquote>\n<h2 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h2><p>how to write a dockerfile?</p>\n<blockquote>\n<p>Create an empty directory on your local machine.<br>Change directories (cd) into the new directory,<br>create a file called Dockerfile,<br>copy-and-paste the following content into that file, and save it.<br>Take note of the comments that explain each statement in your new Dockerfile.</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Use an official Python runtime as a parent image</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> python:<span class=\"number\">3.4</span>-alpine</span><br><span class=\"line\"><span class=\"comment\"># Set the working directory to /app</span></span><br><span class=\"line\"><span class=\"keyword\">ADD</span><span class=\"bash\"> /app</span></span><br><span class=\"line\"><span class=\"comment\"># Copy the current directory contents into the container at /app</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"bash\"> . /app</span></span><br><span class=\"line\"><span class=\"comment\"># Install any needed packages specified in requirements.txt</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> pip install -r requirements.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Define environment variable</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> NAME python_web</span><br><span class=\"line\"><span class=\"comment\"># Run app.py when the container launches</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">\"python\"</span>, <span class=\"string\">\"app.py\"</span>]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Docker-compose\"><a href=\"#Docker-compose\" class=\"headerlink\" title=\"Docker-compose\"></a>Docker-compose</h2><p>官方文档 <a href=\"https://docs.docker.com/compose/overview/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/overview/</a><br>官方例子 <a href=\"https://docs.docker.com/compose/gettingstarted/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/gettingstarted/</a></p>\n<blockquote>\n<p>Using Compose is basically a three-step process:</p>\n<ol>\n<li>Define your app’s environment with a Dockerfile so it can be reproduced anywhere.</li>\n<li>Define the services that make up your app in docker-compose.yml so they can be run together in an isolated environment.</li>\n<li>Run docker-compose up and Compose starts and runs your entire app.</li>\n</ol>\n</blockquote>\n<h2 id=\"设置支持中文\"><a href=\"#设置支持中文\" class=\"headerlink\" title=\"设置支持中文\"></a>设置支持中文</h2><blockquote>\n<p>-p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口。<br>-v -v $PWD/conf:/etc/mysql/conf.d：将主机当前目录下的 conf/my.cnf 挂载到容器的 /etc/mysql/my.cnf。<br>-v $PWD/logs:/logs：将主机当前目录下的 logs 目录挂载到容器的 /logs。<br>-v $PWD/data:/var/lib/mysql ：将主机当前目录下的data目录挂载到容器的 /var/lib/mysql 。<br>-e MYSQL_ROOT_PASSWORD=123456：初始化 root 用户的密码。</p>\n</blockquote>\n<h2 id=\"常用镜像\"><a href=\"#常用镜像\" class=\"headerlink\" title=\"常用镜像\"></a>常用镜像</h2><h3 id=\"Mysql-5-7\"><a href=\"#Mysql-5-7\" class=\"headerlink\" title=\"Mysql:5.7\"></a>Mysql:5.7</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull mysql:5.7</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -p 3306:3306 --name mysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL<span class=\"emphasis\">_ROOT_</span>PASSWORD=19980504 --restart=always -d mysql:5.7</span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it mysql  env LANG=C.UTF-8 bash</span><br></pre></td></tr></table></figure>\n<h3 id=\"nodejs\"><a href=\"#nodejs\" class=\"headerlink\" title=\"nodejs\"></a>nodejs</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -it -e <span class=\"string\">\"NODE_ENV=production\"</span> -u <span class=\"string\">\"node\"</span>  -m <span class=\"string\">\"300M\"</span> --memory-swap <span class=\"string\">\"1G\"</span> -w <span class=\"string\">\"/home/node/app\"</span> -v D:\\coding\\web\\nodejs:/home/node/app --name <span class=\"string\">\"node\"</span> -d node</span><br></pre></td></tr></table></figure>\n"},{"title":"git 配置","date":"2018-03-31T12:17:43.000Z","description":"git使用上的一些技巧整理。","_content":"\n## git 全局配置\n\n```\ngit config --global user.name \"edxuanlen\"\ngit config --global user.email \"edxuanlen@gmail.com\"\n```\n\n## git clone 选择分支\n\ngit clone -b 分支名 https:// xxxxx\n\n\n## 创建 git 仓库\n```\ngit init\n# touch README.md\n# git add README.md\ngit add ./\ngit commit -m \"2019.5.6\"\ngit remote add origin https://github.com/edxuanlen/coding.git\ngit push -u origin master\n# git push -f (强行推送)\n```\n\n## 大文件传送\n\ngit-lfs\n\n```sh\ncurl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash\nsudo apt-get install git-lfs\ngit lfs install\n```\n\n\n## 记住密码\n\n```sh\ngit config credential.helper store\n```","source":"_posts/git.md","raw":"---\ntitle: git 配置\ndate: 2018-03-31 20:17:43\ntags: \n    - 应用\ncategories: 应用\ndescription: git使用上的一些技巧整理。\n\n---\n\n## git 全局配置\n\n```\ngit config --global user.name \"edxuanlen\"\ngit config --global user.email \"edxuanlen@gmail.com\"\n```\n\n## git clone 选择分支\n\ngit clone -b 分支名 https:// xxxxx\n\n\n## 创建 git 仓库\n```\ngit init\n# touch README.md\n# git add README.md\ngit add ./\ngit commit -m \"2019.5.6\"\ngit remote add origin https://github.com/edxuanlen/coding.git\ngit push -u origin master\n# git push -f (强行推送)\n```\n\n## 大文件传送\n\ngit-lfs\n\n```sh\ncurl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash\nsudo apt-get install git-lfs\ngit lfs install\n```\n\n\n## 记住密码\n\n```sh\ngit config credential.helper store\n```","slug":"git","published":1,"updated":"2019-09-22T09:11:48.160Z","_id":"ck0urb6160004dxs16rwxszkv","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"git-全局配置\"><a href=\"#git-全局配置\" class=\"headerlink\" title=\"git 全局配置\"></a>git 全局配置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;edxuanlen&quot;</span><br><span class=\"line\">git config --global user.email &quot;edxuanlen@gmail.com&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-clone-选择分支\"><a href=\"#git-clone-选择分支\" class=\"headerlink\" title=\"git clone 选择分支\"></a>git clone 选择分支</h2><p>git clone -b 分支名 https:// xxxxx</p>\n<h2 id=\"创建-git-仓库\"><a href=\"#创建-git-仓库\" class=\"headerlink\" title=\"创建 git 仓库\"></a>创建 git 仓库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\"># touch README.md</span><br><span class=\"line\"># git add README.md</span><br><span class=\"line\">git add ./</span><br><span class=\"line\">git commit -m &quot;2019.5.6&quot;</span><br><span class=\"line\">git remote add origin https://github.com/edxuanlen/coding.git</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\"># git push -f (强行推送)</span><br></pre></td></tr></table></figure>\n<h2 id=\"大文件传送\"><a href=\"#大文件传送\" class=\"headerlink\" title=\"大文件传送\"></a>大文件传送</h2><p>git-lfs</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash</span><br><span class=\"line\">sudo apt-get install git-lfs</span><br><span class=\"line\">git lfs install</span><br></pre></td></tr></table></figure>\n<h2 id=\"记住密码\"><a href=\"#记住密码\" class=\"headerlink\" title=\"记住密码\"></a>记住密码</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config credential.helper store</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"git-全局配置\"><a href=\"#git-全局配置\" class=\"headerlink\" title=\"git 全局配置\"></a>git 全局配置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;edxuanlen&quot;</span><br><span class=\"line\">git config --global user.email &quot;edxuanlen@gmail.com&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-clone-选择分支\"><a href=\"#git-clone-选择分支\" class=\"headerlink\" title=\"git clone 选择分支\"></a>git clone 选择分支</h2><p>git clone -b 分支名 https:// xxxxx</p>\n<h2 id=\"创建-git-仓库\"><a href=\"#创建-git-仓库\" class=\"headerlink\" title=\"创建 git 仓库\"></a>创建 git 仓库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\"># touch README.md</span><br><span class=\"line\"># git add README.md</span><br><span class=\"line\">git add ./</span><br><span class=\"line\">git commit -m &quot;2019.5.6&quot;</span><br><span class=\"line\">git remote add origin https://github.com/edxuanlen/coding.git</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\"># git push -f (强行推送)</span><br></pre></td></tr></table></figure>\n<h2 id=\"大文件传送\"><a href=\"#大文件传送\" class=\"headerlink\" title=\"大文件传送\"></a>大文件传送</h2><p>git-lfs</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash</span><br><span class=\"line\">sudo apt-get install git-lfs</span><br><span class=\"line\">git lfs install</span><br></pre></td></tr></table></figure>\n<h2 id=\"记住密码\"><a href=\"#记住密码\" class=\"headerlink\" title=\"记住密码\"></a>记住密码</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config credential.helper store</span><br></pre></td></tr></table></figure>"},{"title":"Mysql","date":"2018-03-31T12:17:43.000Z","description":"docker Mysql的使用上的一些记录。","_content":"\n\n## 开启远程访问\n\n如果是docker上的镜像不需要\n\n```SQL\nuse mysql;\nselect host,user from user;\n# Grant all privileges on *.* to 'root'@'%' identified by 'password' with grant option;\n# (%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，里面的password需要自己修改成root的密码\nflush privileges;  \n```\n\n## 支持中文\n\n```SQL\nset names utf8;\n```\n\n## 查看comment注释\n\n```SQL\nshow full columns from table_name\n```\n\n## foreign key 外键\n\n```SQL\nalter table 表名 add constraint FK_ID foreign key(你的外键字段名) REFERENCES 外表表名(对应的表的主键字段名);\n-- FK_ID 是外键名\n```\n\n## mysql insert\n\n```SQL\ninsert into Stu values('col1','col2','col3');\n```\n\n## mysql update\n\n```SQL\nUPDATE table_name SET col1 = '', col2 = '' WHERE col3 = value;\n```\n\n## mysql 更改列\n\n```SQL\nalter table table_name modify column_name data_type;\n```\n\n## mysql Check 实现\n\n一个限制插入年龄15-45的Check\n\n```SQL\ndelimiter //\ncreate trigger AgeCheck before insert on Stu\nfor each row\nbegin\nif new.Age < 15 or new.Age > 45 then\nsignal sqlstate 'TX000' set message_text = \"Age limit is 15 to 45\";\nend if;\nend //\n```\n","source":"_posts/mysql.md","raw":"---\ntitle: Mysql\ndate: 2018-03-31 20:17:43\ntags: \n    - SQL\ncategories: SQL\ndescription: docker Mysql的使用上的一些记录。\n---\n\n\n## 开启远程访问\n\n如果是docker上的镜像不需要\n\n```SQL\nuse mysql;\nselect host,user from user;\n# Grant all privileges on *.* to 'root'@'%' identified by 'password' with grant option;\n# (%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，里面的password需要自己修改成root的密码\nflush privileges;  \n```\n\n## 支持中文\n\n```SQL\nset names utf8;\n```\n\n## 查看comment注释\n\n```SQL\nshow full columns from table_name\n```\n\n## foreign key 外键\n\n```SQL\nalter table 表名 add constraint FK_ID foreign key(你的外键字段名) REFERENCES 外表表名(对应的表的主键字段名);\n-- FK_ID 是外键名\n```\n\n## mysql insert\n\n```SQL\ninsert into Stu values('col1','col2','col3');\n```\n\n## mysql update\n\n```SQL\nUPDATE table_name SET col1 = '', col2 = '' WHERE col3 = value;\n```\n\n## mysql 更改列\n\n```SQL\nalter table table_name modify column_name data_type;\n```\n\n## mysql Check 实现\n\n一个限制插入年龄15-45的Check\n\n```SQL\ndelimiter //\ncreate trigger AgeCheck before insert on Stu\nfor each row\nbegin\nif new.Age < 15 or new.Age > 45 then\nsignal sqlstate 'TX000' set message_text = \"Age limit is 15 to 45\";\nend if;\nend //\n```\n","slug":"mysql","published":1,"updated":"2019-09-22T09:14:56.451Z","_id":"ck0urb6170005dxs1rier79zc","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"开启远程访问\"><a href=\"#开启远程访问\" class=\"headerlink\" title=\"开启远程访问\"></a>开启远程访问</h2><p>如果是docker上的镜像不需要</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> mysql;</span><br><span class=\"line\"><span class=\"keyword\">select</span> host,<span class=\"keyword\">user</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>;</span><br><span class=\"line\"><span class=\"comment\"># Grant all privileges on *.* to 'root'@'%' identified by 'password' with grant option;</span></span><br><span class=\"line\"><span class=\"comment\"># (%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，里面的password需要自己修改成root的密码</span></span><br><span class=\"line\"><span class=\"keyword\">flush</span> <span class=\"keyword\">privileges</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"支持中文\"><a href=\"#支持中文\" class=\"headerlink\" title=\"支持中文\"></a>支持中文</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">names</span> utf8;</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看comment注释\"><a href=\"#查看comment注释\" class=\"headerlink\" title=\"查看comment注释\"></a>查看comment注释</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">full</span> <span class=\"keyword\">columns</span> <span class=\"keyword\">from</span> table_name</span><br></pre></td></tr></table></figure>\n<h2 id=\"foreign-key-外键\"><a href=\"#foreign-key-外键\" class=\"headerlink\" title=\"foreign key 外键\"></a>foreign key 外键</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">add</span> <span class=\"keyword\">constraint</span> FK_ID <span class=\"keyword\">foreign</span> <span class=\"keyword\">key</span>(你的外键字段名) <span class=\"keyword\">REFERENCES</span> 外表表名(对应的表的主键字段名);</span><br><span class=\"line\"><span class=\"comment\">-- FK_ID 是外键名</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"mysql-insert\"><a href=\"#mysql-insert\" class=\"headerlink\" title=\"mysql insert\"></a>mysql insert</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Stu <span class=\"keyword\">values</span>(<span class=\"string\">'col1'</span>,<span class=\"string\">'col2'</span>,<span class=\"string\">'col3'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"mysql-update\"><a href=\"#mysql-update\" class=\"headerlink\" title=\"mysql update\"></a>mysql update</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> table_name <span class=\"keyword\">SET</span> col1 = <span class=\"string\">''</span>, col2 = <span class=\"string\">''</span> <span class=\"keyword\">WHERE</span> col3 = <span class=\"keyword\">value</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"mysql-更改列\"><a href=\"#mysql-更改列\" class=\"headerlink\" title=\"mysql 更改列\"></a>mysql 更改列</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> table_name <span class=\"keyword\">modify</span> column_name data_type;</span><br></pre></td></tr></table></figure>\n<h2 id=\"mysql-Check-实现\"><a href=\"#mysql-Check-实现\" class=\"headerlink\" title=\"mysql Check 实现\"></a>mysql Check 实现</h2><p>一个限制插入年龄15-45的Check</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">delimiter //</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> AgeCheck <span class=\"keyword\">before</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">on</span> Stu</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"keyword\">row</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> new.Age &lt; <span class=\"number\">15</span> <span class=\"keyword\">or</span> new.Age &gt; <span class=\"number\">45</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">signal <span class=\"keyword\">sqlstate</span> <span class=\"string\">'TX000'</span> <span class=\"keyword\">set</span> message_text = <span class=\"string\">\"Age limit is 15 to 45\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"keyword\">if</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> //</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"开启远程访问\"><a href=\"#开启远程访问\" class=\"headerlink\" title=\"开启远程访问\"></a>开启远程访问</h2><p>如果是docker上的镜像不需要</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> mysql;</span><br><span class=\"line\"><span class=\"keyword\">select</span> host,<span class=\"keyword\">user</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>;</span><br><span class=\"line\"><span class=\"comment\"># Grant all privileges on *.* to 'root'@'%' identified by 'password' with grant option;</span></span><br><span class=\"line\"><span class=\"comment\"># (%表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；‘root’则是指要使用的用户名，里面的password需要自己修改成root的密码</span></span><br><span class=\"line\"><span class=\"keyword\">flush</span> <span class=\"keyword\">privileges</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"支持中文\"><a href=\"#支持中文\" class=\"headerlink\" title=\"支持中文\"></a>支持中文</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">names</span> utf8;</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看comment注释\"><a href=\"#查看comment注释\" class=\"headerlink\" title=\"查看comment注释\"></a>查看comment注释</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">full</span> <span class=\"keyword\">columns</span> <span class=\"keyword\">from</span> table_name</span><br></pre></td></tr></table></figure>\n<h2 id=\"foreign-key-外键\"><a href=\"#foreign-key-外键\" class=\"headerlink\" title=\"foreign key 外键\"></a>foreign key 外键</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> 表名 <span class=\"keyword\">add</span> <span class=\"keyword\">constraint</span> FK_ID <span class=\"keyword\">foreign</span> <span class=\"keyword\">key</span>(你的外键字段名) <span class=\"keyword\">REFERENCES</span> 外表表名(对应的表的主键字段名);</span><br><span class=\"line\"><span class=\"comment\">-- FK_ID 是外键名</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"mysql-insert\"><a href=\"#mysql-insert\" class=\"headerlink\" title=\"mysql insert\"></a>mysql insert</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Stu <span class=\"keyword\">values</span>(<span class=\"string\">'col1'</span>,<span class=\"string\">'col2'</span>,<span class=\"string\">'col3'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"mysql-update\"><a href=\"#mysql-update\" class=\"headerlink\" title=\"mysql update\"></a>mysql update</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> table_name <span class=\"keyword\">SET</span> col1 = <span class=\"string\">''</span>, col2 = <span class=\"string\">''</span> <span class=\"keyword\">WHERE</span> col3 = <span class=\"keyword\">value</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"mysql-更改列\"><a href=\"#mysql-更改列\" class=\"headerlink\" title=\"mysql 更改列\"></a>mysql 更改列</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> table_name <span class=\"keyword\">modify</span> column_name data_type;</span><br></pre></td></tr></table></figure>\n<h2 id=\"mysql-Check-实现\"><a href=\"#mysql-Check-实现\" class=\"headerlink\" title=\"mysql Check 实现\"></a>mysql Check 实现</h2><p>一个限制插入年龄15-45的Check</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">delimiter //</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> AgeCheck <span class=\"keyword\">before</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">on</span> Stu</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"keyword\">row</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> new.Age &lt; <span class=\"number\">15</span> <span class=\"keyword\">or</span> new.Age &gt; <span class=\"number\">45</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">signal <span class=\"keyword\">sqlstate</span> <span class=\"string\">'TX000'</span> <span class=\"keyword\">set</span> message_text = <span class=\"string\">\"Age limit is 15 to 45\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"keyword\">if</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> //</span><br></pre></td></tr></table></figure>\n"},{"title":"Template","date":"2018-03-31T12:17:43.000Z","top":true,"description":"ICPC模板","_content":"\n<!-- # Template -->\n\n## number theory(数论)\n\n### 扩展欧几里得相关\n\n``` C++\n// ax + by = gcd(a, b)\nLL exgcd(LL a, LL b, LL &x, LL &y) {\n    if (!b) {\n        x = 1, y = 0;\n        return a;\n    }\n    else{\n        LL d = exgcd(b, a % b, y, x);\n        y -= x * (a / b);\n        return d;\n    }\n}\n\n// ax + by = c\nbool linear_equation(LL a, LL b, LL c, LL &x, LL &y){\n    LL d = exgcd (a, b, x, y);\n    if( c % d )\n        return false;\n    LL k = c / d;\n    x *= k; y *= k;\n    return true;\n    // 其他解为 x + b / d * t; y - a / d * t; t为任意整数\n}\n\n// ax ≡ b (mod n)\nbool modular_linear_equation(LL a, LL b, LL n, LL &x, LL &y){\n    LL x0, i;\n    LL d = exgcd(a, n, x, y);\n    if( b % d ) return false;\n    x0 = x * ( b / d ) % n;\n    for(i = 1; i <= d; i ++)\n        printf(\"%d\\n\", ( x0 + i * ( n / d ) ) % n );\n    return true;\n}\n\n// inverse\nint inverse(LL a, LL m, LL x, LL y){\n    LL d = exgcd(a, m, x, y);\n    return (x + m) % m;\n}\n```\n\n### 勾股数组\n\n取n $\\lt$ m且满足(n & 1) ^ (m & 1)为1（这里的^为异或，此表达式说明二者奇偶不同），同时gcd(n, m) = 1（即二者互素），则可得到满足 $a^2 + b^2 = c^2$ 的勾股数组：\n\n$ a = m^2 - n^2 $\n$ b = 2 * n * m $\n$ c = m^2 + n^2 $\n\n按照顺序枚举满足上述条件（奇偶不同的互素n $\\lt$ m二元组（n, m）），就可以得到所有的本源勾股数组，同时它们的整数倍也是勾股数组。这个方法可以取得所有的勾股数组。\n\n### 欧拉线性筛\n\n欧拉线性筛求判断素数和求最小质因子\n\n```C++\n// MinFactor[i] = x 表示为i最小质因子为 x\n// p[i] = x 表示为第 i+1 个素数为x\n// MinFactor 只求素数可换为 bool 类型判断 not_prime\nvoid euler(){\n    int t = 0;\n    pos = 0;\n    for(int i = 2; i < LIM; i ++){\n        if ( !MinFactor[i] ) p[pos ++] = MinFactor[i] =  i;\n        for(int j = 0; (t = i * p[j]) < LIM; j ++){\n            MinFactor[t] = p[j];\n            if( !(i % p[j]) ) break;\n        }\n    }\n}\n```\n\n### 欧拉函数\n\nphi(i) 意义： 小于 i 且与 i 互质的正整数的个数\n\n1. 打表时间复杂度 O(n)\n\n    ```C++\n    void init_phi(){\n        int t;\n        phi[1] = 1;\n        for(int i = 2; i < LIM; i ++){\n            if( !phi[i] ){\n                phi[i] = i - 1;\n                p[cnt ++] = i;\n            }\n            for(int j = 0; (t = i * p[j]) < LIM; j ++){\n                if( i % p[j] ) phi[t] = phi[i] * (p[j] - 1);\n                else {\n                    phi[t] = phi[i] * p[j];\n                    break;\n                }\n            }\n        }\n    }\n    ```\n\n2. 单个时间复杂度为 O($\\sqrt{n}$)\n\n    ```C++\n    LL phi(LL n) {  \n        LL ret = 1;\n        for (LL i = 2; i * i <= n; i++) {\n            if (!(n % i)) {\n                ret *= i - 1;\n                n /= i;\n                while (!(n % i))\n                    ret *= i, n /= i;\n            }\n        }\n        if (n ^ 1) ret *= (n - 1);\n        return ret;\n    }\n    ```\n\n## Numberical Methods(数值方法)\n\n### 高精度平方根\n\n牛顿逼近法\n\n```java\npublic static BigDecimal sqrt(BigDecimal b, BigDecimal eps) {\n    BigDecimal crt = new BigDecimal(b.toString());\n    BigDecimal two = BigDecimal.valueOf(2);\n    int scale = eps.scale() + 2;\n    Boolean isNegtive = false;\n    if (crt.compareTo(BigDecimal.valueOf(0)) < 0) {\n        b = b.negate();\n        crt = crt.negate();\n        isNegtive = true;\n    }\n    while (true) {\n        BigDecimal nxt = crt.subtract(crt.multiply(crt).subtract(b).divide(two.multiply(crt),\n            scale, BigDecimal.ROUND_DOWN));\n        // test\n        // System.out.println(nxt);\n        if (nxt.subtract(crt).abs().compareTo(eps) <= 0) {\n            crt = nxt;\n            break;\n        }\n        crt = nxt;\n    }\n    if (isNegtive) {\n        b = b.negate();\n        crt = crt.negate();\n    }\n    return crt;\n}\npublic static BigDecimal sqrt(BigDecimal b) {\n    BigDecimal eps = new BigDecimal(\"0.00000000000000000000000001\");\n    return sqrt(b, eps);\n}\npublic static BigDecimal sqrt(BigInteger b, BigDecimal eps) {\n    BigDecimal tmp = new BigDecimal(b.toString());\n    return sqrt(tmp, eps);\n}\npublic static BigDecimal sqrt(BigInteger b) {\n    BigDecimal tmp = new BigDecimal(b.toString());\n    return sqrt(tmp);\n}\n```\n\n### 快速求幂取模法\n\n```C++\n//计算(a*b)%c\nlong long mul(long long a,long long b,long long mod) {\n    long long res = 0;\n    while(b > 0){\n        if( (b&1) != 0)  // 二进制最低位是1 --> 加上 a的 2^i 倍, 快速幂是乘上a的2^i ）\n            res  = ( res + a) % mod;\n        a = (a << 1) % mod;    // a = a * 2    a随着b中二进制位数而扩大 每次 扩大两倍。\n        b >>= 1;               // b -> b/2     右移  去掉最后一位 因为当前最后一位我们用完了，\n    }\n    return res;\n}\n\n//幂取模函数\nlong long pow1(long long a,long long n,long long mod){\n    long long res = 1;\n    while(n > 0){\n        if(n&1)\n            res = (res * a)%mod;\n        a = (a * a)%mod;\n        n >>= 1;\n    }\n    return res;\n}\n\n\n// 计算 ret = (a^n)%mod\nlong long pow2(long long a,long long n,long long mod) {\n    long long res = 1;\n    while(n > 0) {\n        if(n & 1)\n            res = mul(res,a,mod);\n        a = mul(a,a,mod);\n        n >>= 1;\n    }\n    return res;\n}\n```\n\n### 矩阵乘法和快速幂\n\n```C++\nstruct matrix{\n    LL m[10][10];\n    matrix(){ memset(m,0,sizeof(m)); }\n};\nmatrix operator * (const matrix & a,const matrix & b){\n    matrix c;\n    for (int i=1; i<=9; i++)\n        for (int j=1; j<=9; j++){\n            c.m[i][j]=0;\n            for (int k=1; k<=9; k++)\n                c.m[i][j]=(c.m[i][j]+a.m[i][k]*b.m[k][j])%mod;//一般题目都要求要modulo一个数\n        }\n    return c;\n}\nmatrix quick(matrix base,int pow){\n    matrix a;\n    for (int i=1; i<=9; i++) a.m[i][i]=1;\n    while (pow)    {\n        if (pow&1) a=a*base;\n        base=base*base;\n        pow>>=1;\n    }\n    return a;\n}\n```\n\n## 组合数学\n\n### Contar康托展开\n\n由一个排列计算它是全排列中的第几个排列的方法。\n\n```C++\nint fac[15];\nvoid factor(){\n    fac[0] = fac[1] = 1;\n    for(int i = 2; i < 13; ++ i)\n        fac[i] = fac[i - 1] * i;\n}\n//逆康托\nstring uncantor(int x, int k) {\n    string res;\n    int i, j, l, t;\n    bool h[100];\n    for (i = 1; i <= k; i++) {\n        t = x / fac[k - i];\n        x -= t * fac[k - i];\n        for (j = 1, l = 0; l <= t; j++)\n            if ( !h[j] ) l++;\n        j --;\n        h[j] = true;\n        res += j + '0';\n    }\n    return res;\n}\n//康托\nint cantor(int* a, int len){\n    int ans = 0;\n    for(int i = 0; i < len; ++ i){\n        int t = 0;\n        for(int j = i + 1; j < len; ++j)\n            if(a[j] < a[i]) t ++;\n        ans += fac[len - i - 1] * t;\n    }\n    return ans + 1;\n}\n```\n\n### Catalan Number 卡特兰数\n\n$C_n = \\frac{4n - 2}{n + 1} C_{n-1}$\n\n相关问题\n\n1. Cn可以表示长度为2n的Dyck Words的种类数，Dyck Words由n个A字符与n个B字符组成，且满足在任意位置上，前缀中A的数量不小于B的数量，如果A用(代替，把B用)代替，就是一个典型的括号表达式，因此也可以用来表示合法的表达式个数。\n2. Cn可以表示有n个结点的不同构的二叉树的种类数。\n3. Cn可以表示有2n + 1个结点的不同构的满二叉树的种类数。\n4. Cn可以表示在n*n的格点中从左下角延格线走到右上角且始终不超过对角线的方案数。\n5. Cn可以表示通过连接顶点将n + 2个顶点的凸多边形划分成三角形的方案数。\n6. Cn表示有n个元素的出栈顺序的种类数。\n7. Cn可以用在买票找零钱问题上，对于2n的观众，收银台初始没有钱，无法找零，接下来有n个人拿a元买票，n个人拿2a元买票（需要找零钱数为a），能够保证每一个需要找零的观众来的时候都能够得到找零的合法方案数。\n8. Cn可以表示在二维直角坐标系中，从(0, 0)走到(2n, 0)点，每个相邻整数点的纵坐标差值的绝对值为1，且点始终不会落到x轴下方的方案数。\n\n## 高精度\n\n### 大数操作BigInteger\n\n```JAVA\nimport java.math.BigInteger;\nimport java.util.Scanner;\npublic class BI {\n    public static void main(String[] args) {\n        Scanner in = new Scanner (System.in);\n        BigInteger a, b;\n        a = in.nextBigInteger();\n        b = in.nextBigInteger();\n        System.out.println(a.add(b));\n        System.out.println(a.subtract(b));\n        System.out.println(a.multiply(b));\n        System.out.println(a.divide(b));\n        BigInteger mod = BigInteger.valueOf(3);\n        System.out.println(b.mod(mod));\n    }\n}\n```\n\n### 小数操作BigDecimal\n\n```JAVA\nimport java.math.BigDecimal;\nimport java.util.*;\npublic class BD {\n    public static void main(String[] args) {\n        BigDecimal a = new BigDecimal(10);\n        BigDecimal b = new BigDecimal(10.5);\n        BigDecimal c = new BigDecimal(123456789101222L);\n        BigDecimal d = new BigDecimal(\"-123456.31\");\n        System.out.println(a);\n        System.out.println(b);\n        System.out.println(c);\n        System.out.println(d);\n        System.out.println(a.add(b).add(c).add(d));\n        System.out.println(a.subtract(b).subtract(a));\n        System.out.println(a.multiply(b).multiply(c));\n        System.out.println(c.divide(a).divide(new BigDecimal(20)));\n        System.out.println(d.divide(a));\n        System.out.println(d.doubleValue());\n        System.out.println(a.compareTo(b));// -1\n        System.out.println(a.equals(b));// flase\n    }\n}\n```\n\n### 生成排列\n\nnext_permutation() 生成下一个排列\nprev_permutation() 生成上一个排列\n\n```C++\ndo{\n    cout << str << endl;\n// }while (next_permutation(str.begin(), str.end()));\n}while (prev_permutation(str.begin(), str.end()));\n```\n\n## Graph 图论\n\n### topu 拓扑排序\n\n```C++\nint in[maxn];//存入度数\nvector <int > edge[maxn]; //存边\n\nint topu_sort(){\n    queue<int>q;\n    for (int i = 1; i <= n; i++)\n        if (!in[i]) q.push(i); //取出入度为0的点放\n    while (!q.empty()){\n        int u = q.front(); q.pop();\n        for (int i = 0; i < edge[u].size(); i++){ //删边与统计操作\n            int v = edge[u][i];\n            in[v] --;  //删边\n            if ( ! in[v] ) q.push(v);\n        }\n        printf (\"%d \", u);\n    }\n    for (int i = 1; i <= n; i++) //若存在全部遍历完仍存在入度不为0的点说明存在环\n        if (in[i]) return -1;\n}\n```\n\n### Shortest Path 最短路\n\n#### Dijstra\n\n```C++\ntypedef pair<int, int> P;\nint pre[2501];   // 路径记录\nvoid Dijkstra( int s ){\n    priority_queue< P, vector<P>, greater<P> > q;\n    fill (d + 1, d + n + 1, INF);\n    d[s] = 0;\n    q.push(P(0, s));\n    while (q.size()){\n        P p = q.top(); q.pop();\n        int h = p.second;\n        if( d[h] < p.first ) continue;\n        for(int i = 0; i < v[h].size(); i ++){\n            edge e = v[h][i];\n            if( d[e.to] > d[h] + e.cost ){\n                d[e.to] = d[h] + e.cost;\n                q.push(P(d[e.to], e.to));\n                pre[e.to] = h;  // 记录前驱\n            }\n        }\n    }\n}\n```\n\n#### SPFA\n\n从起点到任意一个点最短距离经过的点最多只有 n 个，用 cnt[ i ] 表示从起点（假设就是 1）到 i 的最短距离包含点的个数，初始化 cnt[ 1 ] = 1，那么当我们能够用点 u 松弛点 v 时，当我们能够用点 u 松弛点 v 时，松弛时同时更新 cnt[ v ] = cnt[ u ] + 1，若发现此时 cnt[ v ] > n，那么就存在负环\n\n```C++\nbool SPFA( int s ){\n    queue<int > q;\n    fill(d + 1, d + n + 1, INF);\n    d[s] = 0;\n    q.push(s);\n    vis[s] = 1;\n    while ( q.size() ){\n        int t = q.front(); q.pop();\n        vis[t] = 1;\n        for(auto i = v[t].begin(); i != v[t].end(); i ++ ){\n            if( i -> cost + d[t] < d[i -> to] ){\n                d[i -> to] = i -> cost + d[t];\n                // cnt[ i -> to ] = 1 + cnt[t];\n                // if(cnt[i -> to] > n ) return false;\n                if( !vis[i -> to] )\n                    q.push(i -> to);\n            }\n        }\n    }\n    return true;\n}\n```\n\n### MST 最小生成树\n\n#### Kruskal\n\n```C++\nvoid init(){\n    for(int i = 1; i <= n; i ++)\n        p[i] = i;\n}\nint find( int x ){\n    return x == p[x] ? x : p[x] = find(p[x]);\n}\nll Kruskal(){\n    ll res = 0;\n    sort(E, E + m, cmp);\n    init();\n    int cnt = 0;\n        for (int i = 0; i < m; i ++ ){\n        edge e = E[i];\n        int x = find(e.from);\n        int y = find(e.to);\n        if( x != y ){\n            p[x] = p[y];\n            cnt ++;\n            res += (ll) e.cost;\n        }\n        if( cnt == n - 1 ) break;\n    }\n    return res;\n}\n```\n\n#### Prim\n\n```C++\nll Prim(){\n    fill (cost + 1, cost + n + 1, INF);\n    cost[1] = 0;\n    priority_queue <P, vector<P>, greater<P> > q;\n    q.push(P(0, 1));\n    ll res = 0;\n    while ( q.size() && cnt < n ){\n        P p = q.top(); q.pop();\n        int v = p.second;\n        if( !vis[v] ){\n            cnt ++;\n            vis[v] = 1;\n            res += p.first;\n            for(int i = 0; i < E[v].size(); i ++){\n                edge e = E[v][i];\n                if( cost[e.to] > e.cost ){\n                    cost[e.to] = e.cost;\n                    q.push(P(cost[e.to], e.to));\n                }\n            }\n        }\n    }\n    return res;\n}\n```\n\n#### 最大流\n\n```C++\ntypedef struct node{\n    int to, cap, rev;\n}edge;\n\nbool vis[101];\nvector <edge > G[101];\nint dfs(int v, int t, int f){\n    if(v == t) return f;\n    vis[v] = 1;\n    for(int i = 0; i < G[v].size(); i ++){\n        edge e = G[v][i];\n        if( !vis[e.to] && e.cap > 0 ){\n            int d = dfs(e.to, t, min(f, e.cap));\n            if( d > 0 ){\n                e.cap -= d;\n                G[e.to][e.rev].cap += d;\n                return d;\n            }\n        }\n    }\n}\n\nint max_flow(int s, int t){\n    int flow = 0;\n    while(true){\n        memset(vis, 0, sizeof(vis));\n        int f = dfs(s, t, INF);\n        if( !f ) return flow;\n        flow += f;\n    }\n}\n\nint main(){\n    int n, m;\n    cin >> n >> m;\n    int from, to, s = 0, t = n + m + 1;\n    for(int i = 1; i <= m; i ++{\n        G[s].push_back({i, 1, G[i].size()});\n        G[i].push_back({s, 0, G[s].size() - 1});\n    }\n    for(int j = m + 1; j <= n + m; j ++){\n        G[j].push_back({t, 1, G[t].size()});\n        G[t].push_back({j, 0, G[j].size() - 1});\n    }\n    while ( scanf(\"%d%d\", &from, &to), from != -1){\n        G[to].push_back({from, 1, G[from].size()});\n        G[from].push_back({to, 0, G[to].size() - 1});\n    }\n    cout << max_flow(s, t) << endl;\n    return 0;\n}\n```\n\n### 欧拉路和欧拉回路\n\n有向图\n\n```C++\ninline void dfs(int x, int lst) {\n    register int &i=lnk[x];\n    for(;i;i=e[i].nxt){\n        if(vis[i]) continue;\n        vis[i]=1,dfs(e[i].to,i);\n    }\n    if(lst) res[++res_]=lst;\n}\n```\n\n无向图\n\n```C++\ninline void dfs(int x,int lst) {\n    register int &i=lnk[x];\n    for(;i;i=e[i].nxt){\n        if(vis[i+1>>1]) continue;\n        vis[i+1>>1]=1,dfs(e[i].to,i&1?(i+1>>1):-(i+1>>1));\n    }\n    if(lst) res[++res_]=lst;\n}\n```\n\n## Dynamic Programming 动态规划\n\n### LIS 最长上升子序列\n\n```C++\nvoid solve(){\n    memset(dp, 0, sizeof(dp));\n    int res = 0;\n    for(int i = 0; i < n; i ++){\n        dp[i] = 1;\n        for(int j = 0; j < i; j ++)\n            if( a[j] < a[i] )\n                dp[i] = max (dp[i], dp[j] + 1);\n        res = max (res, dp[i]);\n    }\n    printf(\"%d\", res);\n}\n```\n\n### 数划分\n\n```C++\n1.问题描述：\n    给定一个正整数N和K\n\n    1. 将n划分成若干正整数之和的划分数。\n    2. 将n划分成k个正整数之和的划分数。\n    3. 将n划分成最大数不超过k的划分数。\n    4. 将n划分成若干奇正整数之和的划分数。\n    5. 将n划分成若干不同整数之和的划分数。\n\n2.问题分类：总的来说这些都是背包问题；\n\n第一个问：就是一个完全背包，物品有 1 --- N 种，第 i 种物品的重量为 i ，价值为 i\n\n        dp[0] = 1;\n        for (i = 1;i <= N;i++)\n            for (j = i;j <= N;j++)\n                dp[j] += dp[j-i];\n\n其中 dp[j] 是用前 i 个数能构成 j 的种类数，则结果就为 dp[N]\n\n看完这个问题了，那么 第3个问就知道了 ， 即用前 K 种物品所得结果，\n只需把第一层循环的 i <= N 改为 i <= K 即可；\n\n        dp[0] = 1;\n        for (i = 1;i <= K;i++)\n            for (j = i;j <= N;j++)\n                dp[j] += dp[j-i];   结果同样为 dp[N] ;\n\n那么第四个问呢，想想是奇数，那么 i = 2，4，6，…… 等等值就不能取了，\n因为这些物品不合要求，这很简单啊  i++ 改为 i += 2 不就行了；\n\n        dp[0] = 1;\n        for (i = 1;i <= N;i+=2)\n            for (j = i;j <= N;j++)\n                dp[j] += dp[j-i];   结果同样为 dp[N] ;\n\n再看看第五个问，若干个不同的就是一种物品最多只能用一次\n这是经典的 01背包 啊，与第一个问的不同就是第二层循环的顺序而已；\n\n        dp[0] = 1;\n        for (i = 1;i <= N;i++)\n            for (j = n;j >= i ;j--)\n                dp[j] += dp[j-i];\n\n最后我们来思考第二个问：\n\n   要求只要 K 个，这怎么办呢？？？想想特殊情况…… 如果 K = 1 呢，只能是 N 咯\n   若果 N = 0 呢， 结果只能是 0 中可能啊，那同样N < K 的话，不可能分啊 结果为 0\n   那么我们再考虑，分的结果中有没有 1 ，如果有那么就把剩下的 N - 1 分成 K - 1 份\n   如果没有，那么我们先拿出 K 份给每一堆一个1，再把剩下的 N - K 分成 K 份就行了\n\n        int work(int n,int k){\n            if (k == 1) return 1;\n            if (n == 0) return 0;\n            if (n < k) return 0;\n            return work(n-k,k) + work(n-1,k-1);\n        }\n```\n\n","source":"_posts/ACM_Template.md","raw":"---\ntitle: Template\ndate: 2018-03-31 20:17:43\ntags: \n    - 模板\ntop: true\ncategories: C/C++\ndescription: ICPC模板\n---\n\n<!-- # Template -->\n\n## number theory(数论)\n\n### 扩展欧几里得相关\n\n``` C++\n// ax + by = gcd(a, b)\nLL exgcd(LL a, LL b, LL &x, LL &y) {\n    if (!b) {\n        x = 1, y = 0;\n        return a;\n    }\n    else{\n        LL d = exgcd(b, a % b, y, x);\n        y -= x * (a / b);\n        return d;\n    }\n}\n\n// ax + by = c\nbool linear_equation(LL a, LL b, LL c, LL &x, LL &y){\n    LL d = exgcd (a, b, x, y);\n    if( c % d )\n        return false;\n    LL k = c / d;\n    x *= k; y *= k;\n    return true;\n    // 其他解为 x + b / d * t; y - a / d * t; t为任意整数\n}\n\n// ax ≡ b (mod n)\nbool modular_linear_equation(LL a, LL b, LL n, LL &x, LL &y){\n    LL x0, i;\n    LL d = exgcd(a, n, x, y);\n    if( b % d ) return false;\n    x0 = x * ( b / d ) % n;\n    for(i = 1; i <= d; i ++)\n        printf(\"%d\\n\", ( x0 + i * ( n / d ) ) % n );\n    return true;\n}\n\n// inverse\nint inverse(LL a, LL m, LL x, LL y){\n    LL d = exgcd(a, m, x, y);\n    return (x + m) % m;\n}\n```\n\n### 勾股数组\n\n取n $\\lt$ m且满足(n & 1) ^ (m & 1)为1（这里的^为异或，此表达式说明二者奇偶不同），同时gcd(n, m) = 1（即二者互素），则可得到满足 $a^2 + b^2 = c^2$ 的勾股数组：\n\n$ a = m^2 - n^2 $\n$ b = 2 * n * m $\n$ c = m^2 + n^2 $\n\n按照顺序枚举满足上述条件（奇偶不同的互素n $\\lt$ m二元组（n, m）），就可以得到所有的本源勾股数组，同时它们的整数倍也是勾股数组。这个方法可以取得所有的勾股数组。\n\n### 欧拉线性筛\n\n欧拉线性筛求判断素数和求最小质因子\n\n```C++\n// MinFactor[i] = x 表示为i最小质因子为 x\n// p[i] = x 表示为第 i+1 个素数为x\n// MinFactor 只求素数可换为 bool 类型判断 not_prime\nvoid euler(){\n    int t = 0;\n    pos = 0;\n    for(int i = 2; i < LIM; i ++){\n        if ( !MinFactor[i] ) p[pos ++] = MinFactor[i] =  i;\n        for(int j = 0; (t = i * p[j]) < LIM; j ++){\n            MinFactor[t] = p[j];\n            if( !(i % p[j]) ) break;\n        }\n    }\n}\n```\n\n### 欧拉函数\n\nphi(i) 意义： 小于 i 且与 i 互质的正整数的个数\n\n1. 打表时间复杂度 O(n)\n\n    ```C++\n    void init_phi(){\n        int t;\n        phi[1] = 1;\n        for(int i = 2; i < LIM; i ++){\n            if( !phi[i] ){\n                phi[i] = i - 1;\n                p[cnt ++] = i;\n            }\n            for(int j = 0; (t = i * p[j]) < LIM; j ++){\n                if( i % p[j] ) phi[t] = phi[i] * (p[j] - 1);\n                else {\n                    phi[t] = phi[i] * p[j];\n                    break;\n                }\n            }\n        }\n    }\n    ```\n\n2. 单个时间复杂度为 O($\\sqrt{n}$)\n\n    ```C++\n    LL phi(LL n) {  \n        LL ret = 1;\n        for (LL i = 2; i * i <= n; i++) {\n            if (!(n % i)) {\n                ret *= i - 1;\n                n /= i;\n                while (!(n % i))\n                    ret *= i, n /= i;\n            }\n        }\n        if (n ^ 1) ret *= (n - 1);\n        return ret;\n    }\n    ```\n\n## Numberical Methods(数值方法)\n\n### 高精度平方根\n\n牛顿逼近法\n\n```java\npublic static BigDecimal sqrt(BigDecimal b, BigDecimal eps) {\n    BigDecimal crt = new BigDecimal(b.toString());\n    BigDecimal two = BigDecimal.valueOf(2);\n    int scale = eps.scale() + 2;\n    Boolean isNegtive = false;\n    if (crt.compareTo(BigDecimal.valueOf(0)) < 0) {\n        b = b.negate();\n        crt = crt.negate();\n        isNegtive = true;\n    }\n    while (true) {\n        BigDecimal nxt = crt.subtract(crt.multiply(crt).subtract(b).divide(two.multiply(crt),\n            scale, BigDecimal.ROUND_DOWN));\n        // test\n        // System.out.println(nxt);\n        if (nxt.subtract(crt).abs().compareTo(eps) <= 0) {\n            crt = nxt;\n            break;\n        }\n        crt = nxt;\n    }\n    if (isNegtive) {\n        b = b.negate();\n        crt = crt.negate();\n    }\n    return crt;\n}\npublic static BigDecimal sqrt(BigDecimal b) {\n    BigDecimal eps = new BigDecimal(\"0.00000000000000000000000001\");\n    return sqrt(b, eps);\n}\npublic static BigDecimal sqrt(BigInteger b, BigDecimal eps) {\n    BigDecimal tmp = new BigDecimal(b.toString());\n    return sqrt(tmp, eps);\n}\npublic static BigDecimal sqrt(BigInteger b) {\n    BigDecimal tmp = new BigDecimal(b.toString());\n    return sqrt(tmp);\n}\n```\n\n### 快速求幂取模法\n\n```C++\n//计算(a*b)%c\nlong long mul(long long a,long long b,long long mod) {\n    long long res = 0;\n    while(b > 0){\n        if( (b&1) != 0)  // 二进制最低位是1 --> 加上 a的 2^i 倍, 快速幂是乘上a的2^i ）\n            res  = ( res + a) % mod;\n        a = (a << 1) % mod;    // a = a * 2    a随着b中二进制位数而扩大 每次 扩大两倍。\n        b >>= 1;               // b -> b/2     右移  去掉最后一位 因为当前最后一位我们用完了，\n    }\n    return res;\n}\n\n//幂取模函数\nlong long pow1(long long a,long long n,long long mod){\n    long long res = 1;\n    while(n > 0){\n        if(n&1)\n            res = (res * a)%mod;\n        a = (a * a)%mod;\n        n >>= 1;\n    }\n    return res;\n}\n\n\n// 计算 ret = (a^n)%mod\nlong long pow2(long long a,long long n,long long mod) {\n    long long res = 1;\n    while(n > 0) {\n        if(n & 1)\n            res = mul(res,a,mod);\n        a = mul(a,a,mod);\n        n >>= 1;\n    }\n    return res;\n}\n```\n\n### 矩阵乘法和快速幂\n\n```C++\nstruct matrix{\n    LL m[10][10];\n    matrix(){ memset(m,0,sizeof(m)); }\n};\nmatrix operator * (const matrix & a,const matrix & b){\n    matrix c;\n    for (int i=1; i<=9; i++)\n        for (int j=1; j<=9; j++){\n            c.m[i][j]=0;\n            for (int k=1; k<=9; k++)\n                c.m[i][j]=(c.m[i][j]+a.m[i][k]*b.m[k][j])%mod;//一般题目都要求要modulo一个数\n        }\n    return c;\n}\nmatrix quick(matrix base,int pow){\n    matrix a;\n    for (int i=1; i<=9; i++) a.m[i][i]=1;\n    while (pow)    {\n        if (pow&1) a=a*base;\n        base=base*base;\n        pow>>=1;\n    }\n    return a;\n}\n```\n\n## 组合数学\n\n### Contar康托展开\n\n由一个排列计算它是全排列中的第几个排列的方法。\n\n```C++\nint fac[15];\nvoid factor(){\n    fac[0] = fac[1] = 1;\n    for(int i = 2; i < 13; ++ i)\n        fac[i] = fac[i - 1] * i;\n}\n//逆康托\nstring uncantor(int x, int k) {\n    string res;\n    int i, j, l, t;\n    bool h[100];\n    for (i = 1; i <= k; i++) {\n        t = x / fac[k - i];\n        x -= t * fac[k - i];\n        for (j = 1, l = 0; l <= t; j++)\n            if ( !h[j] ) l++;\n        j --;\n        h[j] = true;\n        res += j + '0';\n    }\n    return res;\n}\n//康托\nint cantor(int* a, int len){\n    int ans = 0;\n    for(int i = 0; i < len; ++ i){\n        int t = 0;\n        for(int j = i + 1; j < len; ++j)\n            if(a[j] < a[i]) t ++;\n        ans += fac[len - i - 1] * t;\n    }\n    return ans + 1;\n}\n```\n\n### Catalan Number 卡特兰数\n\n$C_n = \\frac{4n - 2}{n + 1} C_{n-1}$\n\n相关问题\n\n1. Cn可以表示长度为2n的Dyck Words的种类数，Dyck Words由n个A字符与n个B字符组成，且满足在任意位置上，前缀中A的数量不小于B的数量，如果A用(代替，把B用)代替，就是一个典型的括号表达式，因此也可以用来表示合法的表达式个数。\n2. Cn可以表示有n个结点的不同构的二叉树的种类数。\n3. Cn可以表示有2n + 1个结点的不同构的满二叉树的种类数。\n4. Cn可以表示在n*n的格点中从左下角延格线走到右上角且始终不超过对角线的方案数。\n5. Cn可以表示通过连接顶点将n + 2个顶点的凸多边形划分成三角形的方案数。\n6. Cn表示有n个元素的出栈顺序的种类数。\n7. Cn可以用在买票找零钱问题上，对于2n的观众，收银台初始没有钱，无法找零，接下来有n个人拿a元买票，n个人拿2a元买票（需要找零钱数为a），能够保证每一个需要找零的观众来的时候都能够得到找零的合法方案数。\n8. Cn可以表示在二维直角坐标系中，从(0, 0)走到(2n, 0)点，每个相邻整数点的纵坐标差值的绝对值为1，且点始终不会落到x轴下方的方案数。\n\n## 高精度\n\n### 大数操作BigInteger\n\n```JAVA\nimport java.math.BigInteger;\nimport java.util.Scanner;\npublic class BI {\n    public static void main(String[] args) {\n        Scanner in = new Scanner (System.in);\n        BigInteger a, b;\n        a = in.nextBigInteger();\n        b = in.nextBigInteger();\n        System.out.println(a.add(b));\n        System.out.println(a.subtract(b));\n        System.out.println(a.multiply(b));\n        System.out.println(a.divide(b));\n        BigInteger mod = BigInteger.valueOf(3);\n        System.out.println(b.mod(mod));\n    }\n}\n```\n\n### 小数操作BigDecimal\n\n```JAVA\nimport java.math.BigDecimal;\nimport java.util.*;\npublic class BD {\n    public static void main(String[] args) {\n        BigDecimal a = new BigDecimal(10);\n        BigDecimal b = new BigDecimal(10.5);\n        BigDecimal c = new BigDecimal(123456789101222L);\n        BigDecimal d = new BigDecimal(\"-123456.31\");\n        System.out.println(a);\n        System.out.println(b);\n        System.out.println(c);\n        System.out.println(d);\n        System.out.println(a.add(b).add(c).add(d));\n        System.out.println(a.subtract(b).subtract(a));\n        System.out.println(a.multiply(b).multiply(c));\n        System.out.println(c.divide(a).divide(new BigDecimal(20)));\n        System.out.println(d.divide(a));\n        System.out.println(d.doubleValue());\n        System.out.println(a.compareTo(b));// -1\n        System.out.println(a.equals(b));// flase\n    }\n}\n```\n\n### 生成排列\n\nnext_permutation() 生成下一个排列\nprev_permutation() 生成上一个排列\n\n```C++\ndo{\n    cout << str << endl;\n// }while (next_permutation(str.begin(), str.end()));\n}while (prev_permutation(str.begin(), str.end()));\n```\n\n## Graph 图论\n\n### topu 拓扑排序\n\n```C++\nint in[maxn];//存入度数\nvector <int > edge[maxn]; //存边\n\nint topu_sort(){\n    queue<int>q;\n    for (int i = 1; i <= n; i++)\n        if (!in[i]) q.push(i); //取出入度为0的点放\n    while (!q.empty()){\n        int u = q.front(); q.pop();\n        for (int i = 0; i < edge[u].size(); i++){ //删边与统计操作\n            int v = edge[u][i];\n            in[v] --;  //删边\n            if ( ! in[v] ) q.push(v);\n        }\n        printf (\"%d \", u);\n    }\n    for (int i = 1; i <= n; i++) //若存在全部遍历完仍存在入度不为0的点说明存在环\n        if (in[i]) return -1;\n}\n```\n\n### Shortest Path 最短路\n\n#### Dijstra\n\n```C++\ntypedef pair<int, int> P;\nint pre[2501];   // 路径记录\nvoid Dijkstra( int s ){\n    priority_queue< P, vector<P>, greater<P> > q;\n    fill (d + 1, d + n + 1, INF);\n    d[s] = 0;\n    q.push(P(0, s));\n    while (q.size()){\n        P p = q.top(); q.pop();\n        int h = p.second;\n        if( d[h] < p.first ) continue;\n        for(int i = 0; i < v[h].size(); i ++){\n            edge e = v[h][i];\n            if( d[e.to] > d[h] + e.cost ){\n                d[e.to] = d[h] + e.cost;\n                q.push(P(d[e.to], e.to));\n                pre[e.to] = h;  // 记录前驱\n            }\n        }\n    }\n}\n```\n\n#### SPFA\n\n从起点到任意一个点最短距离经过的点最多只有 n 个，用 cnt[ i ] 表示从起点（假设就是 1）到 i 的最短距离包含点的个数，初始化 cnt[ 1 ] = 1，那么当我们能够用点 u 松弛点 v 时，当我们能够用点 u 松弛点 v 时，松弛时同时更新 cnt[ v ] = cnt[ u ] + 1，若发现此时 cnt[ v ] > n，那么就存在负环\n\n```C++\nbool SPFA( int s ){\n    queue<int > q;\n    fill(d + 1, d + n + 1, INF);\n    d[s] = 0;\n    q.push(s);\n    vis[s] = 1;\n    while ( q.size() ){\n        int t = q.front(); q.pop();\n        vis[t] = 1;\n        for(auto i = v[t].begin(); i != v[t].end(); i ++ ){\n            if( i -> cost + d[t] < d[i -> to] ){\n                d[i -> to] = i -> cost + d[t];\n                // cnt[ i -> to ] = 1 + cnt[t];\n                // if(cnt[i -> to] > n ) return false;\n                if( !vis[i -> to] )\n                    q.push(i -> to);\n            }\n        }\n    }\n    return true;\n}\n```\n\n### MST 最小生成树\n\n#### Kruskal\n\n```C++\nvoid init(){\n    for(int i = 1; i <= n; i ++)\n        p[i] = i;\n}\nint find( int x ){\n    return x == p[x] ? x : p[x] = find(p[x]);\n}\nll Kruskal(){\n    ll res = 0;\n    sort(E, E + m, cmp);\n    init();\n    int cnt = 0;\n        for (int i = 0; i < m; i ++ ){\n        edge e = E[i];\n        int x = find(e.from);\n        int y = find(e.to);\n        if( x != y ){\n            p[x] = p[y];\n            cnt ++;\n            res += (ll) e.cost;\n        }\n        if( cnt == n - 1 ) break;\n    }\n    return res;\n}\n```\n\n#### Prim\n\n```C++\nll Prim(){\n    fill (cost + 1, cost + n + 1, INF);\n    cost[1] = 0;\n    priority_queue <P, vector<P>, greater<P> > q;\n    q.push(P(0, 1));\n    ll res = 0;\n    while ( q.size() && cnt < n ){\n        P p = q.top(); q.pop();\n        int v = p.second;\n        if( !vis[v] ){\n            cnt ++;\n            vis[v] = 1;\n            res += p.first;\n            for(int i = 0; i < E[v].size(); i ++){\n                edge e = E[v][i];\n                if( cost[e.to] > e.cost ){\n                    cost[e.to] = e.cost;\n                    q.push(P(cost[e.to], e.to));\n                }\n            }\n        }\n    }\n    return res;\n}\n```\n\n#### 最大流\n\n```C++\ntypedef struct node{\n    int to, cap, rev;\n}edge;\n\nbool vis[101];\nvector <edge > G[101];\nint dfs(int v, int t, int f){\n    if(v == t) return f;\n    vis[v] = 1;\n    for(int i = 0; i < G[v].size(); i ++){\n        edge e = G[v][i];\n        if( !vis[e.to] && e.cap > 0 ){\n            int d = dfs(e.to, t, min(f, e.cap));\n            if( d > 0 ){\n                e.cap -= d;\n                G[e.to][e.rev].cap += d;\n                return d;\n            }\n        }\n    }\n}\n\nint max_flow(int s, int t){\n    int flow = 0;\n    while(true){\n        memset(vis, 0, sizeof(vis));\n        int f = dfs(s, t, INF);\n        if( !f ) return flow;\n        flow += f;\n    }\n}\n\nint main(){\n    int n, m;\n    cin >> n >> m;\n    int from, to, s = 0, t = n + m + 1;\n    for(int i = 1; i <= m; i ++{\n        G[s].push_back({i, 1, G[i].size()});\n        G[i].push_back({s, 0, G[s].size() - 1});\n    }\n    for(int j = m + 1; j <= n + m; j ++){\n        G[j].push_back({t, 1, G[t].size()});\n        G[t].push_back({j, 0, G[j].size() - 1});\n    }\n    while ( scanf(\"%d%d\", &from, &to), from != -1){\n        G[to].push_back({from, 1, G[from].size()});\n        G[from].push_back({to, 0, G[to].size() - 1});\n    }\n    cout << max_flow(s, t) << endl;\n    return 0;\n}\n```\n\n### 欧拉路和欧拉回路\n\n有向图\n\n```C++\ninline void dfs(int x, int lst) {\n    register int &i=lnk[x];\n    for(;i;i=e[i].nxt){\n        if(vis[i]) continue;\n        vis[i]=1,dfs(e[i].to,i);\n    }\n    if(lst) res[++res_]=lst;\n}\n```\n\n无向图\n\n```C++\ninline void dfs(int x,int lst) {\n    register int &i=lnk[x];\n    for(;i;i=e[i].nxt){\n        if(vis[i+1>>1]) continue;\n        vis[i+1>>1]=1,dfs(e[i].to,i&1?(i+1>>1):-(i+1>>1));\n    }\n    if(lst) res[++res_]=lst;\n}\n```\n\n## Dynamic Programming 动态规划\n\n### LIS 最长上升子序列\n\n```C++\nvoid solve(){\n    memset(dp, 0, sizeof(dp));\n    int res = 0;\n    for(int i = 0; i < n; i ++){\n        dp[i] = 1;\n        for(int j = 0; j < i; j ++)\n            if( a[j] < a[i] )\n                dp[i] = max (dp[i], dp[j] + 1);\n        res = max (res, dp[i]);\n    }\n    printf(\"%d\", res);\n}\n```\n\n### 数划分\n\n```C++\n1.问题描述：\n    给定一个正整数N和K\n\n    1. 将n划分成若干正整数之和的划分数。\n    2. 将n划分成k个正整数之和的划分数。\n    3. 将n划分成最大数不超过k的划分数。\n    4. 将n划分成若干奇正整数之和的划分数。\n    5. 将n划分成若干不同整数之和的划分数。\n\n2.问题分类：总的来说这些都是背包问题；\n\n第一个问：就是一个完全背包，物品有 1 --- N 种，第 i 种物品的重量为 i ，价值为 i\n\n        dp[0] = 1;\n        for (i = 1;i <= N;i++)\n            for (j = i;j <= N;j++)\n                dp[j] += dp[j-i];\n\n其中 dp[j] 是用前 i 个数能构成 j 的种类数，则结果就为 dp[N]\n\n看完这个问题了，那么 第3个问就知道了 ， 即用前 K 种物品所得结果，\n只需把第一层循环的 i <= N 改为 i <= K 即可；\n\n        dp[0] = 1;\n        for (i = 1;i <= K;i++)\n            for (j = i;j <= N;j++)\n                dp[j] += dp[j-i];   结果同样为 dp[N] ;\n\n那么第四个问呢，想想是奇数，那么 i = 2，4，6，…… 等等值就不能取了，\n因为这些物品不合要求，这很简单啊  i++ 改为 i += 2 不就行了；\n\n        dp[0] = 1;\n        for (i = 1;i <= N;i+=2)\n            for (j = i;j <= N;j++)\n                dp[j] += dp[j-i];   结果同样为 dp[N] ;\n\n再看看第五个问，若干个不同的就是一种物品最多只能用一次\n这是经典的 01背包 啊，与第一个问的不同就是第二层循环的顺序而已；\n\n        dp[0] = 1;\n        for (i = 1;i <= N;i++)\n            for (j = n;j >= i ;j--)\n                dp[j] += dp[j-i];\n\n最后我们来思考第二个问：\n\n   要求只要 K 个，这怎么办呢？？？想想特殊情况…… 如果 K = 1 呢，只能是 N 咯\n   若果 N = 0 呢， 结果只能是 0 中可能啊，那同样N < K 的话，不可能分啊 结果为 0\n   那么我们再考虑，分的结果中有没有 1 ，如果有那么就把剩下的 N - 1 分成 K - 1 份\n   如果没有，那么我们先拿出 K 份给每一堆一个1，再把剩下的 N - K 分成 K 份就行了\n\n        int work(int n,int k){\n            if (k == 1) return 1;\n            if (n == 0) return 0;\n            if (n < k) return 0;\n            return work(n-k,k) + work(n-1,k-1);\n        }\n```\n\n","slug":"ACM_Template","published":1,"updated":"2019-09-22T09:29:11.091Z","_id":"ck0urb6n60006dxs1w5xx66di","comments":1,"layout":"post","photos":[],"link":"","content":"<!-- # Template -->\n<h2 id=\"number-theory-数论\"><a href=\"#number-theory-数论\" class=\"headerlink\" title=\"number theory(数论)\"></a>number theory(数论)</h2><h3 id=\"扩展欧几里得相关\"><a href=\"#扩展欧几里得相关\" class=\"headerlink\" title=\"扩展欧几里得相关\"></a>扩展欧几里得相关</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ax + by = gcd(a, b)</span></span><br><span class=\"line\"><span class=\"function\">LL <span class=\"title\">exgcd</span><span class=\"params\">(LL a, LL b, LL &amp;x, LL &amp;y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!b) &#123;</span><br><span class=\"line\">        x = <span class=\"number\">1</span>, y = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        LL d = exgcd(b, a % b, y, x);</span><br><span class=\"line\">        y -= x * (a / b);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> d;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ax + by = c</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">linear_equation</span><span class=\"params\">(LL a, LL b, LL c, LL &amp;x, LL &amp;y)</span></span>&#123;</span><br><span class=\"line\">    LL d = exgcd (a, b, x, y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( c % d )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    LL k = c / d;</span><br><span class=\"line\">    x *= k; y *= k;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 其他解为 x + b / d * t; y - a / d * t; t为任意整数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ax ≡ b (mod n)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">modular_linear_equation</span><span class=\"params\">(LL a, LL b, LL n, LL &amp;x, LL &amp;y)</span></span>&#123;</span><br><span class=\"line\">    LL x0, i;</span><br><span class=\"line\">    LL d = exgcd(a, n, x, y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( b % d ) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    x0 = x * ( b / d ) % n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">1</span>; i &lt;= d; i ++)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, ( x0 + i * ( n / d ) ) % n );</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// inverse</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">inverse</span><span class=\"params\">(LL a, LL m, LL x, LL y)</span></span>&#123;</span><br><span class=\"line\">    LL d = exgcd(a, m, x, y);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x + m) % m;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"勾股数组\"><a href=\"#勾股数组\" class=\"headerlink\" title=\"勾股数组\"></a>勾股数组</h3><p>取n $\\lt$ m且满足(n &amp; 1) ^ (m &amp; 1)为1（这里的^为异或，此表达式说明二者奇偶不同），同时gcd(n, m) = 1（即二者互素），则可得到满足 $a^2 + b^2 = c^2$ 的勾股数组：</p>\n<p>$ a = m^2 - n^2 $<br>$ b = 2 <em> n </em> m $<br>$ c = m^2 + n^2 $</p>\n<p>按照顺序枚举满足上述条件（奇偶不同的互素n $\\lt$ m二元组（n, m）），就可以得到所有的本源勾股数组，同时它们的整数倍也是勾股数组。这个方法可以取得所有的勾股数组。</p>\n<h3 id=\"欧拉线性筛\"><a href=\"#欧拉线性筛\" class=\"headerlink\" title=\"欧拉线性筛\"></a>欧拉线性筛</h3><p>欧拉线性筛求判断素数和求最小质因子</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// MinFactor[i] = x 表示为i最小质因子为 x</span></span><br><span class=\"line\"><span class=\"comment\">// p[i] = x 表示为第 i+1 个素数为x</span></span><br><span class=\"line\"><span class=\"comment\">// MinFactor 只求素数可换为 bool 类型判断 not_prime</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">euler</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    pos = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; LIM; i ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !MinFactor[i] ) p[pos ++] = MinFactor[i] =  i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; (t = i * p[j]) &lt; LIM; j ++)&#123;</span><br><span class=\"line\">            MinFactor[t] = p[j];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( !(i % p[j]) ) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"欧拉函数\"><a href=\"#欧拉函数\" class=\"headerlink\" title=\"欧拉函数\"></a>欧拉函数</h3><p>phi(i) 意义： 小于 i 且与 i 互质的正整数的个数</p>\n<ol>\n<li><p>打表时间复杂度 O(n)</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init_phi</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    phi[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; LIM; i ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !phi[i] )&#123;</span><br><span class=\"line\">            phi[i] = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">            p[cnt ++] = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; (t = i * p[j]) &lt; LIM; j ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( i % p[j] ) phi[t] = phi[i] * (p[j] - <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                phi[t] = phi[i] * p[j];</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>单个时间复杂度为 O($\\sqrt{n}$)</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">LL <span class=\"title\">phi</span><span class=\"params\">(LL n)</span> </span>&#123;  </span><br><span class=\"line\">    LL ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (LL i = <span class=\"number\">2</span>; i * i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!(n % i)) &#123;</span><br><span class=\"line\">            ret *= i - <span class=\"number\">1</span>;</span><br><span class=\"line\">            n /= i;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (!(n % i))</span><br><span class=\"line\">                ret *= i, n /= i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n ^ <span class=\"number\">1</span>) ret *= (n - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Numberical-Methods-数值方法\"><a href=\"#Numberical-Methods-数值方法\" class=\"headerlink\" title=\"Numberical Methods(数值方法)\"></a>Numberical Methods(数值方法)</h2><h3 id=\"高精度平方根\"><a href=\"#高精度平方根\" class=\"headerlink\" title=\"高精度平方根\"></a>高精度平方根</h3><p>牛顿逼近法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigDecimal <span class=\"title\">sqrt</span><span class=\"params\">(BigDecimal b, BigDecimal eps)</span> </span>&#123;</span><br><span class=\"line\">    BigDecimal crt = <span class=\"keyword\">new</span> BigDecimal(b.toString());</span><br><span class=\"line\">    BigDecimal two = BigDecimal.valueOf(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> scale = eps.scale() + <span class=\"number\">2</span>;</span><br><span class=\"line\">    Boolean isNegtive = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (crt.compareTo(BigDecimal.valueOf(<span class=\"number\">0</span>)) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        b = b.negate();</span><br><span class=\"line\">        crt = crt.negate();</span><br><span class=\"line\">        isNegtive = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">        BigDecimal nxt = crt.subtract(crt.multiply(crt).subtract(b).divide(two.multiply(crt),</span><br><span class=\"line\">            scale, BigDecimal.ROUND_DOWN));</span><br><span class=\"line\">        <span class=\"comment\">// test</span></span><br><span class=\"line\">        <span class=\"comment\">// System.out.println(nxt);</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nxt.subtract(crt).abs().compareTo(eps) &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            crt = nxt;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        crt = nxt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isNegtive) &#123;</span><br><span class=\"line\">        b = b.negate();</span><br><span class=\"line\">        crt = crt.negate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> crt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigDecimal <span class=\"title\">sqrt</span><span class=\"params\">(BigDecimal b)</span> </span>&#123;</span><br><span class=\"line\">    BigDecimal eps = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"0.00000000000000000000000001\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sqrt(b, eps);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigDecimal <span class=\"title\">sqrt</span><span class=\"params\">(BigInteger b, BigDecimal eps)</span> </span>&#123;</span><br><span class=\"line\">    BigDecimal tmp = <span class=\"keyword\">new</span> BigDecimal(b.toString());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sqrt(tmp, eps);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigDecimal <span class=\"title\">sqrt</span><span class=\"params\">(BigInteger b)</span> </span>&#123;</span><br><span class=\"line\">    BigDecimal tmp = <span class=\"keyword\">new</span> BigDecimal(b.toString());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sqrt(tmp);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"快速求幂取模法\"><a href=\"#快速求幂取模法\" class=\"headerlink\" title=\"快速求幂取模法\"></a>快速求幂取模法</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//计算(a*b)%c</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(b &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( (b&amp;<span class=\"number\">1</span>) != <span class=\"number\">0</span>)  <span class=\"comment\">// 二进制最低位是1 --&gt; 加上 a的 2^i 倍, 快速幂是乘上a的2^i ）</span></span><br><span class=\"line\">            res  = ( res + a) % mod;</span><br><span class=\"line\">        a = (a &lt;&lt; <span class=\"number\">1</span>) % mod;    <span class=\"comment\">// a = a * 2    a随着b中二进制位数而扩大 每次 扩大两倍。</span></span><br><span class=\"line\">        b &gt;&gt;= <span class=\"number\">1</span>;               <span class=\"comment\">// b -&gt; b/2     右移  去掉最后一位 因为当前最后一位我们用完了，</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//幂取模函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">pow1</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res = (res * a)%mod;</span><br><span class=\"line\">        a = (a * a)%mod;</span><br><span class=\"line\">        n &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算 ret = (a^n)%mod</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">pow2</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">            res = mul(res,a,mod);</span><br><span class=\"line\">        a = mul(a,a,mod);</span><br><span class=\"line\">        n &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"矩阵乘法和快速幂\"><a href=\"#矩阵乘法和快速幂\" class=\"headerlink\" title=\"矩阵乘法和快速幂\"></a>矩阵乘法和快速幂</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">matrix</span>&#123;</span></span><br><span class=\"line\">    LL m[<span class=\"number\">10</span>][<span class=\"number\">10</span>];</span><br><span class=\"line\">    matrix()&#123; <span class=\"built_in\">memset</span>(m,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(m)); &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">matrix <span class=\"keyword\">operator</span> * (<span class=\"keyword\">const</span> matrix &amp; a,<span class=\"keyword\">const</span> matrix &amp; b)&#123;</span><br><span class=\"line\">    matrix c;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">9</span>; i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>; j&lt;=<span class=\"number\">9</span>; j++)&#123;</span><br><span class=\"line\">            c.m[i][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k=<span class=\"number\">1</span>; k&lt;=<span class=\"number\">9</span>; k++)</span><br><span class=\"line\">                c.m[i][j]=(c.m[i][j]+a.m[i][k]*b.m[k][j])%mod;<span class=\"comment\">//一般题目都要求要modulo一个数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">matrix <span class=\"title\">quick</span><span class=\"params\">(matrix base,<span class=\"keyword\">int</span> <span class=\"built_in\">pow</span>)</span></span>&#123;</span><br><span class=\"line\">    matrix a;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">9</span>; i++) a.m[i][i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"built_in\">pow</span>)    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">pow</span>&amp;<span class=\"number\">1</span>) a=a*base;</span><br><span class=\"line\">        base=base*base;</span><br><span class=\"line\">        <span class=\"built_in\">pow</span>&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"组合数学\"><a href=\"#组合数学\" class=\"headerlink\" title=\"组合数学\"></a>组合数学</h2><h3 id=\"Contar康托展开\"><a href=\"#Contar康托展开\" class=\"headerlink\" title=\"Contar康托展开\"></a>Contar康托展开</h3><p>由一个排列计算它是全排列中的第几个排列的方法。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> fac[<span class=\"number\">15</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">factor</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    fac[<span class=\"number\">0</span>] = fac[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; <span class=\"number\">13</span>; ++ i)</span><br><span class=\"line\">        fac[i] = fac[i - <span class=\"number\">1</span>] * i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//逆康托</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">uncantor</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> res;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, l, t;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> h[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= k; i++) &#123;</span><br><span class=\"line\">        t = x / fac[k - i];</span><br><span class=\"line\">        x -= t * fac[k - i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">1</span>, l = <span class=\"number\">0</span>; l &lt;= t; j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( !h[j] ) l++;</span><br><span class=\"line\">        j --;</span><br><span class=\"line\">        h[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        res += j + <span class=\"string\">'0'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//康托</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cantor</span><span class=\"params\">(<span class=\"keyword\">int</span>* a, <span class=\"keyword\">int</span> len)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; ++ i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; len; ++j)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[j] &lt; a[i]) t ++;</span><br><span class=\"line\">        ans += fac[len - i - <span class=\"number\">1</span>] * t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Catalan-Number-卡特兰数\"><a href=\"#Catalan-Number-卡特兰数\" class=\"headerlink\" title=\"Catalan Number 卡特兰数\"></a>Catalan Number 卡特兰数</h3><p>$C_n = \\frac{4n - 2}{n + 1} C_{n-1}$</p>\n<p>相关问题</p>\n<ol>\n<li>Cn可以表示长度为2n的Dyck Words的种类数，Dyck Words由n个A字符与n个B字符组成，且满足在任意位置上，前缀中A的数量不小于B的数量，如果A用(代替，把B用)代替，就是一个典型的括号表达式，因此也可以用来表示合法的表达式个数。</li>\n<li>Cn可以表示有n个结点的不同构的二叉树的种类数。</li>\n<li>Cn可以表示有2n + 1个结点的不同构的满二叉树的种类数。</li>\n<li>Cn可以表示在n*n的格点中从左下角延格线走到右上角且始终不超过对角线的方案数。</li>\n<li>Cn可以表示通过连接顶点将n + 2个顶点的凸多边形划分成三角形的方案数。</li>\n<li>Cn表示有n个元素的出栈顺序的种类数。</li>\n<li>Cn可以用在买票找零钱问题上，对于2n的观众，收银台初始没有钱，无法找零，接下来有n个人拿a元买票，n个人拿2a元买票（需要找零钱数为a），能够保证每一个需要找零的观众来的时候都能够得到找零的合法方案数。</li>\n<li>Cn可以表示在二维直角坐标系中，从(0, 0)走到(2n, 0)点，每个相邻整数点的纵坐标差值的绝对值为1，且点始终不会落到x轴下方的方案数。</li>\n</ol>\n<h2 id=\"高精度\"><a href=\"#高精度\" class=\"headerlink\" title=\"高精度\"></a>高精度</h2><h3 id=\"大数操作BigInteger\"><a href=\"#大数操作BigInteger\" class=\"headerlink\" title=\"大数操作BigInteger\"></a>大数操作BigInteger</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigInteger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BI</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner (System.in);</span><br><span class=\"line\">        BigInteger a, b;</span><br><span class=\"line\">        a = in.nextBigInteger();</span><br><span class=\"line\">        b = in.nextBigInteger();</span><br><span class=\"line\">        System.out.println(a.add(b));</span><br><span class=\"line\">        System.out.println(a.subtract(b));</span><br><span class=\"line\">        System.out.println(a.multiply(b));</span><br><span class=\"line\">        System.out.println(a.divide(b));</span><br><span class=\"line\">        BigInteger mod = BigInteger.valueOf(<span class=\"number\">3</span>);</span><br><span class=\"line\">        System.out.println(b.mod(mod));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"小数操作BigDecimal\"><a href=\"#小数操作BigDecimal\" class=\"headerlink\" title=\"小数操作BigDecimal\"></a>小数操作BigDecimal</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BD</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        BigDecimal a = <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">10</span>);</span><br><span class=\"line\">        BigDecimal b = <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">10.5</span>);</span><br><span class=\"line\">        BigDecimal c = <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">123456789101222L</span>);</span><br><span class=\"line\">        BigDecimal d = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"-123456.31\"</span>);</span><br><span class=\"line\">        System.out.println(a);</span><br><span class=\"line\">        System.out.println(b);</span><br><span class=\"line\">        System.out.println(c);</span><br><span class=\"line\">        System.out.println(d);</span><br><span class=\"line\">        System.out.println(a.add(b).add(c).add(d));</span><br><span class=\"line\">        System.out.println(a.subtract(b).subtract(a));</span><br><span class=\"line\">        System.out.println(a.multiply(b).multiply(c));</span><br><span class=\"line\">        System.out.println(c.divide(a).divide(<span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">20</span>)));</span><br><span class=\"line\">        System.out.println(d.divide(a));</span><br><span class=\"line\">        System.out.println(d.doubleValue());</span><br><span class=\"line\">        System.out.println(a.compareTo(b));<span class=\"comment\">// -1</span></span><br><span class=\"line\">        System.out.println(a.equals(b));<span class=\"comment\">// flase</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成排列\"><a href=\"#生成排列\" class=\"headerlink\" title=\"生成排列\"></a>生成排列</h3><p>next_permutation() 生成下一个排列<br>prev_permutation() 生成上一个排列</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"><span class=\"comment\">// &#125;while (next_permutation(str.begin(), str.end()));</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span> (prev_permutation(str.begin(), str.end()));</span><br></pre></td></tr></table></figure>\n<h2 id=\"Graph-图论\"><a href=\"#Graph-图论\" class=\"headerlink\" title=\"Graph 图论\"></a>Graph 图论</h2><h3 id=\"topu-拓扑排序\"><a href=\"#topu-拓扑排序\" class=\"headerlink\" title=\"topu 拓扑排序\"></a>topu 拓扑排序</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> in[maxn];<span class=\"comment\">//存入度数</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span> &lt;<span class=\"keyword\">int</span> &gt; edge[maxn]; <span class=\"comment\">//存边</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">topu_sort</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;q;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in[i]) q.push(i); <span class=\"comment\">//取出入度为0的点放</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!q.empty())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> u = q.front(); q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; edge[u].size(); i++)&#123; <span class=\"comment\">//删边与统计操作</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> v = edge[u][i];</span><br><span class=\"line\">            in[v] --;  <span class=\"comment\">//删边</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( ! in[v] ) q.push(v);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span> (<span class=\"string\">\"%d \"</span>, u);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"comment\">//若存在全部遍历完仍存在入度不为0的点说明存在环</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (in[i]) <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Shortest-Path-最短路\"><a href=\"#Shortest-Path-最短路\" class=\"headerlink\" title=\"Shortest Path 最短路\"></a>Shortest Path 最短路</h3><h4 id=\"Dijstra\"><a href=\"#Dijstra\" class=\"headerlink\" title=\"Dijstra\"></a>Dijstra</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt; P;</span><br><span class=\"line\"><span class=\"keyword\">int</span> pre[<span class=\"number\">2501</span>];   <span class=\"comment\">// 路径记录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dijkstra</span><span class=\"params\">( <span class=\"keyword\">int</span> s )</span></span>&#123;</span><br><span class=\"line\">    priority_queue&lt; P, <span class=\"built_in\">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; q;</span><br><span class=\"line\">    fill (d + <span class=\"number\">1</span>, d + n + <span class=\"number\">1</span>, INF);</span><br><span class=\"line\">    d[s] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    q.push(P(<span class=\"number\">0</span>, s));</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (q.size())&#123;</span><br><span class=\"line\">        P p = q.top(); q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> h = p.second;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( d[h] &lt; p.first ) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; v[h].size(); i ++)&#123;</span><br><span class=\"line\">            edge e = v[h][i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( d[e.to] &gt; d[h] + e.cost )&#123;</span><br><span class=\"line\">                d[e.to] = d[h] + e.cost;</span><br><span class=\"line\">                q.push(P(d[e.to], e.to));</span><br><span class=\"line\">                pre[e.to] = h;  <span class=\"comment\">// 记录前驱</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"SPFA\"><a href=\"#SPFA\" class=\"headerlink\" title=\"SPFA\"></a>SPFA</h4><p>从起点到任意一个点最短距离经过的点最多只有 n 个，用 cnt[ i ] 表示从起点（假设就是 1）到 i 的最短距离包含点的个数，初始化 cnt[ 1 ] = 1，那么当我们能够用点 u 松弛点 v 时，当我们能够用点 u 松弛点 v 时，松弛时同时更新 cnt[ v ] = cnt[ u ] + 1，若发现此时 cnt[ v ] &gt; n，那么就存在负环</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">SPFA</span><span class=\"params\">( <span class=\"keyword\">int</span> s )</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span> &gt; q;</span><br><span class=\"line\">    fill(d + <span class=\"number\">1</span>, d + n + <span class=\"number\">1</span>, INF);</span><br><span class=\"line\">    d[s] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    q.push(s);</span><br><span class=\"line\">    vis[s] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( q.size() )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t = q.front(); q.pop();</span><br><span class=\"line\">        vis[t] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i = v[t].begin(); i != v[t].end(); i ++ )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( i -&gt; cost + d[t] &lt; d[i -&gt; to] )&#123;</span><br><span class=\"line\">                d[i -&gt; to] = i -&gt; cost + d[t];</span><br><span class=\"line\">                <span class=\"comment\">// cnt[ i -&gt; to ] = 1 + cnt[t];</span></span><br><span class=\"line\">                <span class=\"comment\">// if(cnt[i -&gt; to] &gt; n ) return false;</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>( !vis[i -&gt; to] )</span><br><span class=\"line\">                    q.push(i -&gt; to);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"MST-最小生成树\"><a href=\"#MST-最小生成树\" class=\"headerlink\" title=\"MST 最小生成树\"></a>MST 最小生成树</h3><h4 id=\"Kruskal\"><a href=\"#Kruskal\" class=\"headerlink\" title=\"Kruskal\"></a>Kruskal</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">        p[i] = i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">int</span> x )</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x == p[x] ? x : p[x] = find(p[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">Kruskal</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    ll res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    sort(E, E + m, cmp);</span><br><span class=\"line\">    init();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i ++ )&#123;</span><br><span class=\"line\">        edge e = E[i];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x = find(e.from);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = find(e.to);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( x != y )&#123;</span><br><span class=\"line\">            p[x] = p[y];</span><br><span class=\"line\">            cnt ++;</span><br><span class=\"line\">            res += (ll) e.cost;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( cnt == n - <span class=\"number\">1</span> ) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Prim\"><a href=\"#Prim\" class=\"headerlink\" title=\"Prim\"></a>Prim</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">Prim</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    fill (cost + <span class=\"number\">1</span>, cost + n + <span class=\"number\">1</span>, INF);</span><br><span class=\"line\">    cost[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    priority_queue &lt;P, <span class=\"built_in\">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; q;</span><br><span class=\"line\">    q.push(P(<span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">    ll res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( q.size() &amp;&amp; cnt &lt; n )&#123;</span><br><span class=\"line\">        P p = q.top(); q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> v = p.second;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !vis[v] )&#123;</span><br><span class=\"line\">            cnt ++;</span><br><span class=\"line\">            vis[v] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            res += p.first;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; E[v].size(); i ++)&#123;</span><br><span class=\"line\">                edge e = E[v][i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>( cost[e.to] &gt; e.cost )&#123;</span><br><span class=\"line\">                    cost[e.to] = e.cost;</span><br><span class=\"line\">                    q.push(P(cost[e.to], e.to));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"最大流\"><a href=\"#最大流\" class=\"headerlink\" title=\"最大流\"></a>最大流</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> to, cap, rev;</span><br><span class=\"line\">&#125;edge;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[<span class=\"number\">101</span>];</span><br><span class=\"line\"><span class=\"built_in\">vector</span> &lt;edge &gt; G[<span class=\"number\">101</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> v, <span class=\"keyword\">int</span> t, <span class=\"keyword\">int</span> f)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v == t) <span class=\"keyword\">return</span> f;</span><br><span class=\"line\">    vis[v] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; G[v].size(); i ++)&#123;</span><br><span class=\"line\">        edge e = G[v][i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !vis[e.to] &amp;&amp; e.cap &gt; <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> d = dfs(e.to, t, min(f, e.cap));</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( d &gt; <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">                e.cap -= d;</span><br><span class=\"line\">                G[e.to][e.rev].cap += d;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> d;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">max_flow</span><span class=\"params\">(<span class=\"keyword\">int</span> s, <span class=\"keyword\">int</span> t)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> flow = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(vis, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">        <span class=\"keyword\">int</span> f = dfs(s, t, INF);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !f ) <span class=\"keyword\">return</span> flow;</span><br><span class=\"line\">        flow += f;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> from, to, s = <span class=\"number\">0</span>, t = n + m + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i ++&#123;</span><br><span class=\"line\">        G[s].push_back(&#123;i, <span class=\"number\">1</span>, G[i].size()&#125;);</span><br><span class=\"line\">        G[i].push_back(&#123;s, <span class=\"number\">0</span>, G[s].size() - <span class=\"number\">1</span>&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = m + <span class=\"number\">1</span>; j &lt;= n + m; j ++)&#123;</span><br><span class=\"line\">        G[j].push_back(&#123;t, <span class=\"number\">1</span>, G[t].size()&#125;);</span><br><span class=\"line\">        G[t].push_back(&#123;j, <span class=\"number\">0</span>, G[j].size() - <span class=\"number\">1</span>&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;from, &amp;to), from != <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        G[to].push_back(&#123;from, <span class=\"number\">1</span>, G[from].size()&#125;);</span><br><span class=\"line\">        G[from].push_back(&#123;to, <span class=\"number\">0</span>, G[to].size() - <span class=\"number\">1</span>&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; max_flow(s, t) &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"欧拉路和欧拉回路\"><a href=\"#欧拉路和欧拉回路\" class=\"headerlink\" title=\"欧拉路和欧拉回路\"></a>欧拉路和欧拉回路</h3><p>有向图</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> lst)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">register</span> <span class=\"keyword\">int</span> &amp;i=lnk[x];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;i;i=e[i].nxt)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vis[i]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        vis[i]=<span class=\"number\">1</span>,dfs(e[i].to,i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lst) res[++res_]=lst;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>无向图</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> lst)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">register</span> <span class=\"keyword\">int</span> &amp;i=lnk[x];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;i;i=e[i].nxt)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vis[i+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        vis[i+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>]=<span class=\"number\">1</span>,dfs(e[i].to,i&amp;<span class=\"number\">1</span>?(i+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>):-(i+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lst) res[++res_]=lst;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Dynamic-Programming-动态规划\"><a href=\"#Dynamic-Programming-动态规划\" class=\"headerlink\" title=\"Dynamic Programming 动态规划\"></a>Dynamic Programming 动态规划</h2><h3 id=\"LIS-最长上升子序列\"><a href=\"#LIS-最长上升子序列\" class=\"headerlink\" title=\"LIS 最长上升子序列\"></a>LIS 最长上升子序列</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(dp, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(dp));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)&#123;</span><br><span class=\"line\">        dp[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i; j ++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( a[j] &lt; a[i] )</span><br><span class=\"line\">                dp[i] = max (dp[i], dp[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        res = max (res, dp[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>, res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"数划分\"><a href=\"#数划分\" class=\"headerlink\" title=\"数划分\"></a>数划分</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>问题描述：</span><br><span class=\"line\">    给定一个正整数N和K</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">1.</span> 将n划分成若干正整数之和的划分数。</span><br><span class=\"line\">    <span class=\"number\">2.</span> 将n划分成k个正整数之和的划分数。</span><br><span class=\"line\">    <span class=\"number\">3.</span> 将n划分成最大数不超过k的划分数。</span><br><span class=\"line\">    <span class=\"number\">4.</span> 将n划分成若干奇正整数之和的划分数。</span><br><span class=\"line\">    <span class=\"number\">5.</span> 将n划分成若干不同整数之和的划分数。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span>问题分类：总的来说这些都是背包问题；</span><br><span class=\"line\"></span><br><span class=\"line\">第一个问：就是一个完全背包，物品有 <span class=\"number\">1</span> --- N 种，第 i 种物品的重量为 i ，价值为 i</span><br><span class=\"line\"></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>;i &lt;= N;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = i;j &lt;= N;j++)</span><br><span class=\"line\">                dp[j] += dp[j-i];</span><br><span class=\"line\"></span><br><span class=\"line\">其中 dp[j] 是用前 i 个数能构成 j 的种类数，则结果就为 dp[N]</span><br><span class=\"line\"></span><br><span class=\"line\">看完这个问题了，那么 第<span class=\"number\">3</span>个问就知道了 ， 即用前 K 种物品所得结果，</span><br><span class=\"line\">只需把第一层循环的 i &lt;= N 改为 i &lt;= K 即可；</span><br><span class=\"line\"></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>;i &lt;= K;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = i;j &lt;= N;j++)</span><br><span class=\"line\">                dp[j] += dp[j-i];   结果同样为 dp[N] ;</span><br><span class=\"line\"></span><br><span class=\"line\">那么第四个问呢，想想是奇数，那么 i = <span class=\"number\">2</span>，<span class=\"number\">4</span>，<span class=\"number\">6</span>，…… 等等值就不能取了，</span><br><span class=\"line\">因为这些物品不合要求，这很简单啊  i++ 改为 i += <span class=\"number\">2</span> 不就行了；</span><br><span class=\"line\"></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>;i &lt;= N;i+=<span class=\"number\">2</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = i;j &lt;= N;j++)</span><br><span class=\"line\">                dp[j] += dp[j-i];   结果同样为 dp[N] ;</span><br><span class=\"line\"></span><br><span class=\"line\">再看看第五个问，若干个不同的就是一种物品最多只能用一次</span><br><span class=\"line\">这是经典的 <span class=\"number\">01</span>背包 啊，与第一个问的不同就是第二层循环的顺序而已；</span><br><span class=\"line\"></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>;i &lt;= N;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = n;j &gt;= i ;j--)</span><br><span class=\"line\">                dp[j] += dp[j-i];</span><br><span class=\"line\"></span><br><span class=\"line\">最后我们来思考第二个问：</span><br><span class=\"line\"></span><br><span class=\"line\">   要求只要 K 个，这怎么办呢？？？想想特殊情况…… 如果 K = <span class=\"number\">1</span> 呢，只能是 N 咯</span><br><span class=\"line\">   若果 N = <span class=\"number\">0</span> 呢， 结果只能是 <span class=\"number\">0</span> 中可能啊，那同样N &lt; K 的话，不可能分啊 结果为 <span class=\"number\">0</span></span><br><span class=\"line\">   那么我们再考虑，分的结果中有没有 <span class=\"number\">1</span> ，如果有那么就把剩下的 N - <span class=\"number\">1</span> 分成 K - <span class=\"number\">1</span> 份</span><br><span class=\"line\">   如果没有，那么我们先拿出 K 份给每一堆一个<span class=\"number\">1</span>，再把剩下的 N - K 分成 K 份就行了</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> work(<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> k)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (k == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n &lt; k) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> work(n-k,k) + work(n<span class=\"number\">-1</span>,k<span class=\"number\">-1</span>);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<!-- # Template -->\n<h2 id=\"number-theory-数论\"><a href=\"#number-theory-数论\" class=\"headerlink\" title=\"number theory(数论)\"></a>number theory(数论)</h2><h3 id=\"扩展欧几里得相关\"><a href=\"#扩展欧几里得相关\" class=\"headerlink\" title=\"扩展欧几里得相关\"></a>扩展欧几里得相关</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ax + by = gcd(a, b)</span></span><br><span class=\"line\"><span class=\"function\">LL <span class=\"title\">exgcd</span><span class=\"params\">(LL a, LL b, LL &amp;x, LL &amp;y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!b) &#123;</span><br><span class=\"line\">        x = <span class=\"number\">1</span>, y = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        LL d = exgcd(b, a % b, y, x);</span><br><span class=\"line\">        y -= x * (a / b);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> d;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ax + by = c</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">linear_equation</span><span class=\"params\">(LL a, LL b, LL c, LL &amp;x, LL &amp;y)</span></span>&#123;</span><br><span class=\"line\">    LL d = exgcd (a, b, x, y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( c % d )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    LL k = c / d;</span><br><span class=\"line\">    x *= k; y *= k;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 其他解为 x + b / d * t; y - a / d * t; t为任意整数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ax ≡ b (mod n)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">modular_linear_equation</span><span class=\"params\">(LL a, LL b, LL n, LL &amp;x, LL &amp;y)</span></span>&#123;</span><br><span class=\"line\">    LL x0, i;</span><br><span class=\"line\">    LL d = exgcd(a, n, x, y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( b % d ) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    x0 = x * ( b / d ) % n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">1</span>; i &lt;= d; i ++)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, ( x0 + i * ( n / d ) ) % n );</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// inverse</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">inverse</span><span class=\"params\">(LL a, LL m, LL x, LL y)</span></span>&#123;</span><br><span class=\"line\">    LL d = exgcd(a, m, x, y);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x + m) % m;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"勾股数组\"><a href=\"#勾股数组\" class=\"headerlink\" title=\"勾股数组\"></a>勾股数组</h3><p>取n $\\lt$ m且满足(n &amp; 1) ^ (m &amp; 1)为1（这里的^为异或，此表达式说明二者奇偶不同），同时gcd(n, m) = 1（即二者互素），则可得到满足 $a^2 + b^2 = c^2$ 的勾股数组：</p>\n<p>$ a = m^2 - n^2 $<br>$ b = 2 <em> n </em> m $<br>$ c = m^2 + n^2 $</p>\n<p>按照顺序枚举满足上述条件（奇偶不同的互素n $\\lt$ m二元组（n, m）），就可以得到所有的本源勾股数组，同时它们的整数倍也是勾股数组。这个方法可以取得所有的勾股数组。</p>\n<h3 id=\"欧拉线性筛\"><a href=\"#欧拉线性筛\" class=\"headerlink\" title=\"欧拉线性筛\"></a>欧拉线性筛</h3><p>欧拉线性筛求判断素数和求最小质因子</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// MinFactor[i] = x 表示为i最小质因子为 x</span></span><br><span class=\"line\"><span class=\"comment\">// p[i] = x 表示为第 i+1 个素数为x</span></span><br><span class=\"line\"><span class=\"comment\">// MinFactor 只求素数可换为 bool 类型判断 not_prime</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">euler</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    pos = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; LIM; i ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !MinFactor[i] ) p[pos ++] = MinFactor[i] =  i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; (t = i * p[j]) &lt; LIM; j ++)&#123;</span><br><span class=\"line\">            MinFactor[t] = p[j];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( !(i % p[j]) ) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"欧拉函数\"><a href=\"#欧拉函数\" class=\"headerlink\" title=\"欧拉函数\"></a>欧拉函数</h3><p>phi(i) 意义： 小于 i 且与 i 互质的正整数的个数</p>\n<ol>\n<li><p>打表时间复杂度 O(n)</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init_phi</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    phi[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; LIM; i ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !phi[i] )&#123;</span><br><span class=\"line\">            phi[i] = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">            p[cnt ++] = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; (t = i * p[j]) &lt; LIM; j ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( i % p[j] ) phi[t] = phi[i] * (p[j] - <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                phi[t] = phi[i] * p[j];</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>单个时间复杂度为 O($\\sqrt{n}$)</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">LL <span class=\"title\">phi</span><span class=\"params\">(LL n)</span> </span>&#123;  </span><br><span class=\"line\">    LL ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (LL i = <span class=\"number\">2</span>; i * i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!(n % i)) &#123;</span><br><span class=\"line\">            ret *= i - <span class=\"number\">1</span>;</span><br><span class=\"line\">            n /= i;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (!(n % i))</span><br><span class=\"line\">                ret *= i, n /= i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n ^ <span class=\"number\">1</span>) ret *= (n - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Numberical-Methods-数值方法\"><a href=\"#Numberical-Methods-数值方法\" class=\"headerlink\" title=\"Numberical Methods(数值方法)\"></a>Numberical Methods(数值方法)</h2><h3 id=\"高精度平方根\"><a href=\"#高精度平方根\" class=\"headerlink\" title=\"高精度平方根\"></a>高精度平方根</h3><p>牛顿逼近法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigDecimal <span class=\"title\">sqrt</span><span class=\"params\">(BigDecimal b, BigDecimal eps)</span> </span>&#123;</span><br><span class=\"line\">    BigDecimal crt = <span class=\"keyword\">new</span> BigDecimal(b.toString());</span><br><span class=\"line\">    BigDecimal two = BigDecimal.valueOf(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> scale = eps.scale() + <span class=\"number\">2</span>;</span><br><span class=\"line\">    Boolean isNegtive = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (crt.compareTo(BigDecimal.valueOf(<span class=\"number\">0</span>)) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        b = b.negate();</span><br><span class=\"line\">        crt = crt.negate();</span><br><span class=\"line\">        isNegtive = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">        BigDecimal nxt = crt.subtract(crt.multiply(crt).subtract(b).divide(two.multiply(crt),</span><br><span class=\"line\">            scale, BigDecimal.ROUND_DOWN));</span><br><span class=\"line\">        <span class=\"comment\">// test</span></span><br><span class=\"line\">        <span class=\"comment\">// System.out.println(nxt);</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nxt.subtract(crt).abs().compareTo(eps) &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            crt = nxt;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        crt = nxt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isNegtive) &#123;</span><br><span class=\"line\">        b = b.negate();</span><br><span class=\"line\">        crt = crt.negate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> crt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigDecimal <span class=\"title\">sqrt</span><span class=\"params\">(BigDecimal b)</span> </span>&#123;</span><br><span class=\"line\">    BigDecimal eps = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"0.00000000000000000000000001\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sqrt(b, eps);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigDecimal <span class=\"title\">sqrt</span><span class=\"params\">(BigInteger b, BigDecimal eps)</span> </span>&#123;</span><br><span class=\"line\">    BigDecimal tmp = <span class=\"keyword\">new</span> BigDecimal(b.toString());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sqrt(tmp, eps);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigDecimal <span class=\"title\">sqrt</span><span class=\"params\">(BigInteger b)</span> </span>&#123;</span><br><span class=\"line\">    BigDecimal tmp = <span class=\"keyword\">new</span> BigDecimal(b.toString());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sqrt(tmp);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"快速求幂取模法\"><a href=\"#快速求幂取模法\" class=\"headerlink\" title=\"快速求幂取模法\"></a>快速求幂取模法</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//计算(a*b)%c</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">mul</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> b,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(b &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( (b&amp;<span class=\"number\">1</span>) != <span class=\"number\">0</span>)  <span class=\"comment\">// 二进制最低位是1 --&gt; 加上 a的 2^i 倍, 快速幂是乘上a的2^i ）</span></span><br><span class=\"line\">            res  = ( res + a) % mod;</span><br><span class=\"line\">        a = (a &lt;&lt; <span class=\"number\">1</span>) % mod;    <span class=\"comment\">// a = a * 2    a随着b中二进制位数而扩大 每次 扩大两倍。</span></span><br><span class=\"line\">        b &gt;&gt;= <span class=\"number\">1</span>;               <span class=\"comment\">// b -&gt; b/2     右移  去掉最后一位 因为当前最后一位我们用完了，</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//幂取模函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">pow1</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">            res = (res * a)%mod;</span><br><span class=\"line\">        a = (a * a)%mod;</span><br><span class=\"line\">        n &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算 ret = (a^n)%mod</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"title\">pow2</span><span class=\"params\">(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">            res = mul(res,a,mod);</span><br><span class=\"line\">        a = mul(a,a,mod);</span><br><span class=\"line\">        n &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"矩阵乘法和快速幂\"><a href=\"#矩阵乘法和快速幂\" class=\"headerlink\" title=\"矩阵乘法和快速幂\"></a>矩阵乘法和快速幂</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">matrix</span>&#123;</span></span><br><span class=\"line\">    LL m[<span class=\"number\">10</span>][<span class=\"number\">10</span>];</span><br><span class=\"line\">    matrix()&#123; <span class=\"built_in\">memset</span>(m,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(m)); &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">matrix <span class=\"keyword\">operator</span> * (<span class=\"keyword\">const</span> matrix &amp; a,<span class=\"keyword\">const</span> matrix &amp; b)&#123;</span><br><span class=\"line\">    matrix c;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">9</span>; i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>; j&lt;=<span class=\"number\">9</span>; j++)&#123;</span><br><span class=\"line\">            c.m[i][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k=<span class=\"number\">1</span>; k&lt;=<span class=\"number\">9</span>; k++)</span><br><span class=\"line\">                c.m[i][j]=(c.m[i][j]+a.m[i][k]*b.m[k][j])%mod;<span class=\"comment\">//一般题目都要求要modulo一个数</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">matrix <span class=\"title\">quick</span><span class=\"params\">(matrix base,<span class=\"keyword\">int</span> <span class=\"built_in\">pow</span>)</span></span>&#123;</span><br><span class=\"line\">    matrix a;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">9</span>; i++) a.m[i][i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"built_in\">pow</span>)    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">pow</span>&amp;<span class=\"number\">1</span>) a=a*base;</span><br><span class=\"line\">        base=base*base;</span><br><span class=\"line\">        <span class=\"built_in\">pow</span>&gt;&gt;=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"组合数学\"><a href=\"#组合数学\" class=\"headerlink\" title=\"组合数学\"></a>组合数学</h2><h3 id=\"Contar康托展开\"><a href=\"#Contar康托展开\" class=\"headerlink\" title=\"Contar康托展开\"></a>Contar康托展开</h3><p>由一个排列计算它是全排列中的第几个排列的方法。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> fac[<span class=\"number\">15</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">factor</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    fac[<span class=\"number\">0</span>] = fac[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; <span class=\"number\">13</span>; ++ i)</span><br><span class=\"line\">        fac[i] = fac[i - <span class=\"number\">1</span>] * i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//逆康托</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">uncantor</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> res;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, l, t;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> h[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= k; i++) &#123;</span><br><span class=\"line\">        t = x / fac[k - i];</span><br><span class=\"line\">        x -= t * fac[k - i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">1</span>, l = <span class=\"number\">0</span>; l &lt;= t; j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( !h[j] ) l++;</span><br><span class=\"line\">        j --;</span><br><span class=\"line\">        h[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        res += j + <span class=\"string\">'0'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//康托</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cantor</span><span class=\"params\">(<span class=\"keyword\">int</span>* a, <span class=\"keyword\">int</span> len)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; ++ i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; len; ++j)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[j] &lt; a[i]) t ++;</span><br><span class=\"line\">        ans += fac[len - i - <span class=\"number\">1</span>] * t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Catalan-Number-卡特兰数\"><a href=\"#Catalan-Number-卡特兰数\" class=\"headerlink\" title=\"Catalan Number 卡特兰数\"></a>Catalan Number 卡特兰数</h3><p>$C_n = \\frac{4n - 2}{n + 1} C_{n-1}$</p>\n<p>相关问题</p>\n<ol>\n<li>Cn可以表示长度为2n的Dyck Words的种类数，Dyck Words由n个A字符与n个B字符组成，且满足在任意位置上，前缀中A的数量不小于B的数量，如果A用(代替，把B用)代替，就是一个典型的括号表达式，因此也可以用来表示合法的表达式个数。</li>\n<li>Cn可以表示有n个结点的不同构的二叉树的种类数。</li>\n<li>Cn可以表示有2n + 1个结点的不同构的满二叉树的种类数。</li>\n<li>Cn可以表示在n*n的格点中从左下角延格线走到右上角且始终不超过对角线的方案数。</li>\n<li>Cn可以表示通过连接顶点将n + 2个顶点的凸多边形划分成三角形的方案数。</li>\n<li>Cn表示有n个元素的出栈顺序的种类数。</li>\n<li>Cn可以用在买票找零钱问题上，对于2n的观众，收银台初始没有钱，无法找零，接下来有n个人拿a元买票，n个人拿2a元买票（需要找零钱数为a），能够保证每一个需要找零的观众来的时候都能够得到找零的合法方案数。</li>\n<li>Cn可以表示在二维直角坐标系中，从(0, 0)走到(2n, 0)点，每个相邻整数点的纵坐标差值的绝对值为1，且点始终不会落到x轴下方的方案数。</li>\n</ol>\n<h2 id=\"高精度\"><a href=\"#高精度\" class=\"headerlink\" title=\"高精度\"></a>高精度</h2><h3 id=\"大数操作BigInteger\"><a href=\"#大数操作BigInteger\" class=\"headerlink\" title=\"大数操作BigInteger\"></a>大数操作BigInteger</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigInteger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BI</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner (System.in);</span><br><span class=\"line\">        BigInteger a, b;</span><br><span class=\"line\">        a = in.nextBigInteger();</span><br><span class=\"line\">        b = in.nextBigInteger();</span><br><span class=\"line\">        System.out.println(a.add(b));</span><br><span class=\"line\">        System.out.println(a.subtract(b));</span><br><span class=\"line\">        System.out.println(a.multiply(b));</span><br><span class=\"line\">        System.out.println(a.divide(b));</span><br><span class=\"line\">        BigInteger mod = BigInteger.valueOf(<span class=\"number\">3</span>);</span><br><span class=\"line\">        System.out.println(b.mod(mod));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"小数操作BigDecimal\"><a href=\"#小数操作BigDecimal\" class=\"headerlink\" title=\"小数操作BigDecimal\"></a>小数操作BigDecimal</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BD</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        BigDecimal a = <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">10</span>);</span><br><span class=\"line\">        BigDecimal b = <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">10.5</span>);</span><br><span class=\"line\">        BigDecimal c = <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">123456789101222L</span>);</span><br><span class=\"line\">        BigDecimal d = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"-123456.31\"</span>);</span><br><span class=\"line\">        System.out.println(a);</span><br><span class=\"line\">        System.out.println(b);</span><br><span class=\"line\">        System.out.println(c);</span><br><span class=\"line\">        System.out.println(d);</span><br><span class=\"line\">        System.out.println(a.add(b).add(c).add(d));</span><br><span class=\"line\">        System.out.println(a.subtract(b).subtract(a));</span><br><span class=\"line\">        System.out.println(a.multiply(b).multiply(c));</span><br><span class=\"line\">        System.out.println(c.divide(a).divide(<span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">20</span>)));</span><br><span class=\"line\">        System.out.println(d.divide(a));</span><br><span class=\"line\">        System.out.println(d.doubleValue());</span><br><span class=\"line\">        System.out.println(a.compareTo(b));<span class=\"comment\">// -1</span></span><br><span class=\"line\">        System.out.println(a.equals(b));<span class=\"comment\">// flase</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成排列\"><a href=\"#生成排列\" class=\"headerlink\" title=\"生成排列\"></a>生成排列</h3><p>next_permutation() 生成下一个排列<br>prev_permutation() 生成上一个排列</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"><span class=\"comment\">// &#125;while (next_permutation(str.begin(), str.end()));</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span> (prev_permutation(str.begin(), str.end()));</span><br></pre></td></tr></table></figure>\n<h2 id=\"Graph-图论\"><a href=\"#Graph-图论\" class=\"headerlink\" title=\"Graph 图论\"></a>Graph 图论</h2><h3 id=\"topu-拓扑排序\"><a href=\"#topu-拓扑排序\" class=\"headerlink\" title=\"topu 拓扑排序\"></a>topu 拓扑排序</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> in[maxn];<span class=\"comment\">//存入度数</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span> &lt;<span class=\"keyword\">int</span> &gt; edge[maxn]; <span class=\"comment\">//存边</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">topu_sort</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;q;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!in[i]) q.push(i); <span class=\"comment\">//取出入度为0的点放</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!q.empty())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> u = q.front(); q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; edge[u].size(); i++)&#123; <span class=\"comment\">//删边与统计操作</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> v = edge[u][i];</span><br><span class=\"line\">            in[v] --;  <span class=\"comment\">//删边</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( ! in[v] ) q.push(v);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span> (<span class=\"string\">\"%d \"</span>, u);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"comment\">//若存在全部遍历完仍存在入度不为0的点说明存在环</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (in[i]) <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Shortest-Path-最短路\"><a href=\"#Shortest-Path-最短路\" class=\"headerlink\" title=\"Shortest Path 最短路\"></a>Shortest Path 最短路</h3><h4 id=\"Dijstra\"><a href=\"#Dijstra\" class=\"headerlink\" title=\"Dijstra\"></a>Dijstra</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt; P;</span><br><span class=\"line\"><span class=\"keyword\">int</span> pre[<span class=\"number\">2501</span>];   <span class=\"comment\">// 路径记录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dijkstra</span><span class=\"params\">( <span class=\"keyword\">int</span> s )</span></span>&#123;</span><br><span class=\"line\">    priority_queue&lt; P, <span class=\"built_in\">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; q;</span><br><span class=\"line\">    fill (d + <span class=\"number\">1</span>, d + n + <span class=\"number\">1</span>, INF);</span><br><span class=\"line\">    d[s] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    q.push(P(<span class=\"number\">0</span>, s));</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (q.size())&#123;</span><br><span class=\"line\">        P p = q.top(); q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> h = p.second;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( d[h] &lt; p.first ) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; v[h].size(); i ++)&#123;</span><br><span class=\"line\">            edge e = v[h][i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( d[e.to] &gt; d[h] + e.cost )&#123;</span><br><span class=\"line\">                d[e.to] = d[h] + e.cost;</span><br><span class=\"line\">                q.push(P(d[e.to], e.to));</span><br><span class=\"line\">                pre[e.to] = h;  <span class=\"comment\">// 记录前驱</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"SPFA\"><a href=\"#SPFA\" class=\"headerlink\" title=\"SPFA\"></a>SPFA</h4><p>从起点到任意一个点最短距离经过的点最多只有 n 个，用 cnt[ i ] 表示从起点（假设就是 1）到 i 的最短距离包含点的个数，初始化 cnt[ 1 ] = 1，那么当我们能够用点 u 松弛点 v 时，当我们能够用点 u 松弛点 v 时，松弛时同时更新 cnt[ v ] = cnt[ u ] + 1，若发现此时 cnt[ v ] &gt; n，那么就存在负环</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">SPFA</span><span class=\"params\">( <span class=\"keyword\">int</span> s )</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span> &gt; q;</span><br><span class=\"line\">    fill(d + <span class=\"number\">1</span>, d + n + <span class=\"number\">1</span>, INF);</span><br><span class=\"line\">    d[s] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    q.push(s);</span><br><span class=\"line\">    vis[s] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( q.size() )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t = q.front(); q.pop();</span><br><span class=\"line\">        vis[t] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i = v[t].begin(); i != v[t].end(); i ++ )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( i -&gt; cost + d[t] &lt; d[i -&gt; to] )&#123;</span><br><span class=\"line\">                d[i -&gt; to] = i -&gt; cost + d[t];</span><br><span class=\"line\">                <span class=\"comment\">// cnt[ i -&gt; to ] = 1 + cnt[t];</span></span><br><span class=\"line\">                <span class=\"comment\">// if(cnt[i -&gt; to] &gt; n ) return false;</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>( !vis[i -&gt; to] )</span><br><span class=\"line\">                    q.push(i -&gt; to);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"MST-最小生成树\"><a href=\"#MST-最小生成树\" class=\"headerlink\" title=\"MST 最小生成树\"></a>MST 最小生成树</h3><h4 id=\"Kruskal\"><a href=\"#Kruskal\" class=\"headerlink\" title=\"Kruskal\"></a>Kruskal</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++)</span><br><span class=\"line\">        p[i] = i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">int</span> x )</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x == p[x] ? x : p[x] = find(p[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">Kruskal</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    ll res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    sort(E, E + m, cmp);</span><br><span class=\"line\">    init();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i ++ )&#123;</span><br><span class=\"line\">        edge e = E[i];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x = find(e.from);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y = find(e.to);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( x != y )&#123;</span><br><span class=\"line\">            p[x] = p[y];</span><br><span class=\"line\">            cnt ++;</span><br><span class=\"line\">            res += (ll) e.cost;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( cnt == n - <span class=\"number\">1</span> ) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Prim\"><a href=\"#Prim\" class=\"headerlink\" title=\"Prim\"></a>Prim</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ll <span class=\"title\">Prim</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    fill (cost + <span class=\"number\">1</span>, cost + n + <span class=\"number\">1</span>, INF);</span><br><span class=\"line\">    cost[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    priority_queue &lt;P, <span class=\"built_in\">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; q;</span><br><span class=\"line\">    q.push(P(<span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\">    ll res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( q.size() &amp;&amp; cnt &lt; n )&#123;</span><br><span class=\"line\">        P p = q.top(); q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> v = p.second;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !vis[v] )&#123;</span><br><span class=\"line\">            cnt ++;</span><br><span class=\"line\">            vis[v] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            res += p.first;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; E[v].size(); i ++)&#123;</span><br><span class=\"line\">                edge e = E[v][i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>( cost[e.to] &gt; e.cost )&#123;</span><br><span class=\"line\">                    cost[e.to] = e.cost;</span><br><span class=\"line\">                    q.push(P(cost[e.to], e.to));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"最大流\"><a href=\"#最大流\" class=\"headerlink\" title=\"最大流\"></a>最大流</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> to, cap, rev;</span><br><span class=\"line\">&#125;edge;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[<span class=\"number\">101</span>];</span><br><span class=\"line\"><span class=\"built_in\">vector</span> &lt;edge &gt; G[<span class=\"number\">101</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> v, <span class=\"keyword\">int</span> t, <span class=\"keyword\">int</span> f)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v == t) <span class=\"keyword\">return</span> f;</span><br><span class=\"line\">    vis[v] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; G[v].size(); i ++)&#123;</span><br><span class=\"line\">        edge e = G[v][i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !vis[e.to] &amp;&amp; e.cap &gt; <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> d = dfs(e.to, t, min(f, e.cap));</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( d &gt; <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">                e.cap -= d;</span><br><span class=\"line\">                G[e.to][e.rev].cap += d;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> d;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">max_flow</span><span class=\"params\">(<span class=\"keyword\">int</span> s, <span class=\"keyword\">int</span> t)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> flow = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(vis, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(vis));</span><br><span class=\"line\">        <span class=\"keyword\">int</span> f = dfs(s, t, INF);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !f ) <span class=\"keyword\">return</span> flow;</span><br><span class=\"line\">        flow += f;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> from, to, s = <span class=\"number\">0</span>, t = n + m + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i ++&#123;</span><br><span class=\"line\">        G[s].push_back(&#123;i, <span class=\"number\">1</span>, G[i].size()&#125;);</span><br><span class=\"line\">        G[i].push_back(&#123;s, <span class=\"number\">0</span>, G[s].size() - <span class=\"number\">1</span>&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = m + <span class=\"number\">1</span>; j &lt;= n + m; j ++)&#123;</span><br><span class=\"line\">        G[j].push_back(&#123;t, <span class=\"number\">1</span>, G[t].size()&#125;);</span><br><span class=\"line\">        G[t].push_back(&#123;j, <span class=\"number\">0</span>, G[j].size() - <span class=\"number\">1</span>&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;from, &amp;to), from != <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        G[to].push_back(&#123;from, <span class=\"number\">1</span>, G[from].size()&#125;);</span><br><span class=\"line\">        G[from].push_back(&#123;to, <span class=\"number\">0</span>, G[to].size() - <span class=\"number\">1</span>&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; max_flow(s, t) &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"欧拉路和欧拉回路\"><a href=\"#欧拉路和欧拉回路\" class=\"headerlink\" title=\"欧拉路和欧拉回路\"></a>欧拉路和欧拉回路</h3><p>有向图</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> lst)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">register</span> <span class=\"keyword\">int</span> &amp;i=lnk[x];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;i;i=e[i].nxt)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vis[i]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        vis[i]=<span class=\"number\">1</span>,dfs(e[i].to,i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lst) res[++res_]=lst;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>无向图</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> lst)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">register</span> <span class=\"keyword\">int</span> &amp;i=lnk[x];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;i;i=e[i].nxt)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vis[i+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        vis[i+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>]=<span class=\"number\">1</span>,dfs(e[i].to,i&amp;<span class=\"number\">1</span>?(i+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>):-(i+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lst) res[++res_]=lst;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Dynamic-Programming-动态规划\"><a href=\"#Dynamic-Programming-动态规划\" class=\"headerlink\" title=\"Dynamic Programming 动态规划\"></a>Dynamic Programming 动态规划</h2><h3 id=\"LIS-最长上升子序列\"><a href=\"#LIS-最长上升子序列\" class=\"headerlink\" title=\"LIS 最长上升子序列\"></a>LIS 最长上升子序列</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(dp, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(dp));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++)&#123;</span><br><span class=\"line\">        dp[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i; j ++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( a[j] &lt; a[i] )</span><br><span class=\"line\">                dp[i] = max (dp[i], dp[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        res = max (res, dp[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>, res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"数划分\"><a href=\"#数划分\" class=\"headerlink\" title=\"数划分\"></a>数划分</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>问题描述：</span><br><span class=\"line\">    给定一个正整数N和K</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">1.</span> 将n划分成若干正整数之和的划分数。</span><br><span class=\"line\">    <span class=\"number\">2.</span> 将n划分成k个正整数之和的划分数。</span><br><span class=\"line\">    <span class=\"number\">3.</span> 将n划分成最大数不超过k的划分数。</span><br><span class=\"line\">    <span class=\"number\">4.</span> 将n划分成若干奇正整数之和的划分数。</span><br><span class=\"line\">    <span class=\"number\">5.</span> 将n划分成若干不同整数之和的划分数。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span>问题分类：总的来说这些都是背包问题；</span><br><span class=\"line\"></span><br><span class=\"line\">第一个问：就是一个完全背包，物品有 <span class=\"number\">1</span> --- N 种，第 i 种物品的重量为 i ，价值为 i</span><br><span class=\"line\"></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>;i &lt;= N;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = i;j &lt;= N;j++)</span><br><span class=\"line\">                dp[j] += dp[j-i];</span><br><span class=\"line\"></span><br><span class=\"line\">其中 dp[j] 是用前 i 个数能构成 j 的种类数，则结果就为 dp[N]</span><br><span class=\"line\"></span><br><span class=\"line\">看完这个问题了，那么 第<span class=\"number\">3</span>个问就知道了 ， 即用前 K 种物品所得结果，</span><br><span class=\"line\">只需把第一层循环的 i &lt;= N 改为 i &lt;= K 即可；</span><br><span class=\"line\"></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>;i &lt;= K;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = i;j &lt;= N;j++)</span><br><span class=\"line\">                dp[j] += dp[j-i];   结果同样为 dp[N] ;</span><br><span class=\"line\"></span><br><span class=\"line\">那么第四个问呢，想想是奇数，那么 i = <span class=\"number\">2</span>，<span class=\"number\">4</span>，<span class=\"number\">6</span>，…… 等等值就不能取了，</span><br><span class=\"line\">因为这些物品不合要求，这很简单啊  i++ 改为 i += <span class=\"number\">2</span> 不就行了；</span><br><span class=\"line\"></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>;i &lt;= N;i+=<span class=\"number\">2</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = i;j &lt;= N;j++)</span><br><span class=\"line\">                dp[j] += dp[j-i];   结果同样为 dp[N] ;</span><br><span class=\"line\"></span><br><span class=\"line\">再看看第五个问，若干个不同的就是一种物品最多只能用一次</span><br><span class=\"line\">这是经典的 <span class=\"number\">01</span>背包 啊，与第一个问的不同就是第二层循环的顺序而已；</span><br><span class=\"line\"></span><br><span class=\"line\">        dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>;i &lt;= N;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = n;j &gt;= i ;j--)</span><br><span class=\"line\">                dp[j] += dp[j-i];</span><br><span class=\"line\"></span><br><span class=\"line\">最后我们来思考第二个问：</span><br><span class=\"line\"></span><br><span class=\"line\">   要求只要 K 个，这怎么办呢？？？想想特殊情况…… 如果 K = <span class=\"number\">1</span> 呢，只能是 N 咯</span><br><span class=\"line\">   若果 N = <span class=\"number\">0</span> 呢， 结果只能是 <span class=\"number\">0</span> 中可能啊，那同样N &lt; K 的话，不可能分啊 结果为 <span class=\"number\">0</span></span><br><span class=\"line\">   那么我们再考虑，分的结果中有没有 <span class=\"number\">1</span> ，如果有那么就把剩下的 N - <span class=\"number\">1</span> 分成 K - <span class=\"number\">1</span> 份</span><br><span class=\"line\">   如果没有，那么我们先拿出 K 份给每一堆一个<span class=\"number\">1</span>，再把剩下的 N - K 分成 K 份就行了</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> work(<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> k)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (k == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n &lt; k) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> work(n-k,k) + work(n<span class=\"number\">-1</span>,k<span class=\"number\">-1</span>);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/Python3-PIL图像处理/1.jpg","slug":"1.jpg","post":"ck0ur8hb7000aa7s18r0mbg64","modified":0,"renderable":0},{"_id":"source/_posts/STL之list/list.png","slug":"list.png","post":"ck0ur8hbb000fa7s1glg3z7hl","modified":0,"renderable":0},{"_id":"source/_posts/STL之sort和unique/sort&unique.png","slug":"sort&unique.png","post":"ck0ur8hbi000oa7s1e2j049m4","modified":0,"renderable":0},{"_id":"source/_posts/STL之string/string.png","slug":"string.png","post":"ck0ur8hbm000wa7s1f1ndp7z4","modified":0,"renderable":0},{"_id":"source/_posts/最长递增序列LIS(n^2和nlog2n)/LIS.png","slug":"LIS.png","post":"ck0ur8hc40026a7s1sxr37zjz","modified":0,"renderable":0},{"_id":"source/_posts/合并数字/1.png","slug":"1.png","post":"ck0ur8hc1001za7s1q45857mi","modified":0,"renderable":0},{"_id":"source/_posts/STL之map/map.png","slug":"map.png","post":"ck0ur8hbd000ha7s1zgf74okf","modified":0,"renderable":0},{"_id":"source/_posts/STL之map/map1.png","slug":"map1.png","post":"ck0ur8hbd000ha7s1zgf74okf","modified":0,"renderable":0},{"_id":"source/_posts/STL之vector/vector.png","slug":"vector.png","post":"ck0ur8hbo0011a7s1npjahfdm","modified":0,"renderable":0},{"_id":"source/_posts/STL之vector/vector1.png","slug":"vector1.png","post":"ck0ur8hbo0011a7s1npjahfdm","modified":0,"renderable":0},{"_id":"source/_posts/python爬取hdu题库/1.png","slug":"1.png","post":"ck0ur8hbu001ca7s1sudjlgge","modified":0,"renderable":0},{"_id":"source/_posts/python爬取hdu题库/2.png","slug":"2.png","post":"ck0ur8hbu001ca7s1sudjlgge","modified":0,"renderable":0},{"_id":"source/_posts/不要62/1.png","slug":"1.png","post":"ck0ur8hbx001na7s1tfv4vwsd","modified":0,"renderable":0},{"_id":"source/_posts/不要62/DP.png","slug":"DP.png","post":"ck0ur8hbx001na7s1tfv4vwsd","modified":0,"renderable":0},{"_id":"source/_posts/最长公共子串LCS/lcs.png","slug":"lcs.png","post":"ck0ur8hc20022a7s112lx1scv","modified":0,"renderable":0},{"_id":"source/_posts/最长公共子串LCS/lcs1.png","slug":"lcs1.png","post":"ck0ur8hc20022a7s112lx1scv","modified":0,"renderable":0},{"_id":"source/_posts/STL之stack-queue/queue.png","slug":"queue.png","post":"ck0ur8hbk000ta7s1lqqhjtqd","modified":0,"renderable":0},{"_id":"source/_posts/STL之stack-queue/queue1.png","slug":"queue1.png","post":"ck0ur8hbk000ta7s1lqqhjtqd","modified":0,"renderable":0},{"_id":"source/_posts/STL之stack-queue/stack.png","slug":"stack.png","post":"ck0ur8hbk000ta7s1lqqhjtqd","modified":0,"renderable":0},{"_id":"source/_posts/全排列/1.png","slug":"1.png","post":"ck0ur8hc0001va7s1o4ivre4j","modified":0,"renderable":0},{"_id":"source/_posts/全排列/2.png","slug":"2.png","post":"ck0ur8hc0001va7s1o4ivre4j","modified":0,"renderable":0},{"_id":"source/_posts/全排列/3.png","slug":"3.png","post":"ck0ur8hc0001va7s1o4ivre4j","modified":0,"renderable":0},{"_id":"source/_posts/STL之set/set.png","slug":"set.png","post":"ck0ur8hbg000ma7s1yl04rdo7","modified":0,"renderable":0},{"_id":"source/_posts/STL之set/set1.png","slug":"set1.png","post":"ck0ur8hbg000ma7s1yl04rdo7","modified":0,"renderable":0},{"_id":"source/_posts/STL之set/set2.png","slug":"set2.png","post":"ck0ur8hbg000ma7s1yl04rdo7","modified":0,"renderable":0},{"_id":"source/_posts/STL之set/set3.png","slug":"set3.png","post":"ck0ur8hbg000ma7s1yl04rdo7","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ck0ur8has0000a7s1y2ptf9rd","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hba000da7s1id60bbrf"},{"post_id":"ck0ur8hay0002a7s1dj6lyjjy","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hbf000ia7s1ejwez3x8"},{"post_id":"ck0ur8hbb000fa7s1glg3z7hl","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hbj000pa7s11a00vayg"},{"post_id":"ck0ur8hb20005a7s12domewvk","category_id":"ck0ur8hba000ca7s135oqjmcp","_id":"ck0ur8hbk000ua7s18up5mvsq"},{"post_id":"ck0ur8hbd000ha7s1zgf74okf","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hbn000xa7s1zi00vhpw"},{"post_id":"ck0ur8hbg000ma7s1yl04rdo7","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hbp0012a7s1r8v2t59z"},{"post_id":"ck0ur8hb30006a7s1chcuiq2i","category_id":"ck0ur8hbf000ka7s151jkdhdm","_id":"ck0ur8hbr0015a7s1tksrrmhy"},{"post_id":"ck0ur8hbi000oa7s1e2j049m4","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hbt001aa7s1o513f7tm"},{"post_id":"ck0ur8hbk000ta7s1lqqhjtqd","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hbu001da7s1myfyzc3t"},{"post_id":"ck0ur8hb40007a7s1hp4550ne","category_id":"ck0ur8hbj000sa7s1gjza9wwf","_id":"ck0ur8hbv001ha7s1i2j2bucz"},{"post_id":"ck0ur8hbm000wa7s1f1ndp7z4","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hbx001la7s1n5y6flid"},{"post_id":"ck0ur8hbo0011a7s1npjahfdm","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hby001oa7s1osjy135w"},{"post_id":"ck0ur8hb7000aa7s18r0mbg64","category_id":"ck0ur8hbj000sa7s1gjza9wwf","_id":"ck0ur8hbz001ta7s1dh0a9g6a"},{"post_id":"ck0ur8hbs0019a7s1krtdwjnw","category_id":"ck0ur8hbj000sa7s1gjza9wwf","_id":"ck0ur8hc1001wa7s1rivhu8k3"},{"post_id":"ck0ur8hb9000ba7s1aevmxk9r","category_id":"ck0ur8hbj000sa7s1gjza9wwf","_id":"ck0ur8hc20020a7s1ax92zv0k"},{"post_id":"ck0ur8hbv001ga7s19dvqt7ai","category_id":"ck0ur8hbj000sa7s1gjza9wwf","_id":"ck0ur8hc30023a7s1fuooelzd"},{"post_id":"ck0ur8hbw001ka7s1pgsauraj","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hc50027a7s1b5u8rden"},{"post_id":"ck0ur8hbq0014a7s1hy7ds3jz","category_id":"ck0ur8hbv001fa7s13zrb0ls0","_id":"ck0ur8hc6002aa7s1qbmteyl3"},{"post_id":"ck0ur8hbx001na7s1tfv4vwsd","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hc7002ea7s1pbojuqnf"},{"post_id":"ck0ur8hbu001ca7s1sudjlgge","category_id":"ck0ur8hby001pa7s1bmajmiph","_id":"ck0ur8hc8002ha7s1pm6vy22h"},{"post_id":"ck0ur8hc0001va7s1o4ivre4j","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hc9002la7s18f47bwg6"},{"post_id":"ck0ur8hc1001za7s1q45857mi","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hcb002oa7s1tu6v9fpj"},{"post_id":"ck0ur8hc20022a7s112lx1scv","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hcc002qa7s1k57drc5f"},{"post_id":"ck0ur8hc40026a7s1sxr37zjz","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hcd002ua7s1v6wdpl5d"},{"post_id":"ck0ur8hc50029a7s19x8gicvs","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hcf002wa7s1t527qxat"},{"post_id":"ck0ur8hc7002ga7s1xixc4cn6","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hcg002za7s1azg6vgwl"},{"post_id":"ck0ur8hc8002ka7s1ij757v63","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hci0032a7s1uypcnd05"},{"post_id":"ck0ur8hc6002da7s1upglixj3","category_id":"ck0ur8hc8002ia7s1qgtivm9z","_id":"ck0ur8hcn0035a7s1dwqnfyxd"},{"post_id":"ck0ur8hce002va7s1p6ujpem2","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hco0036a7s1vy0l502n"},{"post_id":"ck0ur8hcf002ya7s182joorr3","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hco0038a7s11ppjdc2n"},{"post_id":"ck0ur8hch0031a7s14d8yb8i9","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hco003aa7s16trf45rf"},{"post_id":"ck0ur8hhh003ya7s1pqhf8p24","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hhj0040a7s1j0zht64i"},{"post_id":"ck0ur8hhx0041a7s1kl8si6v9","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0ur8hi10044a7s1t8fzosce"},{"post_id":"ck0urb60w0000dxs1vh23d68i","category_id":"ck0ur8hbv001fa7s13zrb0ls0","_id":"ck0uro2r00002uus16buz0lta"},{"post_id":"ck0urb6160004dxs16rwxszkv","category_id":"ck0uro2qt0001uus1ciyhvueq","_id":"ck0uro2rc0007uus1jxkdigpl"},{"post_id":"ck0urb6130001dxs1jhm81ewb","category_id":"ck0uro2qt0001uus1ciyhvueq","_id":"ck0uro2re000auus1fuj6gidt"},{"post_id":"ck0urb6150002dxs1on2l2k4g","category_id":"ck0uro2qt0001uus1ciyhvueq","_id":"ck0uro2rh000duus162on39xb"},{"post_id":"ck0urb6160003dxs1ny0dbu1b","category_id":"ck0uro2qt0001uus1ciyhvueq","_id":"ck0uro2rj000guus1qa3i2pfr"},{"post_id":"ck0urb6170005dxs1rier79zc","category_id":"ck0uro2rg000cuus1xw7qmmpi","_id":"ck0uro2rl000kuus1igah7taa"},{"post_id":"ck0urb6n60006dxs1w5xx66di","category_id":"ck0ur8hb00003a7s10l8tn8fa","_id":"ck0uro2v2000nuus1a6lwyssn"}],"PostTag":[{"post_id":"ck0ur8has0000a7s1y2ptf9rd","tag_id":"ck0ur8hb20004a7s1ew390crq","_id":"ck0ur8hbd000ga7s1srl120az"},{"post_id":"ck0ur8has0000a7s1y2ptf9rd","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hbf000ja7s1e9meq8jl"},{"post_id":"ck0ur8hbb000fa7s1glg3z7hl","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hbh000na7s1d98d1oms"},{"post_id":"ck0ur8hbd000ha7s1zgf74okf","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hbj000qa7s19s36axke"},{"post_id":"ck0ur8hbg000ma7s1yl04rdo7","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hbl000va7s1bud3aua8"},{"post_id":"ck0ur8hay0002a7s1dj6lyjjy","tag_id":"ck0ur8hb20004a7s1ew390crq","_id":"ck0ur8hbn000ya7s148f1s3ie"},{"post_id":"ck0ur8hay0002a7s1dj6lyjjy","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hbp0013a7s16v5sfeqd"},{"post_id":"ck0ur8hbi000oa7s1e2j049m4","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hbr0016a7s1rq7pwdn8"},{"post_id":"ck0ur8hb20005a7s12domewvk","tag_id":"ck0ur8hbj000ra7s1hwthfrin","_id":"ck0ur8hbt001ba7s1e671oxc6"},{"post_id":"ck0ur8hbm000wa7s1f1ndp7z4","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hbu001ea7s1ijb5peli"},{"post_id":"ck0ur8hbo0011a7s1npjahfdm","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hbw001ja7s1omkxezau"},{"post_id":"ck0ur8hb30006a7s1chcuiq2i","tag_id":"ck0ur8hbo000za7s11vhcewxk","_id":"ck0ur8hbx001ma7s1t95tzyl0"},{"post_id":"ck0ur8hb40007a7s1hp4550ne","tag_id":"ck0ur8hbs0018a7s150ptvefx","_id":"ck0ur8hby001ra7s1lzc2s0t2"},{"post_id":"ck0ur8hbv001ga7s19dvqt7ai","tag_id":"ck0ur8hbs0018a7s150ptvefx","_id":"ck0ur8hbz001ua7s13cd0dt7u"},{"post_id":"ck0ur8hbw001ka7s1pgsauraj","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hc1001ya7s1z3pples2"},{"post_id":"ck0ur8hb7000aa7s18r0mbg64","tag_id":"ck0ur8hbs0018a7s150ptvefx","_id":"ck0ur8hc20021a7s1wofd1o4v"},{"post_id":"ck0ur8hb9000ba7s1aevmxk9r","tag_id":"ck0ur8hbs0018a7s150ptvefx","_id":"ck0ur8hc30024a7s1ythmrroc"},{"post_id":"ck0ur8hbk000ta7s1lqqhjtqd","tag_id":"ck0ur8hb60009a7s1e8lcrfl9","_id":"ck0ur8hc50028a7s1pkoj49g6"},{"post_id":"ck0ur8hbk000ta7s1lqqhjtqd","tag_id":"ck0ur8hc1001xa7s1v5b55a0a","_id":"ck0ur8hc6002ba7s17xktcyqt"},{"post_id":"ck0ur8hbq0014a7s1hy7ds3jz","tag_id":"ck0ur8hc30025a7s1mhjwfcha","_id":"ck0ur8hc7002fa7s11txrt2ii"},{"post_id":"ck0ur8hbs0019a7s1krtdwjnw","tag_id":"ck0ur8hc6002ca7s1zrv4166m","_id":"ck0ur8hca002ma7s1ed0wx0wr"},{"post_id":"ck0ur8hbu001ca7s1sudjlgge","tag_id":"ck0ur8hc8002ja7s143l42fbj","_id":"ck0ur8hcc002sa7s1sndjv44n"},{"post_id":"ck0ur8hbx001na7s1tfv4vwsd","tag_id":"ck0ur8hcc002ra7s1oo8j3gwo","_id":"ck0ur8hcg0030a7s1bdjg07g8"},{"post_id":"ck0ur8hc0001va7s1o4ivre4j","tag_id":"ck0ur8hcf002xa7s18opbhymx","_id":"ck0ur8hco0039a7s1ym3cdhv6"},{"post_id":"ck0ur8hc0001va7s1o4ivre4j","tag_id":"ck0ur8hci0033a7s1jrgf1r90","_id":"ck0ur8hco003ba7s15i94kugs"},{"post_id":"ck0ur8hc1001za7s1q45857mi","tag_id":"ck0ur8hco0037a7s1a6rh26ob","_id":"ck0ur8hcp003da7s1on88akhv"},{"post_id":"ck0ur8hc1001za7s1q45857mi","tag_id":"ck0ur8hc1001xa7s1v5b55a0a","_id":"ck0ur8hcp003ea7s1ma55vh62"},{"post_id":"ck0ur8hc20022a7s112lx1scv","tag_id":"ck0ur8hcc002ra7s1oo8j3gwo","_id":"ck0ur8hcp003ga7s19hd09c6g"},{"post_id":"ck0ur8hc40026a7s1sxr37zjz","tag_id":"ck0ur8hcc002ra7s1oo8j3gwo","_id":"ck0ur8hcq003ia7s1ghw1m71j"},{"post_id":"ck0ur8hc50029a7s19x8gicvs","tag_id":"ck0ur8hcf002xa7s18opbhymx","_id":"ck0ur8hcq003ka7s1a1bskyyp"},{"post_id":"ck0ur8hc6002da7s1upglixj3","tag_id":"ck0ur8hcq003ja7s1gatzlzow","_id":"ck0ur8hcq003ma7s16ilmo28m"},{"post_id":"ck0ur8hc7002ga7s1xixc4cn6","tag_id":"ck0ur8hcc002ra7s1oo8j3gwo","_id":"ck0ur8hcr003oa7s1auybvuga"},{"post_id":"ck0ur8hc8002ka7s1ij757v63","tag_id":"ck0ur8hcq003na7s11c7gou1e","_id":"ck0ur8hcr003qa7s1tblupx0s"},{"post_id":"ck0ur8hce002va7s1p6ujpem2","tag_id":"ck0ur8hcq003na7s11c7gou1e","_id":"ck0ur8hcr003sa7s1duwb9hm0"},{"post_id":"ck0ur8hcf002ya7s182joorr3","tag_id":"ck0ur8hcr003ra7s18utypnns","_id":"ck0ur8hct003va7s1ytfyeaog"},{"post_id":"ck0ur8hcf002ya7s182joorr3","tag_id":"ck0ur8hco0037a7s1a6rh26ob","_id":"ck0ur8hct003wa7s129czdulq"},{"post_id":"ck0ur8hch0031a7s14d8yb8i9","tag_id":"ck0ur8hco0037a7s1a6rh26ob","_id":"ck0ur8hct003xa7s11evcx1fu"},{"post_id":"ck0ur8hhh003ya7s1pqhf8p24","tag_id":"ck0ur8hcq003na7s11c7gou1e","_id":"ck0ur8hhj003za7s1brlkugdh"},{"post_id":"ck0ur8hhx0041a7s1kl8si6v9","tag_id":"ck0ur8hcr003ra7s18utypnns","_id":"ck0ur8hi10042a7s1fpsbd3bt"},{"post_id":"ck0ur8hhx0041a7s1kl8si6v9","tag_id":"ck0ur8hco0037a7s1a6rh26ob","_id":"ck0ur8hi10043a7s1vkd3f2xk"},{"post_id":"ck0urb60w0000dxs1vh23d68i","tag_id":"ck0uro2qd0000uus12iop2l5t","_id":"ck0uro2r50004uus1nyim3ukd"},{"post_id":"ck0urb6130001dxs1jhm81ewb","tag_id":"ck0uro2r40003uus1umx68wvz","_id":"ck0uro2rd0009uus129vuxqj9"},{"post_id":"ck0urb6150002dxs1on2l2k4g","tag_id":"ck0uro2r40003uus1umx68wvz","_id":"ck0uro2rh000euus1v4pmijrh"},{"post_id":"ck0urb6160003dxs1ny0dbu1b","tag_id":"ck0uro2r40003uus1umx68wvz","_id":"ck0uro2rj000huus1mzqye70a"},{"post_id":"ck0urb6160004dxs16rwxszkv","tag_id":"ck0uro2r40003uus1umx68wvz","_id":"ck0uro2rl000juus1eap3mb9z"},{"post_id":"ck0urb6170005dxs1rier79zc","tag_id":"ck0uro2rk000iuus1e6mtay7y","_id":"ck0uro2rl000luus14tzgarja"},{"post_id":"ck0urb6n60006dxs1w5xx66di","tag_id":"ck0uro2v1000muus18ki9a8fu","_id":"ck0uro2v2000ouus1pbc34wr5"}],"Tag":[{"name":"BFS","_id":"ck0ur8hb20004a7s1ew390crq"},{"name":"STL","_id":"ck0ur8hb60009a7s1e8lcrfl9"},{"name":"HTML","_id":"ck0ur8hbj000ra7s1hwthfrin"},{"name":"JS","_id":"ck0ur8hbo000za7s11vhcewxk"},{"name":"python3小练手","_id":"ck0ur8hbs0018a7s150ptvefx"},{"name":"栈","_id":"ck0ur8hc1001xa7s1v5b55a0a"},{"name":"Ubuntu","_id":"ck0ur8hc30025a7s1mhjwfcha"},{"name":"python3项目","_id":"ck0ur8hc6002ca7s1zrv4166m"},{"name":"Python","_id":"ck0ur8hc8002ja7s143l42fbj"},{"name":"动态规划","_id":"ck0ur8hcc002ra7s1oo8j3gwo"},{"name":"DFS","_id":"ck0ur8hcf002xa7s18opbhymx"},{"name":"递归","_id":"ck0ur8hci0033a7s1jrgf1r90"},{"name":"C/C++题目","_id":"ck0ur8hco0037a7s1a6rh26ob"},{"name":"网站","_id":"ck0ur8hcq003ja7s1gatzlzow"},{"name":"蓝桥杯","_id":"ck0ur8hcq003na7s11c7gou1e"},{"name":"经历","_id":"ck0ur8hcr003ra7s18utypnns"},{"name":"Linux","_id":"ck0uro2qd0000uus12iop2l5t"},{"name":"应用","_id":"ck0uro2r40003uus1umx68wvz"},{"name":"SQL","_id":"ck0uro2rk000iuus1e6mtay7y"},{"name":"模板","_id":"ck0uro2v1000muus18ki9a8fu"}]}}